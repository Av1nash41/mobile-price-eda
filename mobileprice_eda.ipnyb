{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "Mlbv6KRuSfoC",
   "metadata": {
    "id": "Mlbv6KRuSfoC"
   },
   "source": [
    "\n",
    "\n",
    "- Table of Contents:\n",
    "\n",
    "    - Data Summary\n",
    "    - Data Cleaning\n",
    "    - Exploratory Data Analysis\n",
    "    - Importing libraries\n",
    "    - Upsampling, Splitting the Dataset & Standardization\n",
    "    - Model Building on Main dataset\n",
    "          Logistic Regression Model\n",
    "          K-Nearest Neighbours Model\n",
    "          SVC \n",
    "          Decision Trees Classifier\n",
    "          Random Forest Classifier\n",
    "          XGBoost Classifier\n",
    "    - Evolution matrix\n",
    "    - Scaling\n",
    "          Logistic Regression Model\n",
    "          K-Nearest Neighbours Model\n",
    "          SVC\n",
    "          logistic regression after polynomial  degree 2\n",
    "    - HyperParameter Tuning\n",
    "          Logistic Regression Model\n",
    "          Logistic regression after polynomial  degree 2\n",
    "          K-Nearest Neighbours Model\n",
    "          XGBoost Classifier\n",
    "    - Comparing base fit and tuned fit,scaled tuned fit and scaled fit.\n",
    "\n",
    "    - Final Conlusion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "id": "e8a07ceb",
   "metadata": {
    "id": "e8a07ceb"
   },
   "outputs": [],
   "source": [
    "!pip install jovian --upgrade -q\n",
    "import jovian\n",
    "jovian.set_project('ml_projectzzz')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "id": "3d951c70",
   "metadata": {
    "id": "3d951c70"
   },
   "outputs": [],
   "source": [
    "!pip install jovian opendatasets --upgrade --quiet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f60e3e59",
   "metadata": {
    "id": "f60e3e59"
   },
   "outputs": [],
   "source": [
    "dataset_url = 'https://www.kaggle.com/iabhishekofficial/mobile-price-classification?select=train.csv' "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5ed6f1c1",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "5ed6f1c1",
    "outputId": "67e6d1d4-9721-466f-a0a6-0d74eda32cbe"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Please provide your Kaggle credentials to download this dataset. Learn more: http://bit.ly/kaggle-creds\n",
      "Your Kaggle username: abhichand\n",
      "Your Kaggle Key: ··········\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 70.6k/70.6k [00:00<00:00, 15.2MB/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading mobile-price-classification.zip to ./mobile-price-classification\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "import opendatasets as od\n",
    "od.download(dataset_url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "10UJoka5WiiS",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "10UJoka5WiiS",
    "outputId": "4e545df3-a9d7-4a7e-b456-0968fc4c48bb"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting sidetable\n",
      "  Downloading sidetable-0.8.0-py3-none-any.whl (15 kB)\n",
      "Requirement already satisfied: pandas>=1.0 in /usr/local/lib/python3.7/dist-packages (from sidetable) (1.1.5)\n",
      "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0->sidetable) (2018.9)\n",
      "Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0->sidetable) (1.19.5)\n",
      "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0->sidetable) (2.8.1)\n",
      "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=1.0->sidetable) (1.15.0)\n",
      "Installing collected packages: sidetable\n",
      "Successfully installed sidetable-0.8.0\n"
     ]
    }
   ],
   "source": [
    "pip install sidetable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9a31b95f",
   "metadata": {
    "id": "9a31b95f"
   },
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "import seaborn as sns \n",
    "import matplotlib.pyplot as plt \n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC \n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "import warnings \n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "import sidetable as stb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "09309d59",
   "metadata": {
    "id": "09309d59"
   },
   "outputs": [],
   "source": [
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6fc49039",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "6fc49039",
    "outputId": "60423826-ad5d-4c8d-f584-871a7257c9c3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>16</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n",
       "0        188        2   2         20       756  2549     9     7         19   \n",
       "1        136        3   6        905      1988  2631    17     3          7   \n",
       "2        145        5   6       1263      1716  2603    11     2          9   \n",
       "3        131        6   9       1216      1786  2769    16     8         11   \n",
       "4        141        2  14       1208      1212  1411     8     2         15   \n",
       "\n",
       "   three_g  touch_screen  wifi  price_range  \n",
       "0        0             0     1            1  \n",
       "1        1             1     0            2  \n",
       "2        1             1     0            2  \n",
       "3        1             0     0            2  \n",
       "4        1             1     0            1  "
      ]
     },
     "execution_count": 12,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('train.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "aa0666ce",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "aa0666ce",
    "outputId": "b809da1f-460f-4d32-c395-6b76ec4b8c3e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2000 entries, 0 to 1999\n",
      "Data columns (total 21 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   battery_power  2000 non-null   int64  \n",
      " 1   blue           2000 non-null   int64  \n",
      " 2   clock_speed    2000 non-null   float64\n",
      " 3   dual_sim       2000 non-null   int64  \n",
      " 4   fc             2000 non-null   int64  \n",
      " 5   four_g         2000 non-null   int64  \n",
      " 6   int_memory     2000 non-null   int64  \n",
      " 7   m_dep          2000 non-null   float64\n",
      " 8   mobile_wt      2000 non-null   int64  \n",
      " 9   n_cores        2000 non-null   int64  \n",
      " 10  pc             2000 non-null   int64  \n",
      " 11  px_height      2000 non-null   int64  \n",
      " 12  px_width       2000 non-null   int64  \n",
      " 13  ram            2000 non-null   int64  \n",
      " 14  sc_h           2000 non-null   int64  \n",
      " 15  sc_w           2000 non-null   int64  \n",
      " 16  talk_time      2000 non-null   int64  \n",
      " 17  three_g        2000 non-null   int64  \n",
      " 18  touch_screen   2000 non-null   int64  \n",
      " 19  wifi           2000 non-null   int64  \n",
      " 20  price_range    2000 non-null   int64  \n",
      "dtypes: float64(2), int64(19)\n",
      "memory usage: 328.2 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()\n",
    "\n",
    "## all of the column types are in int or float generally speaking if we want to use all the columns for machine learning process \n",
    "## it's  ready without any encoding \n",
    "# this data probaby has no null values because we can see from the range index is 2000 value and all each columns have 2000 value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fedc3c06",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 320
    },
    "id": "fedc3c06",
    "outputId": "2310c944-a087-4bc2-cf19-8d579e2fe784"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1238.518500</td>\n",
       "      <td>0.4950</td>\n",
       "      <td>1.522250</td>\n",
       "      <td>0.509500</td>\n",
       "      <td>4.309500</td>\n",
       "      <td>0.521500</td>\n",
       "      <td>32.046500</td>\n",
       "      <td>0.501750</td>\n",
       "      <td>140.249000</td>\n",
       "      <td>4.520500</td>\n",
       "      <td>9.916500</td>\n",
       "      <td>645.108000</td>\n",
       "      <td>1251.515500</td>\n",
       "      <td>2124.213000</td>\n",
       "      <td>12.306500</td>\n",
       "      <td>5.767000</td>\n",
       "      <td>11.011000</td>\n",
       "      <td>0.761500</td>\n",
       "      <td>0.503000</td>\n",
       "      <td>0.507000</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>439.418206</td>\n",
       "      <td>0.5001</td>\n",
       "      <td>0.816004</td>\n",
       "      <td>0.500035</td>\n",
       "      <td>4.341444</td>\n",
       "      <td>0.499662</td>\n",
       "      <td>18.145715</td>\n",
       "      <td>0.288416</td>\n",
       "      <td>35.399655</td>\n",
       "      <td>2.287837</td>\n",
       "      <td>6.064315</td>\n",
       "      <td>443.780811</td>\n",
       "      <td>432.199447</td>\n",
       "      <td>1084.732044</td>\n",
       "      <td>4.213245</td>\n",
       "      <td>4.356398</td>\n",
       "      <td>5.463955</td>\n",
       "      <td>0.426273</td>\n",
       "      <td>0.500116</td>\n",
       "      <td>0.500076</td>\n",
       "      <td>1.118314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>501.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>256.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>851.750000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.700000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>109.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>282.750000</td>\n",
       "      <td>874.750000</td>\n",
       "      <td>1207.500000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1226.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>141.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>564.000000</td>\n",
       "      <td>1247.000000</td>\n",
       "      <td>2146.500000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1615.250000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>2.200000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>947.250000</td>\n",
       "      <td>1633.000000</td>\n",
       "      <td>3064.500000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1998.000000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>1998.000000</td>\n",
       "      <td>3998.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       battery_power       blue  clock_speed     dual_sim           fc  \\\n",
       "count    2000.000000  2000.0000  2000.000000  2000.000000  2000.000000   \n",
       "mean     1238.518500     0.4950     1.522250     0.509500     4.309500   \n",
       "std       439.418206     0.5001     0.816004     0.500035     4.341444   \n",
       "min       501.000000     0.0000     0.500000     0.000000     0.000000   \n",
       "25%       851.750000     0.0000     0.700000     0.000000     1.000000   \n",
       "50%      1226.000000     0.0000     1.500000     1.000000     3.000000   \n",
       "75%      1615.250000     1.0000     2.200000     1.000000     7.000000   \n",
       "max      1998.000000     1.0000     3.000000     1.000000    19.000000   \n",
       "\n",
       "            four_g   int_memory        m_dep    mobile_wt      n_cores  \\\n",
       "count  2000.000000  2000.000000  2000.000000  2000.000000  2000.000000   \n",
       "mean      0.521500    32.046500     0.501750   140.249000     4.520500   \n",
       "std       0.499662    18.145715     0.288416    35.399655     2.287837   \n",
       "min       0.000000     2.000000     0.100000    80.000000     1.000000   \n",
       "25%       0.000000    16.000000     0.200000   109.000000     3.000000   \n",
       "50%       1.000000    32.000000     0.500000   141.000000     4.000000   \n",
       "75%       1.000000    48.000000     0.800000   170.000000     7.000000   \n",
       "max       1.000000    64.000000     1.000000   200.000000     8.000000   \n",
       "\n",
       "                pc    px_height     px_width          ram         sc_h  \\\n",
       "count  2000.000000  2000.000000  2000.000000  2000.000000  2000.000000   \n",
       "mean      9.916500   645.108000  1251.515500  2124.213000    12.306500   \n",
       "std       6.064315   443.780811   432.199447  1084.732044     4.213245   \n",
       "min       0.000000     0.000000   500.000000   256.000000     5.000000   \n",
       "25%       5.000000   282.750000   874.750000  1207.500000     9.000000   \n",
       "50%      10.000000   564.000000  1247.000000  2146.500000    12.000000   \n",
       "75%      15.000000   947.250000  1633.000000  3064.500000    16.000000   \n",
       "max      20.000000  1960.000000  1998.000000  3998.000000    19.000000   \n",
       "\n",
       "              sc_w    talk_time      three_g  touch_screen         wifi  \\\n",
       "count  2000.000000  2000.000000  2000.000000   2000.000000  2000.000000   \n",
       "mean      5.767000    11.011000     0.761500      0.503000     0.507000   \n",
       "std       4.356398     5.463955     0.426273      0.500116     0.500076   \n",
       "min       0.000000     2.000000     0.000000      0.000000     0.000000   \n",
       "25%       2.000000     6.000000     1.000000      0.000000     0.000000   \n",
       "50%       5.000000    11.000000     1.000000      1.000000     1.000000   \n",
       "75%       9.000000    16.000000     1.000000      1.000000     1.000000   \n",
       "max      18.000000    20.000000     1.000000      1.000000     1.000000   \n",
       "\n",
       "       price_range  \n",
       "count  2000.000000  \n",
       "mean      1.500000  \n",
       "std       1.118314  \n",
       "min       0.000000  \n",
       "25%       0.750000  \n",
       "50%       1.500000  \n",
       "75%       2.250000  \n",
       "max       3.000000  "
      ]
     },
     "execution_count": 14,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46806679",
   "metadata": {
    "id": "46806679"
   },
   "source": [
    "## Checking the null value and the outliers of the columns \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "fe789363",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "fe789363",
    "outputId": "a7c45b4c-ebd5-4817-a91f-b50865ef2263",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "battery_power    0\n",
       "blue             0\n",
       "clock_speed      0\n",
       "dual_sim         0\n",
       "fc               0\n",
       "four_g           0\n",
       "int_memory       0\n",
       "m_dep            0\n",
       "mobile_wt        0\n",
       "n_cores          0\n",
       "pc               0\n",
       "px_height        0\n",
       "px_width         0\n",
       "ram              0\n",
       "sc_h             0\n",
       "sc_w             0\n",
       "talk_time        0\n",
       "three_g          0\n",
       "touch_screen     0\n",
       "wifi             0\n",
       "price_range      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## sanity check to make sure there's no null value in the columns \n",
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "12d15126",
   "metadata": {
    "id": "12d15126"
   },
   "source": [
    "great now we know there's no null value in the columns ,\n",
    "we don't have to worry about dropping or filling some null val"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4f051031",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 530
    },
    "id": "4f051031",
    "outputId": "b1f5bd1a-45db-42c6-b0da-1cd0031a4cb6"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 21 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## outlier checking with a box plot \n",
    "\n",
    "plt.figure(figsize = (20, 10))\n",
    "x = 1 \n",
    "\n",
    "for column in df.columns :\n",
    "    plt.subplot(7, 3, x)\n",
    "    sns.boxplot(df[column])\n",
    "    x+= 1\n",
    "\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "626d2f35",
   "metadata": {
    "id": "626d2f35"
   },
   "source": [
    "there's probably an outliers in fc column and we found some outliers there.\n",
    "there are also and outliers in the px_height columns \n",
    "we won't worry about the outliers because it seems it only small proportion of the value we will figure out how many outliers are in those columns "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3982ea61",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 634
    },
    "id": "3982ea61",
    "outputId": "c372d383-cb43-4aa9-d409-20003b425fe7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>1137</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1.0</td>\n",
       "      <td>196</td>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>942</td>\n",
       "      <td>1179</td>\n",
       "      <td>3616</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>1569</td>\n",
       "      <td>0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>0.3</td>\n",
       "      <td>110</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>45</td>\n",
       "      <td>1942</td>\n",
       "      <td>1260</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>226</th>\n",
       "      <td>1708</td>\n",
       "      <td>1</td>\n",
       "      <td>2.4</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>49</td>\n",
       "      <td>0.1</td>\n",
       "      <td>109</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>233</td>\n",
       "      <td>517</td>\n",
       "      <td>3388</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>229</th>\n",
       "      <td>1689</td>\n",
       "      <td>0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0.3</td>\n",
       "      <td>127</td>\n",
       "      <td>3</td>\n",
       "      <td>18</td>\n",
       "      <td>954</td>\n",
       "      <td>1200</td>\n",
       "      <td>2766</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>300</th>\n",
       "      <td>1937</td>\n",
       "      <td>1</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>0.6</td>\n",
       "      <td>189</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>1728</td>\n",
       "      <td>1767</td>\n",
       "      <td>3321</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>305</th>\n",
       "      <td>1348</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0.3</td>\n",
       "      <td>98</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>1869</td>\n",
       "      <td>1942</td>\n",
       "      <td>955</td>\n",
       "      <td>18</td>\n",
       "      <td>11</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>372</th>\n",
       "      <td>1703</td>\n",
       "      <td>1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>55</td>\n",
       "      <td>0.7</td>\n",
       "      <td>138</td>\n",
       "      <td>5</td>\n",
       "      <td>19</td>\n",
       "      <td>1411</td>\n",
       "      <td>1711</td>\n",
       "      <td>2993</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>584</th>\n",
       "      <td>946</td>\n",
       "      <td>1</td>\n",
       "      <td>2.6</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0.1</td>\n",
       "      <td>166</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>1698</td>\n",
       "      <td>1771</td>\n",
       "      <td>3720</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1387</th>\n",
       "      <td>1533</td>\n",
       "      <td>1</td>\n",
       "      <td>1.1</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>0.3</td>\n",
       "      <td>160</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>1054</td>\n",
       "      <td>1393</td>\n",
       "      <td>2520</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1406</th>\n",
       "      <td>1731</td>\n",
       "      <td>1</td>\n",
       "      <td>2.3</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0.5</td>\n",
       "      <td>171</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>142</td>\n",
       "      <td>1039</td>\n",
       "      <td>1220</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1416</th>\n",
       "      <td>1448</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.2</td>\n",
       "      <td>100</td>\n",
       "      <td>5</td>\n",
       "      <td>19</td>\n",
       "      <td>846</td>\n",
       "      <td>1144</td>\n",
       "      <td>593</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1549</th>\n",
       "      <td>1772</td>\n",
       "      <td>1</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>0.5</td>\n",
       "      <td>159</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>837</td>\n",
       "      <td>1405</td>\n",
       "      <td>1146</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1554</th>\n",
       "      <td>1957</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>0.8</td>\n",
       "      <td>151</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>1194</td>\n",
       "      <td>1727</td>\n",
       "      <td>1115</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1693</th>\n",
       "      <td>695</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.6</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>1649</td>\n",
       "      <td>1829</td>\n",
       "      <td>2855</td>\n",
       "      <td>16</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1705</th>\n",
       "      <td>1290</td>\n",
       "      <td>1</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>0.3</td>\n",
       "      <td>110</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>405</td>\n",
       "      <td>742</td>\n",
       "      <td>879</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1880</th>\n",
       "      <td>1720</td>\n",
       "      <td>0</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.8</td>\n",
       "      <td>188</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>334</td>\n",
       "      <td>896</td>\n",
       "      <td>2522</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1882</th>\n",
       "      <td>591</td>\n",
       "      <td>0</td>\n",
       "      <td>2.1</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>0.5</td>\n",
       "      <td>196</td>\n",
       "      <td>7</td>\n",
       "      <td>20</td>\n",
       "      <td>952</td>\n",
       "      <td>1726</td>\n",
       "      <td>704</td>\n",
       "      <td>14</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1888</th>\n",
       "      <td>1544</td>\n",
       "      <td>0</td>\n",
       "      <td>2.4</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0.1</td>\n",
       "      <td>186</td>\n",
       "      <td>7</td>\n",
       "      <td>20</td>\n",
       "      <td>470</td>\n",
       "      <td>844</td>\n",
       "      <td>489</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "95             1137     1          1.0         0  18       0           7   \n",
       "169            1569     0          2.8         1  17       0          44   \n",
       "226            1708     1          2.4         1  18       1          49   \n",
       "229            1689     0          1.8         0  17       0          24   \n",
       "300            1937     1          1.7         0  17       0          58   \n",
       "305            1348     0          2.0         0  18       0          52   \n",
       "372            1703     1          1.5         1  17       1          55   \n",
       "584             946     1          2.6         1  17       0           5   \n",
       "1387           1533     1          1.1         1  18       1          17   \n",
       "1406           1731     1          2.3         1  18       0          60   \n",
       "1416           1448     0          0.5         1  18       0           2   \n",
       "1549           1772     1          1.6         0  17       1          45   \n",
       "1554           1957     0          1.2         1  18       1          36   \n",
       "1693            695     0          0.5         0  18       1          12   \n",
       "1705           1290     1          1.4         1  19       1          35   \n",
       "1880           1720     0          1.6         0  18       1           2   \n",
       "1882            591     0          2.1         1  18       1          16   \n",
       "1888           1544     0          2.4         0  18       1          12   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  sc_w  \\\n",
       "95      1.0        196        3  19        942      1179  3616    13     5   \n",
       "169     0.3        110        4  20         45      1942  1260     9     2   \n",
       "226     0.1        109        1  19        233       517  3388     6     4   \n",
       "229     0.3        127        3  18        954      1200  2766     7     2   \n",
       "300     0.6        189        1  19       1728      1767  3321     5     4   \n",
       "305     0.3         98        3  20       1869      1942   955    18    11   \n",
       "372     0.7        138        5  19       1411      1711  2993     5     1   \n",
       "584     0.1        166        3  20       1698      1771  3720    15     7   \n",
       "1387    0.3        160        4  20       1054      1393  2520     8     2   \n",
       "1406    0.5        171        4  20        142      1039  1220     9     3   \n",
       "1416    0.2        100        5  19        846      1144   593     9     4   \n",
       "1549    0.5        159        2  18        837      1405  1146     6     1   \n",
       "1554    0.8        151        2  19       1194      1727  1115    16     2   \n",
       "1693    0.6        196        2  19       1649      1829  2855    16    13   \n",
       "1705    0.3        110        4  20        405       742   879    16     2   \n",
       "1880    0.8        188        5  20        334       896  2522    10     5   \n",
       "1882    0.5        196        7  20        952      1726   704    14     5   \n",
       "1888    0.1        186        7  20        470       844   489     9     4   \n",
       "\n",
       "      talk_time  three_g  touch_screen  wifi  price_range  \n",
       "95           12        1             1     1            3  \n",
       "169          17        1             0     0            1  \n",
       "226          16        1             1     1            3  \n",
       "229           7        0             1     1            3  \n",
       "300          14        1             1     0            3  \n",
       "305           7        1             1     1            1  \n",
       "372          20        1             1     1            3  \n",
       "584           4        0             1     0            3  \n",
       "1387         11        1             0     1            2  \n",
       "1406         20        0             1     0            1  \n",
       "1416         18        1             1     1            0  \n",
       "1549         17        1             1     0            1  \n",
       "1554         18        1             0     1            1  \n",
       "1693          7        1             1     1            2  \n",
       "1705          8        1             0     0            0  \n",
       "1880          2        1             0     1            2  \n",
       "1882          4        1             1     1            0  \n",
       "1888          2        1             0     1            0  "
      ]
     },
     "execution_count": 17,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## getting the number of the outliers in fc column\n",
    "\n",
    "df_description = df.describe()\n",
    "fc_Q1 =  df_description['fc']['25%']\n",
    "fc_Q3 = df_description['fc']['75%']\n",
    "fc_IQR = fc_Q3 - fc_Q1\n",
    "\n",
    "up_fence = fc_Q3 + (1.5 * fc_IQR)\n",
    "lo_Fence = fc_Q1 - (1.5 * fc_IQR)\n",
    "\n",
    "fc_outliers =  df[(df['fc'] < lo_Fence) | (df['fc']> up_fence)]\n",
    "fc_outliers\n",
    "\n",
    "# there are 18 phone that has a front camera outlier value "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7f057425",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 132
    },
    "id": "7f057425",
    "outputId": "8a32e975-f76f-416f-f41b-0a01f7097d2c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>1413</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>0.4</td>\n",
       "      <td>104</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1949</td>\n",
       "      <td>1994</td>\n",
       "      <td>2973</td>\n",
       "      <td>17</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1771</th>\n",
       "      <td>1230</td>\n",
       "      <td>1</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>48</td>\n",
       "      <td>0.7</td>\n",
       "      <td>111</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>1960</td>\n",
       "      <td>1963</td>\n",
       "      <td>1622</td>\n",
       "      <td>18</td>\n",
       "      <td>17</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "988            1413     1          0.5         1   4       1          45   \n",
       "1771           1230     1          1.6         0   0       1          48   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  sc_w  \\\n",
       "988     0.4        104        5   6       1949      1994  2973    17     8   \n",
       "1771    0.7        111        7   2       1960      1963  1622    18    17   \n",
       "\n",
       "      talk_time  three_g  touch_screen  wifi  price_range  \n",
       "988          15        1             0     1            3  \n",
       "1771         16        1             1     1            2  "
      ]
     },
     "execution_count": 18,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "px_height_Q1 =  df_description['px_height']['25%']\n",
    "px_height_Q3 = df_description['px_height']['75%']\n",
    "px_height_IQR = px_height_Q3 - px_height_Q1\n",
    "\n",
    "up_fence_px_height = px_height_Q3 + (1.5 * px_height_IQR)\n",
    "lo_Fence_px_height = px_height_Q1 - (1.5 * px_height_IQR)\n",
    "\n",
    "px_height_outliers =  df[(df['px_height'] < lo_Fence_px_height) | (df['px_height']> up_fence_px_height)]\n",
    "px_height_outliers\n",
    "\n",
    "# there's only 2 phone that has an outlier value in the px_height column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "51726b59",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "51726b59",
    "outputId": "09fefc6e-77ae-4713-dee7-0cf5dbfe4dfe"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "total outliers of fc : 18\n",
      "total outliers of px_height: 2\n",
      "total percentage of outliers: 1.0%\n"
     ]
    }
   ],
   "source": [
    "# total_number of outliers \n",
    "\n",
    "total_outliers = len(fc_outliers) + len(px_height_outliers)\n",
    "print(f\"total outliers of fc : {len(fc_outliers)}\")\n",
    "print(f\"total outliers of px_height: {len(px_height_outliers)}\" )\n",
    "print(f\"total percentage of outliers: {round((total_outliers / len(df))*100,2)}%\")\n",
    "\n",
    "# the outliers of the dataset is around 1 % of the entire dataset so we won't worry much about it because it polly wouldn't affect\n",
    "# the analysis process \n",
    "# and we will try to bin the outliers value to have  a better analysis process "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3c733f1d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 132
    },
    "id": "3c733f1d",
    "outputId": "803d7f9d-1c76-4b6c-fbea-5f4ea8d73a57"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1481</th>\n",
       "      <td>1834</td>\n",
       "      <td>0</td>\n",
       "      <td>2.1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>0.1</td>\n",
       "      <td>99</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>1987</td>\n",
       "      <td>3692</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1933</th>\n",
       "      <td>897</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>154</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>994</td>\n",
       "      <td>1958</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "1481           1834     0          2.1         0   7       1          40   \n",
       "1933            897     1          2.0         0   3       1           2   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  sc_w  \\\n",
       "1481    0.1         99        4  11          0      1987  3692    13     0   \n",
       "1933    0.6        154        8  10          0       994  1958     7     5   \n",
       "\n",
       "      talk_time  three_g  touch_screen  wifi  price_range  \n",
       "1481         16        1             1     0            3  \n",
       "1933          7        1             1     0            1  "
      ]
     },
     "execution_count": 20,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Handling Random Values\n",
    "\n",
    "df[df['px_height'] == 0]\n",
    "\n",
    "# we will group by the price range and replace the 0 value of px_height to the averaege of px_height based on price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "c9923415",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "c9923415",
    "outputId": "450b406f-68fb-470a-bf04-34d0838c7a93"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "price_range\n",
       "0    536.408\n",
       "1    666.892\n",
       "2    632.284\n",
       "3    744.848\n",
       "Name: px_height, dtype: float64"
      ]
     },
     "execution_count": 21,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('price_range')['px_height'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d99924b5",
   "metadata": {
    "id": "d99924b5"
   },
   "outputs": [],
   "source": [
    "df['px_height'] = df['px_height'].replace(0, np.nan)\n",
    "\n",
    "# the index of the row with null value is \n",
    "# 1481\n",
    "# 1933"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "197f16de",
   "metadata": {
    "id": "197f16de"
   },
   "outputs": [],
   "source": [
    "df['px_height'] = df['px_height'].fillna(df.groupby('price_range')['px_height'].transform('mean'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "49516a79",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 69
    },
    "id": "49516a79",
    "outputId": "cada574a-737f-40a3-8084-8df054aa07b7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [battery_power, blue, clock_speed, dual_sim, fc, four_g, int_memory, m_dep, mobile_wt, n_cores, pc, px_height, px_width, ram, sc_h, sc_w, talk_time, three_g, touch_screen, wifi, price_range]\n",
       "Index: []"
      ]
     },
     "execution_count": 24,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['px_height'] == 0]\n",
    "\n",
    "# now there is no 0 value in the in the pixel height "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "49ba70ab",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 444
    },
    "id": "49ba70ab",
    "outputId": "508f0206-78d7-4c25-d06b-eae19411924b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1815</td>\n",
       "      <td>0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>0.6</td>\n",
       "      <td>159</td>\n",
       "      <td>4</td>\n",
       "      <td>17</td>\n",
       "      <td>607.0</td>\n",
       "      <td>748</td>\n",
       "      <td>1482</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>503</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>0.4</td>\n",
       "      <td>111</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>201.0</td>\n",
       "      <td>1245</td>\n",
       "      <td>2583</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>1310</td>\n",
       "      <td>1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>0.6</td>\n",
       "      <td>100</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>178.0</td>\n",
       "      <td>1919</td>\n",
       "      <td>3845</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>1253</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>152</td>\n",
       "      <td>2</td>\n",
       "      <td>19</td>\n",
       "      <td>685.0</td>\n",
       "      <td>714</td>\n",
       "      <td>1878</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>1547</td>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>0.7</td>\n",
       "      <td>198</td>\n",
       "      <td>3</td>\n",
       "      <td>19</td>\n",
       "      <td>1042.0</td>\n",
       "      <td>1832</td>\n",
       "      <td>2059</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1918</th>\n",
       "      <td>772</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>0.6</td>\n",
       "      <td>97</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>317.0</td>\n",
       "      <td>1805</td>\n",
       "      <td>2782</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1920</th>\n",
       "      <td>591</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>0.9</td>\n",
       "      <td>90</td>\n",
       "      <td>6</td>\n",
       "      <td>17</td>\n",
       "      <td>892.0</td>\n",
       "      <td>1603</td>\n",
       "      <td>3746</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1946</th>\n",
       "      <td>590</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>32</td>\n",
       "      <td>0.4</td>\n",
       "      <td>141</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>227.0</td>\n",
       "      <td>509</td>\n",
       "      <td>1817</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1954</th>\n",
       "      <td>686</td>\n",
       "      <td>1</td>\n",
       "      <td>2.7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>0.1</td>\n",
       "      <td>194</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>64.0</td>\n",
       "      <td>745</td>\n",
       "      <td>1503</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981</th>\n",
       "      <td>1454</td>\n",
       "      <td>0</td>\n",
       "      <td>2.6</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0.4</td>\n",
       "      <td>199</td>\n",
       "      <td>3</td>\n",
       "      <td>20</td>\n",
       "      <td>698.0</td>\n",
       "      <td>1018</td>\n",
       "      <td>1300</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>180 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "12             1815     0          2.8         0   2       0          33   \n",
       "24              503     0          1.2         1   5       1           8   \n",
       "33             1310     1          2.2         1   0       1          51   \n",
       "42             1253     1          0.5         1   5       1           5   \n",
       "50             1547     1          3.0         1   2       1          14   \n",
       "...             ...   ...          ...       ...  ..     ...         ...   \n",
       "1918            772     0          1.0         1   0       1          23   \n",
       "1920            591     1          0.5         1   1       1          16   \n",
       "1946            590     1          1.2         1   0       0          32   \n",
       "1954            686     1          2.7         1   0       0          36   \n",
       "1981           1454     0          2.6         0   8       0           6   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  sc_w  \\\n",
       "12      0.6        159        4  17      607.0       748  1482    18     0   \n",
       "24      0.4        111        3  13      201.0      1245  2583    11     0   \n",
       "33      0.6        100        4   0      178.0      1919  3845     7     0   \n",
       "42      0.2        152        2  19      685.0       714  1878    15     0   \n",
       "50      0.7        198        3  19     1042.0      1832  2059     5     0   \n",
       "...     ...        ...      ...  ..        ...       ...   ...   ...   ...   \n",
       "1918    0.6         97        7  11      317.0      1805  2782     7     0   \n",
       "1920    0.9         90        6  17      892.0      1603  3746     5     0   \n",
       "1946    0.4        141        6   1      227.0       509  1817    10     0   \n",
       "1954    0.1        194        4   1       64.0       745  1503    10     0   \n",
       "1981    0.4        199        3  20      698.0      1018  1300    10     0   \n",
       "\n",
       "      talk_time  three_g  touch_screen  wifi  price_range  \n",
       "12            2        1             0     0            1  \n",
       "24           12        1             0     0            1  \n",
       "33           12        1             1     0            3  \n",
       "42            4        1             1     0            1  \n",
       "50           15        1             0     1            2  \n",
       "...         ...      ...           ...   ...          ...  \n",
       "1918         17        1             0     0            2  \n",
       "1920          5        1             1     0            3  \n",
       "1946          6        0             1     0            0  \n",
       "1954         13        0             0     0            0  \n",
       "1981          2        0             0     1            1  \n",
       "\n",
       "[180 rows x 21 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['sc_w'] == 0]\n",
    "\n",
    "# this is almost 10 % of the data has a random values we will fill with the average of phone screen width to replace the 0 value\n",
    "# we will group by the the price range and fill it based on the mean screensize per price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "efb7c04c",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "efb7c04c",
    "outputId": "2974956d-1154-4c0c-ce64-6b607fb95589"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "price_range\n",
       "0    5.682\n",
       "1    5.544\n",
       "2    5.714\n",
       "3    6.128\n",
       "Name: sc_w, dtype: float64"
      ]
     },
     "execution_count": 26,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('price_range')['sc_w'].mean()\n",
    "\n",
    "# this is the the mean for each price range and we will fill the 0 value of sc_w based on their price range \n",
    "# the index to check after filling are 33,42,50,1954 all this index representing all price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "ddf6bdca",
   "metadata": {
    "id": "ddf6bdca"
   },
   "outputs": [],
   "source": [
    "# first we turn all the 0 value into nan value this is just because preference\n",
    "\n",
    "df['sc_w'] = df['sc_w'].replace(0, np.nan)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "874766c1",
   "metadata": {
    "id": "874766c1"
   },
   "outputs": [],
   "source": [
    "df['sc_w'] = df['sc_w'].fillna(df.groupby('price_range')['sc_w'].transform('mean'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "cd986ce4",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 69
    },
    "id": "cd986ce4",
    "outputId": "d3d9241b-aa7f-4e9a-d332-0e50d9afb392"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [battery_power, blue, clock_speed, dual_sim, fc, four_g, int_memory, m_dep, mobile_wt, n_cores, pc, px_height, px_width, ram, sc_h, sc_w, talk_time, three_g, touch_screen, wifi, price_range]\n",
       "Index: []"
      ]
     },
     "execution_count": 29,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['sc_w'] == 0]\n",
    "\n",
    "# now the screen width has no 0 values as well "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "c69b28c8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 444
    },
    "id": "c69b28c8",
    "outputId": "fe13d10f-1330-49c5-a423-83d52d3b0665"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20.0</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>9</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1520</td>\n",
       "      <td>1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>33</td>\n",
       "      <td>0.5</td>\n",
       "      <td>177</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>151.0</td>\n",
       "      <td>1005</td>\n",
       "      <td>3826</td>\n",
       "      <td>14</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1453</td>\n",
       "      <td>0</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>52</td>\n",
       "      <td>0.3</td>\n",
       "      <td>96</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>187.0</td>\n",
       "      <td>1311</td>\n",
       "      <td>2373</td>\n",
       "      <td>10</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>1319</td>\n",
       "      <td>1</td>\n",
       "      <td>0.9</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>107</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>85.0</td>\n",
       "      <td>1152</td>\n",
       "      <td>2227</td>\n",
       "      <td>18</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>1310</td>\n",
       "      <td>1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>0.6</td>\n",
       "      <td>100</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>178.0</td>\n",
       "      <td>1919</td>\n",
       "      <td>3845</td>\n",
       "      <td>7</td>\n",
       "      <td>6.646421</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1963</th>\n",
       "      <td>1906</td>\n",
       "      <td>1</td>\n",
       "      <td>1.9</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>55</td>\n",
       "      <td>0.2</td>\n",
       "      <td>113</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>629</td>\n",
       "      <td>1871</td>\n",
       "      <td>13</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1965</th>\n",
       "      <td>659</td>\n",
       "      <td>0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.1</td>\n",
       "      <td>85</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>190.0</td>\n",
       "      <td>657</td>\n",
       "      <td>967</td>\n",
       "      <td>10</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1972</th>\n",
       "      <td>1191</td>\n",
       "      <td>0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>0.8</td>\n",
       "      <td>89</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>42.0</td>\n",
       "      <td>807</td>\n",
       "      <td>824</td>\n",
       "      <td>19</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1979</th>\n",
       "      <td>1614</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0.1</td>\n",
       "      <td>161</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>173.0</td>\n",
       "      <td>1219</td>\n",
       "      <td>1832</td>\n",
       "      <td>15</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1991</th>\n",
       "      <td>1882</td>\n",
       "      <td>0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.8</td>\n",
       "      <td>113</td>\n",
       "      <td>8</td>\n",
       "      <td>19</td>\n",
       "      <td>4.0</td>\n",
       "      <td>743</td>\n",
       "      <td>3579</td>\n",
       "      <td>19</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>345 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "0               842     0          2.2         0   1       0           7   \n",
       "11             1520     1          2.2         0   5       1          33   \n",
       "28             1453     0          1.6         1  12       1          52   \n",
       "32             1319     1          0.9         0   3       1          41   \n",
       "33             1310     1          2.2         1   0       1          51   \n",
       "...             ...   ...          ...       ...  ..     ...         ...   \n",
       "1963           1906     1          1.9         1   3       0          55   \n",
       "1965            659     0          1.4         1   2       1           3   \n",
       "1972           1191     0          0.8         0   6       1          46   \n",
       "1979           1614     0          1.2         0   1       1           9   \n",
       "1991           1882     0          2.0         0  11       1          44   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  \\\n",
       "0       0.6        188        2   2       20.0       756  2549     9   \n",
       "11      0.5        177        8  18      151.0      1005  3826    14   \n",
       "28      0.3         96        2  18      187.0      1311  2373    10   \n",
       "32      0.9        107        1  18       85.0      1152  2227    18   \n",
       "33      0.6        100        4   0      178.0      1919  3845     7   \n",
       "...     ...        ...      ...  ..        ...       ...   ...   ...   \n",
       "1963    0.2        113        3   4        3.0       629  1871    13   \n",
       "1965    0.1         85        8   6      190.0       657   967    10   \n",
       "1972    0.8         89        6   9       42.0       807   824    19   \n",
       "1979    0.1        161        3   2      173.0      1219  1832    15   \n",
       "1991    0.8        113        8  19        4.0       743  3579    19   \n",
       "\n",
       "           sc_w  talk_time  three_g  touch_screen  wifi  price_range  \n",
       "0      7.000000         19        0             0     1            1  \n",
       "11     9.000000         13        1             1     1            3  \n",
       "28     1.000000         10        1             1     1            2  \n",
       "32     5.000000          3        1             1     1            1  \n",
       "33     6.646421         12        1             1     0            3  \n",
       "...         ...        ...      ...           ...   ...          ...  \n",
       "1963   5.000000          4        1             0     1            1  \n",
       "1965   1.000000         14        1             0     1            0  \n",
       "1972  18.000000          7        1             0     0            0  \n",
       "1979   8.000000         11        1             0     0            1  \n",
       "1991   8.000000         20        1             1     0            3  \n",
       "\n",
       "[345 rows x 21 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['px_height'] < 200]\n",
    "\n",
    "# having pixel height that's lower than 200 is still weird because of that's a super low resolution \n",
    "# comparing the minimum px width and the minimum px height is already kind of unsusal the min px_width is around 600 while\n",
    "# for the px height is 1 right now after we clean all the 0 value "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "557b3c6a",
   "metadata": {
    "id": "557b3c6a"
   },
   "source": [
    "### Screen Guide\n",
    "\n",
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d5c3cce5",
   "metadata": {
    "id": "d5c3cce5"
   },
   "outputs": [],
   "source": [
    "df.loc[df['px_height']<240, 'px_height'] = np.nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "6d22ed92",
   "metadata": {
    "id": "6d22ed92"
   },
   "outputs": [],
   "source": [
    "df['px_height'] = df['px_height'].fillna(df.groupby('price_range')['px_height'].transform('mean'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b486110a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "b486110a",
    "outputId": "d436c2e9-3931-4497-b4ad-e9af5caf7b4c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "battery_power    0\n",
       "blue             0\n",
       "clock_speed      0\n",
       "dual_sim         0\n",
       "fc               0\n",
       "four_g           0\n",
       "int_memory       0\n",
       "m_dep            0\n",
       "mobile_wt        0\n",
       "n_cores          0\n",
       "pc               0\n",
       "px_height        0\n",
       "px_width         0\n",
       "ram              0\n",
       "sc_h             0\n",
       "sc_w             0\n",
       "talk_time        0\n",
       "three_g          0\n",
       "touch_screen     0\n",
       "wifi             0\n",
       "price_range      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# just for sanity check to check the null value in all the row since i turned 0 values into np.nan\n",
    "\n",
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "87d2cb69",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "87d2cb69",
    "outputId": "ba9fc4c2-2a04-494b-b60f-90490b45bc8e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2000 entries, 0 to 1999\n",
      "Data columns (total 21 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   battery_power  2000 non-null   int64  \n",
      " 1   blue           2000 non-null   int64  \n",
      " 2   clock_speed    2000 non-null   float64\n",
      " 3   dual_sim       2000 non-null   int64  \n",
      " 4   fc             2000 non-null   int64  \n",
      " 5   four_g         2000 non-null   int64  \n",
      " 6   int_memory     2000 non-null   int64  \n",
      " 7   m_dep          2000 non-null   float64\n",
      " 8   mobile_wt      2000 non-null   int64  \n",
      " 9   n_cores        2000 non-null   int64  \n",
      " 10  pc             2000 non-null   int64  \n",
      " 11  px_height      2000 non-null   float64\n",
      " 12  px_width       2000 non-null   int64  \n",
      " 13  ram            2000 non-null   int64  \n",
      " 14  sc_h           2000 non-null   int64  \n",
      " 15  sc_w           2000 non-null   float64\n",
      " 16  talk_time      2000 non-null   int64  \n",
      " 17  three_g        2000 non-null   int64  \n",
      " 18  touch_screen   2000 non-null   int64  \n",
      " 19  wifi           2000 non-null   int64  \n",
      " 20  price_range    2000 non-null   int64  \n",
      "dtypes: float64(4), int64(17)\n",
      "memory usage: 328.2 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "ae14e382",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "ae14e382",
    "outputId": "4f1d995e-2e0d-470f-cf2b-3ac1a4c23f89"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>17</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>11</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>16</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n",
       "0        188        2   2   786.934862       756  2549     9   7.0         19   \n",
       "1        136        3   6   905.000000      1988  2631    17   3.0          7   \n",
       "2        145        5   6  1263.000000      1716  2603    11   2.0          9   \n",
       "3        131        6   9  1216.000000      1786  2769    16   8.0         11   \n",
       "4        141        2  14  1208.000000      1212  1411     8   2.0         15   \n",
       "\n",
       "   three_g  touch_screen  wifi  price_range  \n",
       "0        0             0     1            1  \n",
       "1        1             1     0            2  \n",
       "2        1             1     0            2  \n",
       "3        1             0     0            2  \n",
       "4        1             1     0            1  "
      ]
     },
     "execution_count": 35,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ca02efd",
   "metadata": {
    "id": "4ca02efd"
   },
   "source": [
    "### Preparation Process (Feature Engineering for EDA) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "bafd395a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "bafd395a",
    "outputId": "983c7cd9-b114-4dfc-b917-ebc6cf7c25a6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>17</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>11</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>16</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n",
       "0        188        2   2   786.934862       756  2549     9   7.0         19   \n",
       "1        136        3   6   905.000000      1988  2631    17   3.0          7   \n",
       "2        145        5   6  1263.000000      1716  2603    11   2.0          9   \n",
       "3        131        6   9  1216.000000      1786  2769    16   8.0         11   \n",
       "4        141        2  14  1208.000000      1212  1411     8   2.0         15   \n",
       "\n",
       "   three_g  touch_screen  wifi  price_range  is_fc  \n",
       "0        0             0     1            1    1.0  \n",
       "1        1             1     0            2    0.0  \n",
       "2        1             1     0            2    1.0  \n",
       "3        1             0     0            2    0.0  \n",
       "4        1             1     0            1    1.0  "
      ]
     },
     "execution_count": 36,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# front camera, since there're phone with front camera and phone without front camera i will create a new column whether \n",
    "# a phone has a front came or not \n",
    "\n",
    "df.loc[df['fc'] == 0, 'is_fc'] = 0\n",
    "df.loc[df['fc'] > 0, 'is_fc'] = 1\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "2b1e4f98",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "2b1e4f98",
    "outputId": "62148cf2-de30-4c92-b9e2-35cedfc0d3af"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>17</td>\n",
       "      <td>3.0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>11</td>\n",
       "      <td>2.0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>16</td>\n",
       "      <td>8.0</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n",
       "0        188        2   2   786.934862       756  2549     9   7.0         19   \n",
       "1        136        3   6   905.000000      1988  2631    17   3.0          7   \n",
       "2        145        5   6  1263.000000      1716  2603    11   2.0          9   \n",
       "3        131        6   9  1216.000000      1786  2769    16   8.0         11   \n",
       "4        141        2  14  1208.000000      1212  1411     8   2.0         15   \n",
       "\n",
       "   three_g  touch_screen  wifi  price_range  is_fc  is_pc  \n",
       "0        0             0     1            1    1.0    1.0  \n",
       "1        1             1     0            2    0.0    1.0  \n",
       "2        1             1     0            2    1.0    1.0  \n",
       "3        1             0     0            2    0.0    1.0  \n",
       "4        1             1     0            1    1.0    1.0  "
      ]
     },
     "execution_count": 37,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## same goes to the primary camera \n",
    "\n",
    "df.loc[df['pc'] == 0, 'is_pc'] = 0\n",
    "df.loc[df['pc'] > 0, 'is_pc'] = 1\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc497727",
   "metadata": {
    "id": "dc497727"
   },
   "source": [
    "#### Getting Screen Sizes\n",
    "\n",
    "- getting the screensize using pythagorean theory \n",
    "- but first we need to convert the height and he width to inces since the phone industry regular measurement of height and width of a screen is always in inches  \n",
    "- 1 centimeter is equal to 0.3937007874 inches:\n",
    "    \n",
    "#### Converting cm into inches\n",
    "\\begin{equation}\n",
    "1 cm = \\frac{1}{2.54} = 0.3937007874\n",
    "\\end{equation}\n",
    "\n",
    "#### Getting screen size using pythagorean theory\n",
    "\\begin{equation}\n",
    "C = \\sqrt{A^2 + B^2}\n",
    "\\end{equation}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "cfc33073",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "cfc33073",
    "outputId": "f0c19d1b-42ed-419a-8d0e-c8085947f6ed"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>3.543307</td>\n",
       "      <td>2.755906</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>6.692913</td>\n",
       "      <td>1.181102</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>4.330709</td>\n",
       "      <td>0.787402</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>6.299213</td>\n",
       "      <td>3.149606</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>3.149606</td>\n",
       "      <td>0.787402</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram      sc_h      sc_w  \\\n",
       "0        188        2   2   786.934862       756  2549  3.543307  2.755906   \n",
       "1        136        3   6   905.000000      1988  2631  6.692913  1.181102   \n",
       "2        145        5   6  1263.000000      1716  2603  4.330709  0.787402   \n",
       "3        131        6   9  1216.000000      1786  2769  6.299213  3.149606   \n",
       "4        141        2  14  1208.000000      1212  1411  3.149606  0.787402   \n",
       "\n",
       "   talk_time  three_g  touch_screen  wifi  price_range  is_fc  is_pc  \n",
       "0         19        0             0     1            1    1.0    1.0  \n",
       "1          7        1             1     0            2    0.0    1.0  \n",
       "2          9        1             1     0            2    1.0    1.0  \n",
       "3         11        1             0     0            2    0.0    1.0  \n",
       "4         15        1             1     0            1    1.0    1.0  "
      ]
     },
     "execution_count": 38,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['sc_h'] = df['sc_h'] / 2.54\n",
    "df['sc_w'] = df['sc_w'] / 2.54\n",
    "\n",
    "df.head()\n",
    "\n",
    "# now all the screen height and the width are in inches we could use pythagorean theory to get the screen size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "09bb48a4",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "09bb48a4",
    "outputId": "c02ae8c3-2de1-4ed4-af85-e9ec3bda1104"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>3.543307</td>\n",
       "      <td>2.755906</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>6.692913</td>\n",
       "      <td>1.181102</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>4.330709</td>\n",
       "      <td>0.787402</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>6.299213</td>\n",
       "      <td>3.149606</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>3.149606</td>\n",
       "      <td>0.787402</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram      sc_h      sc_w  \\\n",
       "0        188        2   2   786.934862       756  2549  3.543307  2.755906   \n",
       "1        136        3   6   905.000000      1988  2631  6.692913  1.181102   \n",
       "2        145        5   6  1263.000000      1716  2603  4.330709  0.787402   \n",
       "3        131        6   9  1216.000000      1786  2769  6.299213  3.149606   \n",
       "4        141        2  14  1208.000000      1212  1411  3.149606  0.787402   \n",
       "\n",
       "   talk_time  three_g  touch_screen  wifi  price_range  is_fc  is_pc  \\\n",
       "0         19        0             0     1            1    1.0    1.0   \n",
       "1          7        1             1     0            2    0.0    1.0   \n",
       "2          9        1             1     0            2    1.0    1.0   \n",
       "3         11        1             0     0            2    0.0    1.0   \n",
       "4         15        1             1     0            1    1.0    1.0   \n",
       "\n",
       "   screen_size  \n",
       "0         4.49  \n",
       "1         6.80  \n",
       "2         4.40  \n",
       "3         7.04  \n",
       "4         3.25  "
      ]
     },
     "execution_count": 39,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## getting screen size \n",
    "\n",
    "df['screen_size'] = (np.sqrt(df['sc_h']**2 + df['sc_w']**2)).round(2)\n",
    "df.head()\n",
    "\n",
    "# now we get the screen size in inches we can drop the height and the width of the phone columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "949dad62",
   "metadata": {
    "id": "949dad62"
   },
   "outputs": [],
   "source": [
    "df.drop(columns = ['sc_h', 'sc_w'], inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "80d1ba67",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "80d1ba67",
    "outputId": "981d1308-84e6-4587-b3e1-d9e8947849a0"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2   786.934862       756  2549         19        0   \n",
       "1        136        3   6   905.000000      1988  2631          7        1   \n",
       "2        145        5   6  1263.000000      1716  2603          9        1   \n",
       "3        131        6   9  1216.000000      1786  2769         11        1   \n",
       "4        141        2  14  1208.000000      1212  1411         15        1   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size  \n",
       "0             0     1            1    1.0    1.0         4.49  \n",
       "1             1     0            2    0.0    1.0         6.80  \n",
       "2             1     0            2    1.0    1.0         4.40  \n",
       "3             0     0            2    0.0    1.0         7.04  \n",
       "4             1     0            1    1.0    1.0         3.25  "
      ]
     },
     "execution_count": 41,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e66d55b",
   "metadata": {
    "id": "6e66d55b"
   },
   "source": [
    "### grouping screen resolution into 2 different group\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "6ab1ed54",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "6ab1ed54",
    "outputId": "5effe87a-d6b6-476b-9b2f-ca47ff57e4c1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2   786.934862       756  2549         19        0   \n",
       "1        136        3   6   905.000000      1988  2631          7        1   \n",
       "2        145        5   6  1263.000000      1716  2603          9        1   \n",
       "3        131        6   9  1216.000000      1786  2769         11        1   \n",
       "4        141        2  14  1208.000000      1212  1411         15        1   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen  \n",
       "1             1     0            2    0.0    1.0         6.80      HD Screen  \n",
       "2             1     0            2    1.0    1.0         4.40      HD Screen  \n",
       "3             0     0            2    0.0    1.0         7.04      HD Screen  \n",
       "4             1     0            1    1.0    1.0         3.25      HD Screen  "
      ]
     },
     "execution_count": 42,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[(df['px_width'] < 1280) | (df['px_height'] < 720), 'screen_quality'] = 'Not HD'\n",
    "df.loc[(df['px_width'] >= 1280) | (df['px_height'] >= 720), 'screen_quality'] = 'HD Screen'\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "68175f6d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 444
    },
    "id": "68175f6d",
    "outputId": "e43b1084-9d37-42c3-b313-f79bc82d9aa1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>122</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>888.000000</td>\n",
       "      <td>1099</td>\n",
       "      <td>3962</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.32</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>858</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0.1</td>\n",
       "      <td>84</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>1416</td>\n",
       "      <td>3978</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>9.19</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>794</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.8</td>\n",
       "      <td>106</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>1222.000000</td>\n",
       "      <td>1890</td>\n",
       "      <td>668</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.35</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>1965</td>\n",
       "      <td>1</td>\n",
       "      <td>2.6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>39</td>\n",
       "      <td>0.2</td>\n",
       "      <td>187</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>915.000000</td>\n",
       "      <td>1965</td>\n",
       "      <td>2032</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.85</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>1911</td>\n",
       "      <td>0</td>\n",
       "      <td>0.9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>0.7</td>\n",
       "      <td>108</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>868.000000</td>\n",
       "      <td>1632</td>\n",
       "      <td>3057</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.57</td>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1347 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "0               842     0          2.2         0   1       0           7   \n",
       "1              1021     1          0.5         1   0       1          53   \n",
       "2               563     1          0.5         1   2       1          41   \n",
       "3               615     1          2.5         0   0       0          10   \n",
       "4              1821     1          1.2         0  13       1          44   \n",
       "...             ...   ...          ...       ...  ..     ...         ...   \n",
       "1993           1467     1          0.5         0   0       0          18   \n",
       "1994            858     0          2.2         0   1       0          50   \n",
       "1995            794     1          0.5         1   0       1           2   \n",
       "1996           1965     1          2.6         1   0       0          39   \n",
       "1997           1911     0          0.9         1   1       1          36   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  \\\n",
       "0       0.6        188        2   2   786.934862       756  2549         19   \n",
       "1       0.7        136        3   6   905.000000      1988  2631          7   \n",
       "2       0.9        145        5   6  1263.000000      1716  2603          9   \n",
       "3       0.8        131        6   9  1216.000000      1786  2769         11   \n",
       "4       0.6        141        2  14  1208.000000      1212  1411         15   \n",
       "...     ...        ...      ...  ..          ...       ...   ...        ...   \n",
       "1993    0.6        122        5   0   888.000000      1099  3962          5   \n",
       "1994    0.1         84        1   2   528.000000      1416  3978          3   \n",
       "1995    0.8        106        6  14  1222.000000      1890   668         19   \n",
       "1996    0.2        187        4   3   915.000000      1965  2032         16   \n",
       "1997    0.7        108        8   3   868.000000      1632  3057          5   \n",
       "\n",
       "      three_g  touch_screen  wifi  price_range  is_fc  is_pc  screen_size  \\\n",
       "0           0             0     1            1    1.0    1.0         4.49   \n",
       "1           1             1     0            2    0.0    1.0         6.80   \n",
       "2           1             1     0            2    1.0    1.0         4.40   \n",
       "3           1             0     0            2    0.0    1.0         7.04   \n",
       "4           1             1     0            1    1.0    1.0         3.25   \n",
       "...       ...           ...   ...          ...    ...    ...          ...   \n",
       "1993        1             1     1            3    0.0    0.0         7.32   \n",
       "1994        1             1     0            3    1.0    1.0         9.19   \n",
       "1995        1             1     0            0    0.0    1.0         5.35   \n",
       "1996        1             1     1            2    0.0    1.0         5.85   \n",
       "1997        1             1     0            3    1.0    1.0         3.57   \n",
       "\n",
       "     screen_quality  \n",
       "0         HD Screen  \n",
       "1         HD Screen  \n",
       "2         HD Screen  \n",
       "3         HD Screen  \n",
       "4         HD Screen  \n",
       "...             ...  \n",
       "1993      HD Screen  \n",
       "1994      HD Screen  \n",
       "1995      HD Screen  \n",
       "1996      HD Screen  \n",
       "1997      HD Screen  \n",
       "\n",
       "[1347 rows x 23 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['screen_quality'] == 'HD Screen']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "4e678f2a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 444
    },
    "id": "4e678f2a",
    "outputId": "6e9b6bc1-b811-4477-d161-8b9812f74bb3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1821</td>\n",
       "      <td>0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>139</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>381.0</td>\n",
       "      <td>1018</td>\n",
       "      <td>3220</td>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.01</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1954</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0.8</td>\n",
       "      <td>187</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>512.0</td>\n",
       "      <td>1149</td>\n",
       "      <td>700</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.41</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1445</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>174</td>\n",
       "      <td>7</td>\n",
       "      <td>14</td>\n",
       "      <td>386.0</td>\n",
       "      <td>836</td>\n",
       "      <td>1099</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.70</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>769</td>\n",
       "      <td>1</td>\n",
       "      <td>2.9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.1</td>\n",
       "      <td>182</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>248.0</td>\n",
       "      <td>874</td>\n",
       "      <td>3946</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.12</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1815</td>\n",
       "      <td>0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>33</td>\n",
       "      <td>0.6</td>\n",
       "      <td>159</td>\n",
       "      <td>4</td>\n",
       "      <td>17</td>\n",
       "      <td>607.0</td>\n",
       "      <td>748</td>\n",
       "      <td>1482</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.49</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987</th>\n",
       "      <td>618</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>0.1</td>\n",
       "      <td>80</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>591.0</td>\n",
       "      <td>724</td>\n",
       "      <td>1424</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.56</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988</th>\n",
       "      <td>1547</td>\n",
       "      <td>1</td>\n",
       "      <td>2.9</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>57</td>\n",
       "      <td>0.4</td>\n",
       "      <td>114</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>347.0</td>\n",
       "      <td>957</td>\n",
       "      <td>1620</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.63</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989</th>\n",
       "      <td>586</td>\n",
       "      <td>0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0.2</td>\n",
       "      <td>83</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>241.0</td>\n",
       "      <td>854</td>\n",
       "      <td>2592</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.68</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>1512</td>\n",
       "      <td>0</td>\n",
       "      <td>0.9</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>46</td>\n",
       "      <td>0.1</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>336.0</td>\n",
       "      <td>670</td>\n",
       "      <td>869</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8.11</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>510</td>\n",
       "      <td>1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>45</td>\n",
       "      <td>0.9</td>\n",
       "      <td>168</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "      <td>483.0</td>\n",
       "      <td>754</td>\n",
       "      <td>3919</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.64</td>\n",
       "      <td>Not HD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>653 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "6              1821     0          1.7         0   4       1          10   \n",
       "7              1954     0          0.5         1   0       0          24   \n",
       "8              1445     1          0.5         0   0       0          53   \n",
       "10              769     1          2.9         1   0       0           9   \n",
       "12             1815     0          2.8         0   2       0          33   \n",
       "...             ...   ...          ...       ...  ..     ...         ...   \n",
       "1987            618     1          1.0         0   9       1          13   \n",
       "1988           1547     1          2.9         0   2       0          57   \n",
       "1989            586     0          2.8         0   2       0          15   \n",
       "1998           1512     0          0.9         0   4       1          46   \n",
       "1999            510     1          2.0         1   5       1          45   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc  px_height  px_width   ram  talk_time  \\\n",
       "6       0.8        139        8  10      381.0      1018  3220         18   \n",
       "7       0.8        187        4   0      512.0      1149   700          5   \n",
       "8       0.7        174        7  14      386.0       836  1099         20   \n",
       "10      0.1        182        5   1      248.0       874  3946          7   \n",
       "12      0.6        159        4  17      607.0       748  1482          2   \n",
       "...     ...        ...      ...  ..        ...       ...   ...        ...   \n",
       "1987    0.1         80        4  15      591.0       724  1424          7   \n",
       "1988    0.4        114        1   3      347.0       957  1620         19   \n",
       "1989    0.2         83        3  11      241.0       854  2592          3   \n",
       "1998    0.1        145        5   5      336.0       670   869         19   \n",
       "1999    0.9        168        6  16      483.0       754  3919          2   \n",
       "\n",
       "      three_g  touch_screen  wifi  price_range  is_fc  is_pc  screen_size  \\\n",
       "6           1             0     1            3    1.0    1.0         6.01   \n",
       "7           1             1     1            0    0.0    0.0         6.41   \n",
       "8           1             0     0            0    0.0    1.0         6.70   \n",
       "10          0             0     0            3    0.0    1.0         2.12   \n",
       "12          1             0     0            1    1.0    1.0         7.49   \n",
       "...       ...           ...   ...          ...    ...    ...          ...   \n",
       "1987        1             1     0            0    1.0    1.0         7.56   \n",
       "1988        0             1     1            1    1.0    1.0         3.63   \n",
       "1989        0             0     0            1    1.0    1.0         5.68   \n",
       "1998        1             1     1            0    1.0    1.0         8.11   \n",
       "1999        1             1     1            3    1.0    1.0         7.64   \n",
       "\n",
       "     screen_quality  \n",
       "6            Not HD  \n",
       "7            Not HD  \n",
       "8            Not HD  \n",
       "10           Not HD  \n",
       "12           Not HD  \n",
       "...             ...  \n",
       "1987         Not HD  \n",
       "1988         Not HD  \n",
       "1989         Not HD  \n",
       "1998         Not HD  \n",
       "1999         Not HD  \n",
       "\n",
       "[653 rows x 23 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['screen_quality'] == 'Not HD']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ad18571",
   "metadata": {
    "id": "7ad18571"
   },
   "source": [
    "### Binning RAM size \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f3d820cd",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "f3d820cd",
    "outputId": "5d1ee5f4-731a-449d-8d10-91f34fc5380b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>1 to 2 GB</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2   786.934862       756  2549         19        0   \n",
       "1        136        3   6   905.000000      1988  2631          7        1   \n",
       "2        145        5   6  1263.000000      1716  2603          9        1   \n",
       "3        131        6   9  1216.000000      1786  2769         11        1   \n",
       "4        141        2  14  1208.000000      1212  1411         15        1   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "1             1     0            2    0.0    1.0         6.80      HD Screen   \n",
       "2             1     0            2    1.0    1.0         4.40      HD Screen   \n",
       "3             0     0            2    0.0    1.0         7.04      HD Screen   \n",
       "4             1     0            1    1.0    1.0         3.25      HD Screen   \n",
       "\n",
       "    ram_size  \n",
       "0  2 to 3 GB  \n",
       "1  2 to 3 GB  \n",
       "2  2 to 3 GB  \n",
       "3  2 to 3 GB  \n",
       "4  1 to 2 GB  "
      ]
     },
     "execution_count": 45,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin_ram_size = [256, 512, 1000, 2000, 3000, 4000]\n",
    "label_ram = ['256 to 512 MB', '512 MB to 1GB', '1 to 2 GB', '2 to 3 GB', '3 to 4 GB']\n",
    "\n",
    "df['ram_size'] = pd.cut(df['ram'], bins = bin_ram_size, labels = label_ram)\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82d8c04f",
   "metadata": {
    "id": "82d8c04f"
   },
   "source": [
    "### Binning Clock Speed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "453349b1",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 313
    },
    "id": "453349b1",
    "outputId": "ec7d8e8b-1a3a-4a11-ee46-8b518b6f4847"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>1 to 2 GB</td>\n",
       "      <td>upto 1.5GHz</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2   786.934862       756  2549         19        0   \n",
       "1        136        3   6   905.000000      1988  2631          7        1   \n",
       "2        145        5   6  1263.000000      1716  2603          9        1   \n",
       "3        131        6   9  1216.000000      1786  2769         11        1   \n",
       "4        141        2  14  1208.000000      1212  1411         15        1   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "1             1     0            2    0.0    1.0         6.80      HD Screen   \n",
       "2             1     0            2    1.0    1.0         4.40      HD Screen   \n",
       "3             0     0            2    0.0    1.0         7.04      HD Screen   \n",
       "4             1     0            1    1.0    1.0         3.25      HD Screen   \n",
       "\n",
       "    ram_size        speed  \n",
       "0  2 to 3 GB  upto 2.5GHz  \n",
       "1  2 to 3 GB    upto 1GHz  \n",
       "2  2 to 3 GB    upto 1GHz  \n",
       "3  2 to 3 GB  upto 2.5GHz  \n",
       "4  1 to 2 GB  upto 1.5GHz  "
      ]
     },
     "execution_count": 46,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clock_speed_bin = [0, 1.0,1.5,2.0,2.5,3.0]\n",
    "clock_bin_label = ['upto 1GHz', 'upto 1.5GHz', 'upto 2GHz', 'upto 2.5GHz', 'upto 3.0GHz']\n",
    "\n",
    "df['speed'] = pd.cut(df['clock_speed'], bins = clock_speed_bin, labels = clock_bin_label)\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "57a1a5ec",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 313
    },
    "id": "57a1a5ec",
    "outputId": "3a54c850-7817-431a-b804-2f86800fc30d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "      <th>multicore_processor</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>1 to 2 GB</td>\n",
       "      <td>upto 1.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2   786.934862       756  2549         19        0   \n",
       "1        136        3   6   905.000000      1988  2631          7        1   \n",
       "2        145        5   6  1263.000000      1716  2603          9        1   \n",
       "3        131        6   9  1216.000000      1786  2769         11        1   \n",
       "4        141        2  14  1208.000000      1212  1411         15        1   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "1             1     0            2    0.0    1.0         6.80      HD Screen   \n",
       "2             1     0            2    1.0    1.0         4.40      HD Screen   \n",
       "3             0     0            2    0.0    1.0         7.04      HD Screen   \n",
       "4             1     0            1    1.0    1.0         3.25      HD Screen   \n",
       "\n",
       "    ram_size        speed  multicore_processor  \n",
       "0  2 to 3 GB  upto 2.5GHz                  1.0  \n",
       "1  2 to 3 GB    upto 1GHz                  1.0  \n",
       "2  2 to 3 GB    upto 1GHz                  1.0  \n",
       "3  2 to 3 GB  upto 2.5GHz                  1.0  \n",
       "4  1 to 2 GB  upto 1.5GHz                  1.0  "
      ]
     },
     "execution_count": 47,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[df['n_cores'] == 1 , 'multicore_processor'] = 0\n",
    "df.loc[df['n_cores'] > 1 , 'multicore_processor'] = 1\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d06728b",
   "metadata": {
    "id": "5d06728b"
   },
   "source": [
    "### Binning Camera Pixels "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "c1b72887",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 313
    },
    "id": "c1b72887",
    "outputId": "0c0b2d0f-b0c3-4b0d-cf3a-4ec91c9850aa"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "      <th>multicore_processor</th>\n",
       "      <th>primary_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 4MP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905.000000</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.80</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 8MP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263.000000</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.40</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 8MP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216.000000</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.04</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 12MP</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208.000000</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.25</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>1 to 2 GB</td>\n",
       "      <td>upto 1.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 16MP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2   786.934862       756  2549         19        0   \n",
       "1        136        3   6   905.000000      1988  2631          7        1   \n",
       "2        145        5   6  1263.000000      1716  2603          9        1   \n",
       "3        131        6   9  1216.000000      1786  2769         11        1   \n",
       "4        141        2  14  1208.000000      1212  1411         15        1   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "1             1     0            2    0.0    1.0         6.80      HD Screen   \n",
       "2             1     0            2    1.0    1.0         4.40      HD Screen   \n",
       "3             0     0            2    0.0    1.0         7.04      HD Screen   \n",
       "4             1     0            1    1.0    1.0         3.25      HD Screen   \n",
       "\n",
       "    ram_size        speed  multicore_processor primary_camera  \n",
       "0  2 to 3 GB  upto 2.5GHz                  1.0       upto 4MP  \n",
       "1  2 to 3 GB    upto 1GHz                  1.0       upto 8MP  \n",
       "2  2 to 3 GB    upto 1GHz                  1.0       upto 8MP  \n",
       "3  2 to 3 GB  upto 2.5GHz                  1.0      upto 12MP  \n",
       "4  1 to 2 GB  upto 1.5GHz                  1.0      upto 16MP  "
      ]
     },
     "execution_count": 48,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin_camera = [0,4,8,12,16,20]\n",
    "bin_camera_label = ['upto 4MP', 'upto 8MP', 'upto 12MP', 'upto 16MP', 'upto 20MP']\n",
    "camera_dict = {0:'No Camera'}\n",
    "\n",
    "df['primary_camera'] = pd.cut(df['pc'], bins = bin_camera, labels = bin_camera_label)\n",
    "\n",
    "\n",
    "df['primary_camera'] = df['primary_camera'].cat.add_categories('No Camera')\n",
    "df['primary_camera'] = df['primary_camera'].fillna(df['pc'].map(camera_dict))\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "0428aa35",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 617
    },
    "id": "0428aa35",
    "outputId": "9a841931-64da-4424-9be4-6765027e3adc"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "      <th>multicore_processor</th>\n",
       "      <th>primary_camera</th>\n",
       "      <th>front_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1954</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>0.8</td>\n",
       "      <td>187</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>512.000000</td>\n",
       "      <td>1149</td>\n",
       "      <td>700</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.41</td>\n",
       "      <td>Not HD</td>\n",
       "      <td>512 MB to 1GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>1310</td>\n",
       "      <td>1</td>\n",
       "      <td>2.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>0.6</td>\n",
       "      <td>100</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>874.051548</td>\n",
       "      <td>1919</td>\n",
       "      <td>3845</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.80</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>3 to 4 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>1654</td>\n",
       "      <td>1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>43</td>\n",
       "      <td>0.3</td>\n",
       "      <td>109</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>546.000000</td>\n",
       "      <td>629</td>\n",
       "      <td>3112</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.12</td>\n",
       "      <td>Not HD</td>\n",
       "      <td>3 to 4 GB</td>\n",
       "      <td>upto 1.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>1073</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>51</td>\n",
       "      <td>0.5</td>\n",
       "      <td>145</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>690.000000</td>\n",
       "      <td>804</td>\n",
       "      <td>2908</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.42</td>\n",
       "      <td>Not HD</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>1156</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>50</td>\n",
       "      <td>0.8</td>\n",
       "      <td>159</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>322.000000</td>\n",
       "      <td>547</td>\n",
       "      <td>470</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.71</td>\n",
       "      <td>Not HD</td>\n",
       "      <td>256 to 512 MB</td>\n",
       "      <td>upto 1.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1906</th>\n",
       "      <td>1807</td>\n",
       "      <td>0</td>\n",
       "      <td>0.8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>0.2</td>\n",
       "      <td>97</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1332.000000</td>\n",
       "      <td>1814</td>\n",
       "      <td>1069</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.63</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>1 to 2 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1911</th>\n",
       "      <td>1259</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>0.5</td>\n",
       "      <td>97</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1210.000000</td>\n",
       "      <td>1989</td>\n",
       "      <td>340</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.43</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>256 to 512 MB</td>\n",
       "      <td>upto 1.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1931</th>\n",
       "      <td>1854</td>\n",
       "      <td>0</td>\n",
       "      <td>0.9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>33</td>\n",
       "      <td>0.4</td>\n",
       "      <td>195</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>665.000000</td>\n",
       "      <td>718</td>\n",
       "      <td>1675</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.26</td>\n",
       "      <td>Not HD</td>\n",
       "      <td>1 to 2 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>0.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1968</th>\n",
       "      <td>1667</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>0.9</td>\n",
       "      <td>138</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1211.000000</td>\n",
       "      <td>1396</td>\n",
       "      <td>635</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.24</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>512 MB to 1GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.6</td>\n",
       "      <td>122</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>888.000000</td>\n",
       "      <td>1099</td>\n",
       "      <td>3962</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.32</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>3 to 4 GB</td>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>No Camera</td>\n",
       "      <td>No Camera</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>101 rows × 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  \\\n",
       "7              1954     0          0.5         1   0       0          24   \n",
       "33             1310     1          2.2         1   0       1          51   \n",
       "52             1654     1          1.5         1   0       1          43   \n",
       "54             1073     1          0.5         1   0       0          51   \n",
       "62             1156     1          1.2         1   0       1          50   \n",
       "...             ...   ...          ...       ...  ..     ...         ...   \n",
       "1906           1807     0          0.8         1   0       1          38   \n",
       "1911           1259     0          1.2         1   0       0          13   \n",
       "1931           1854     0          0.9         1   0       1          33   \n",
       "1968           1667     0          1.0         1   0       1          21   \n",
       "1993           1467     1          0.5         0   0       0          18   \n",
       "\n",
       "      m_dep  mobile_wt  n_cores  pc    px_height  px_width   ram  talk_time  \\\n",
       "7       0.8        187        4   0   512.000000      1149   700          5   \n",
       "33      0.6        100        4   0   874.051548      1919  3845         12   \n",
       "52      0.3        109        2   0   546.000000       629  3112         10   \n",
       "54      0.5        145        7   0   690.000000       804  2908         18   \n",
       "62      0.8        159        2   0   322.000000       547   470         15   \n",
       "...     ...        ...      ...  ..          ...       ...   ...        ...   \n",
       "1906    0.2         97        8   0  1332.000000      1814  1069          7   \n",
       "1911    0.5         97        2   0  1210.000000      1989   340          4   \n",
       "1931    0.4        195        1   0   665.000000       718  1675          9   \n",
       "1968    0.9        138        2   0  1211.000000      1396   635         15   \n",
       "1993    0.6        122        5   0   888.000000      1099  3962          5   \n",
       "\n",
       "      three_g  touch_screen  wifi  price_range  is_fc  is_pc  screen_size  \\\n",
       "7           1             1     1            0    0.0    0.0         6.41   \n",
       "33          1             1     0            3    0.0    0.0         3.80   \n",
       "52          1             1     0            3    0.0    0.0         5.12   \n",
       "54          0             1     0            2    0.0    0.0         3.42   \n",
       "62          1             1     0            0    0.0    0.0         3.71   \n",
       "...       ...           ...   ...          ...    ...    ...          ...   \n",
       "1906        1             0     0            1    0.0    0.0         3.63   \n",
       "1911        1             0     1            0    0.0    0.0         8.43   \n",
       "1931        1             0     1            1    0.0    0.0         7.26   \n",
       "1968        1             0     0            0    0.0    0.0         7.24   \n",
       "1993        1             1     1            3    0.0    0.0         7.32   \n",
       "\n",
       "     screen_quality       ram_size        speed  multicore_processor  \\\n",
       "7            Not HD  512 MB to 1GB    upto 1GHz                  1.0   \n",
       "33        HD Screen      3 to 4 GB  upto 2.5GHz                  1.0   \n",
       "52           Not HD      3 to 4 GB  upto 1.5GHz                  1.0   \n",
       "54           Not HD      2 to 3 GB    upto 1GHz                  1.0   \n",
       "62           Not HD  256 to 512 MB  upto 1.5GHz                  1.0   \n",
       "...             ...            ...          ...                  ...   \n",
       "1906      HD Screen      1 to 2 GB    upto 1GHz                  1.0   \n",
       "1911      HD Screen  256 to 512 MB  upto 1.5GHz                  1.0   \n",
       "1931         Not HD      1 to 2 GB    upto 1GHz                  0.0   \n",
       "1968      HD Screen  512 MB to 1GB    upto 1GHz                  1.0   \n",
       "1993      HD Screen      3 to 4 GB    upto 1GHz                  1.0   \n",
       "\n",
       "     primary_camera front_camera  \n",
       "7         No Camera    No Camera  \n",
       "33        No Camera    No Camera  \n",
       "52        No Camera    No Camera  \n",
       "54        No Camera    No Camera  \n",
       "62        No Camera    No Camera  \n",
       "...             ...          ...  \n",
       "1906      No Camera    No Camera  \n",
       "1911      No Camera    No Camera  \n",
       "1931      No Camera    No Camera  \n",
       "1968      No Camera    No Camera  \n",
       "1993      No Camera    No Camera  \n",
       "\n",
       "[101 rows x 28 columns]"
      ]
     },
     "execution_count": 49,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin_camera = [0,4,8,12,16,20]\n",
    "bin_camera_label = ['upto 4MP', 'upto 8MP', 'upto 12MP', 'upto 16MP', 'upto 20MP']\n",
    "camera_dict = {0:'No Camera'}\n",
    "\n",
    "\n",
    "df['front_camera'] = pd.cut(df['fc'], bins = bin_camera, labels = bin_camera_label)\n",
    "\n",
    "\n",
    "df['front_camera'] = df['front_camera'].cat.add_categories('No Camera')\n",
    "df['front_camera'] = df['front_camera'].fillna(df['fc'].map(camera_dict))\n",
    "df[(df['fc'] == 0) & (df['pc'] == 0)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "241d9975",
   "metadata": {
    "id": "241d9975"
   },
   "source": [
    "## Exploratory Data Analysis \n",
    "\n",
    "### Univariate Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "1ff6684f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 650
    },
    "id": "1ff6684f",
    "outputId": "9277897b-69a1-410a-8272-dc831ea759bf"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44eccd61d0>"
      ]
     },
     "execution_count": 50,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20, 10))\n",
    "sns.heatmap(df.corr(), annot = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "695a7788",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "695a7788",
    "outputId": "27c25a7a-e8d1-45b2-d692-b6db239a7c2d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ram                    0.917046\n",
       "battery_power          0.200723\n",
       "px_height              0.183910\n",
       "px_width               0.165818\n",
       "int_memory             0.044435\n",
       "is_pc                  0.043910\n",
       "screen_size            0.034804\n",
       "pc                     0.033599\n",
       "three_g                0.023611\n",
       "is_fc                  0.022085\n",
       "fc                     0.021998\n",
       "talk_time              0.021859\n",
       "blue                   0.020573\n",
       "wifi                   0.018785\n",
       "dual_sim               0.017444\n",
       "four_g                 0.014772\n",
       "n_cores                0.004399\n",
       "m_dep                  0.000853\n",
       "clock_speed           -0.006606\n",
       "multicore_processor   -0.016455\n",
       "mobile_wt             -0.030302\n",
       "touch_screen          -0.030411\n",
       "Name: price_range, dtype: float64"
      ]
     },
     "execution_count": 51,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation = df.corr()\n",
    "correlation['price_range'].sort_values(ascending = False)[1:]\n",
    "\n",
    "# correlation just to help you see a bigger picture of what's actually affecting a price range \\\n",
    "# from this we can see that the size of a ram is highly correlated with price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "461bbea4",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 320
    },
    "id": "461bbea4",
    "outputId": "4c7fd6db-a13b-44c9-ffd5-5786bf8b2af0"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>multicore_processor</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.0000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>2000.00000</td>\n",
       "      <td>2000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1238.518500</td>\n",
       "      <td>0.4950</td>\n",
       "      <td>1.522250</td>\n",
       "      <td>0.509500</td>\n",
       "      <td>4.309500</td>\n",
       "      <td>0.521500</td>\n",
       "      <td>32.046500</td>\n",
       "      <td>0.501750</td>\n",
       "      <td>140.249000</td>\n",
       "      <td>4.520500</td>\n",
       "      <td>9.916500</td>\n",
       "      <td>781.500027</td>\n",
       "      <td>1251.515500</td>\n",
       "      <td>2124.213000</td>\n",
       "      <td>11.011000</td>\n",
       "      <td>0.761500</td>\n",
       "      <td>0.503000</td>\n",
       "      <td>0.507000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>0.763000</td>\n",
       "      <td>0.949500</td>\n",
       "      <td>5.57026</td>\n",
       "      <td>0.879000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>439.418206</td>\n",
       "      <td>0.5001</td>\n",
       "      <td>0.816004</td>\n",
       "      <td>0.500035</td>\n",
       "      <td>4.341444</td>\n",
       "      <td>0.499662</td>\n",
       "      <td>18.145715</td>\n",
       "      <td>0.288416</td>\n",
       "      <td>35.399655</td>\n",
       "      <td>2.287837</td>\n",
       "      <td>6.064315</td>\n",
       "      <td>353.792639</td>\n",
       "      <td>432.199447</td>\n",
       "      <td>1084.732044</td>\n",
       "      <td>5.463955</td>\n",
       "      <td>0.426273</td>\n",
       "      <td>0.500116</td>\n",
       "      <td>0.500076</td>\n",
       "      <td>1.118314</td>\n",
       "      <td>0.425349</td>\n",
       "      <td>0.219029</td>\n",
       "      <td>1.96248</td>\n",
       "      <td>0.326209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>501.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>240.000000</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>256.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.01000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>851.750000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.700000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>109.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>518.000000</td>\n",
       "      <td>874.750000</td>\n",
       "      <td>1207.500000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.88000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1226.000000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>141.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>762.500000</td>\n",
       "      <td>1247.000000</td>\n",
       "      <td>2146.500000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.64000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1615.250000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>2.200000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>0.800000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>947.250000</td>\n",
       "      <td>1633.000000</td>\n",
       "      <td>3064.500000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.250000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.10000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1998.000000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1960.000000</td>\n",
       "      <td>1998.000000</td>\n",
       "      <td>3998.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.30000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       battery_power       blue  clock_speed     dual_sim           fc  \\\n",
       "count    2000.000000  2000.0000  2000.000000  2000.000000  2000.000000   \n",
       "mean     1238.518500     0.4950     1.522250     0.509500     4.309500   \n",
       "std       439.418206     0.5001     0.816004     0.500035     4.341444   \n",
       "min       501.000000     0.0000     0.500000     0.000000     0.000000   \n",
       "25%       851.750000     0.0000     0.700000     0.000000     1.000000   \n",
       "50%      1226.000000     0.0000     1.500000     1.000000     3.000000   \n",
       "75%      1615.250000     1.0000     2.200000     1.000000     7.000000   \n",
       "max      1998.000000     1.0000     3.000000     1.000000    19.000000   \n",
       "\n",
       "            four_g   int_memory        m_dep    mobile_wt      n_cores  \\\n",
       "count  2000.000000  2000.000000  2000.000000  2000.000000  2000.000000   \n",
       "mean      0.521500    32.046500     0.501750   140.249000     4.520500   \n",
       "std       0.499662    18.145715     0.288416    35.399655     2.287837   \n",
       "min       0.000000     2.000000     0.100000    80.000000     1.000000   \n",
       "25%       0.000000    16.000000     0.200000   109.000000     3.000000   \n",
       "50%       1.000000    32.000000     0.500000   141.000000     4.000000   \n",
       "75%       1.000000    48.000000     0.800000   170.000000     7.000000   \n",
       "max       1.000000    64.000000     1.000000   200.000000     8.000000   \n",
       "\n",
       "                pc    px_height     px_width          ram    talk_time  \\\n",
       "count  2000.000000  2000.000000  2000.000000  2000.000000  2000.000000   \n",
       "mean      9.916500   781.500027  1251.515500  2124.213000    11.011000   \n",
       "std       6.064315   353.792639   432.199447  1084.732044     5.463955   \n",
       "min       0.000000   240.000000   500.000000   256.000000     2.000000   \n",
       "25%       5.000000   518.000000   874.750000  1207.500000     6.000000   \n",
       "50%      10.000000   762.500000  1247.000000  2146.500000    11.000000   \n",
       "75%      15.000000   947.250000  1633.000000  3064.500000    16.000000   \n",
       "max      20.000000  1960.000000  1998.000000  3998.000000    20.000000   \n",
       "\n",
       "           three_g  touch_screen         wifi  price_range        is_fc  \\\n",
       "count  2000.000000   2000.000000  2000.000000  2000.000000  2000.000000   \n",
       "mean      0.761500      0.503000     0.507000     1.500000     0.763000   \n",
       "std       0.426273      0.500116     0.500076     1.118314     0.425349   \n",
       "min       0.000000      0.000000     0.000000     0.000000     0.000000   \n",
       "25%       1.000000      0.000000     0.000000     0.750000     1.000000   \n",
       "50%       1.000000      1.000000     1.000000     1.500000     1.000000   \n",
       "75%       1.000000      1.000000     1.000000     2.250000     1.000000   \n",
       "max       1.000000      1.000000     1.000000     3.000000     1.000000   \n",
       "\n",
       "             is_pc  screen_size  multicore_processor  \n",
       "count  2000.000000   2000.00000          2000.000000  \n",
       "mean      0.949500      5.57026             0.879000  \n",
       "std       0.219029      1.96248             0.326209  \n",
       "min       0.000000      2.01000             0.000000  \n",
       "25%       1.000000      3.88000             1.000000  \n",
       "50%       1.000000      5.64000             1.000000  \n",
       "75%       1.000000      7.10000             1.000000  \n",
       "max       1.000000     10.30000             1.000000  "
      ]
     },
     "execution_count": 52,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()\n",
    "\n",
    "# the average size of a phone is around 5.5 inches"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "c82cd47f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 175
    },
    "id": "c82cd47f",
    "outputId": "daf8f60e-5b90-4888-adc4-9a143b29d120"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>screen_quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>HD Screen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1347</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       screen_quality\n",
       "count            2000\n",
       "unique              2\n",
       "top         HD Screen\n",
       "freq             1347"
      ]
     },
     "execution_count": 53,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe(include = 'O')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "3cd900c1",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 118
    },
    "id": "3cd900c1",
    "outputId": "3ab5f6d7-d580-47a8-d23f-fd7c51b4ac63"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "      <th>multicore_processor</th>\n",
       "      <th>primary_camera</th>\n",
       "      <th>front_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 4MP</td>\n",
       "      <td>upto 4MP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc   px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2  786.934862       756  2549         19        0   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "\n",
       "    ram_size        speed  multicore_processor primary_camera front_camera  \n",
       "0  2 to 3 GB  upto 2.5GHz                  1.0       upto 4MP     upto 4MP  "
      ]
     },
     "execution_count": 54,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "f9383996",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "f9383996",
    "outputId": "922a32cc-81bf-4312-e0d0-43cd8ff251d6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>blue</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1010</td>\n",
       "      <td>50.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>990</td>\n",
       "      <td>49.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   blue  count  percent\n",
       "0     0   1010     50.5\n",
       "1     1    990     49.5"
      ]
     },
     "execution_count": 55,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['blue'], cum_cols=False)\n",
    "\n",
    "# half of the phone in the dataset doesnot have bluetooth while the other half have bluetooth\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "977178fe",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "977178fe",
    "outputId": "e1723c86-af3d-4ad3-f2b0-f802e0bae9bf"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1019</td>\n",
       "      <td>50.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>981</td>\n",
       "      <td>49.05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   dual_sim  count  percent\n",
       "0         1   1019    50.95\n",
       "1         0    981    49.05"
      ]
     },
     "execution_count": 56,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['dual_sim'], cum_cols=False)\n",
    "\n",
    "# half of the phone here have a dual simcard slot the other half doesn't"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "2fb74f9f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 677
    },
    "id": "2fb74f9f",
    "outputId": "b33ffb1e-2fc2-4c77-c474-3818c1568038"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fc</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>474</td>\n",
       "      <td>23.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>245</td>\n",
       "      <td>12.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>189</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>170</td>\n",
       "      <td>8.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>139</td>\n",
       "      <td>6.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>4</td>\n",
       "      <td>133</td>\n",
       "      <td>6.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>112</td>\n",
       "      <td>5.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>100</td>\n",
       "      <td>5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>78</td>\n",
       "      <td>3.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8</td>\n",
       "      <td>77</td>\n",
       "      <td>3.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>62</td>\n",
       "      <td>3.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>51</td>\n",
       "      <td>2.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>45</td>\n",
       "      <td>2.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>40</td>\n",
       "      <td>2.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>16</td>\n",
       "      <td>24</td>\n",
       "      <td>1.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>1.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>14</td>\n",
       "      <td>20</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>11</td>\n",
       "      <td>0.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>17</td>\n",
       "      <td>6</td>\n",
       "      <td>0.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>0.05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    fc  count  percent\n",
       "0    0    474    23.70\n",
       "1    1    245    12.25\n",
       "2    2    189     9.45\n",
       "3    3    170     8.50\n",
       "4    5    139     6.95\n",
       "5    4    133     6.65\n",
       "6    6    112     5.60\n",
       "7    7    100     5.00\n",
       "8    9     78     3.90\n",
       "9    8     77     3.85\n",
       "10  10     62     3.10\n",
       "11  11     51     2.55\n",
       "12  12     45     2.25\n",
       "13  13     40     2.00\n",
       "14  16     24     1.20\n",
       "15  15     23     1.15\n",
       "16  14     20     1.00\n",
       "17  18     11     0.55\n",
       "18  17      6     0.30\n",
       "19  19      1     0.05"
      ]
     },
     "execution_count": 57,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['fc'], cum_cols=False)\n",
    "\n",
    "# majority of phone in this dataset have a front facing camera\n",
    "# almost a quarter of the phone in this dataset doesn't have front facing camera "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "082f7262",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "082f7262",
    "outputId": "363e2760-563e-44ba-b2fd-e96f4795d666"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>speed</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>upto 1GHz</td>\n",
       "      <td>728</td>\n",
       "      <td>36.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>345</td>\n",
       "      <td>17.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>upto 2GHz</td>\n",
       "      <td>330</td>\n",
       "      <td>16.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>upto 1.5GHz</td>\n",
       "      <td>312</td>\n",
       "      <td>15.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>upto 3.0GHz</td>\n",
       "      <td>285</td>\n",
       "      <td>14.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         speed  count  percent\n",
       "0    upto 1GHz    728    36.40\n",
       "1  upto 2.5GHz    345    17.25\n",
       "2    upto 2GHz    330    16.50\n",
       "3  upto 1.5GHz    312    15.60\n",
       "4  upto 3.0GHz    285    14.25"
      ]
     },
     "execution_count": 58,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['speed'], cum_cols=False)\n",
    "\n",
    "# 63.6% of phones in this data set has a processing speed more than 1 GHZ "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "7b69fd6a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 300
    },
    "id": "7b69fd6a",
    "outputId": "e483c4e2-4034-4a2a-bcf2-eaf07a85d053"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>n_cores</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>274</td>\n",
       "      <td>13.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7</td>\n",
       "      <td>259</td>\n",
       "      <td>12.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>256</td>\n",
       "      <td>12.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>247</td>\n",
       "      <td>12.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>246</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>246</td>\n",
       "      <td>12.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>242</td>\n",
       "      <td>12.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6</td>\n",
       "      <td>230</td>\n",
       "      <td>11.50</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   n_cores  count  percent\n",
       "0        4    274    13.70\n",
       "1        7    259    12.95\n",
       "2        8    256    12.80\n",
       "3        2    247    12.35\n",
       "4        5    246    12.30\n",
       "5        3    246    12.30\n",
       "6        1    242    12.10\n",
       "7        6    230    11.50"
      ]
     },
     "execution_count": 59,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['n_cores'], cum_cols=False)\n",
    "\n",
    "# most of the phones in this dataset is a multicore processor (more than 1 core processing)\n",
    "# only 12.1 percent is a single core"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "9688ab53",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 708
    },
    "id": "9688ab53",
    "outputId": "84ab9323-ce7f-48da-98c4-adddfe2e5ac8"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pc</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10</td>\n",
       "      <td>122</td>\n",
       "      <td>6.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7</td>\n",
       "      <td>119</td>\n",
       "      <td>5.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9</td>\n",
       "      <td>112</td>\n",
       "      <td>5.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>20</td>\n",
       "      <td>110</td>\n",
       "      <td>5.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>14</td>\n",
       "      <td>104</td>\n",
       "      <td>5.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>104</td>\n",
       "      <td>5.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0</td>\n",
       "      <td>101</td>\n",
       "      <td>5.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>17</td>\n",
       "      <td>99</td>\n",
       "      <td>4.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2</td>\n",
       "      <td>99</td>\n",
       "      <td>4.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>6</td>\n",
       "      <td>95</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>4</td>\n",
       "      <td>95</td>\n",
       "      <td>4.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>3</td>\n",
       "      <td>93</td>\n",
       "      <td>4.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>15</td>\n",
       "      <td>92</td>\n",
       "      <td>4.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>12</td>\n",
       "      <td>90</td>\n",
       "      <td>4.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>8</td>\n",
       "      <td>89</td>\n",
       "      <td>4.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>88</td>\n",
       "      <td>4.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>13</td>\n",
       "      <td>85</td>\n",
       "      <td>4.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>19</td>\n",
       "      <td>83</td>\n",
       "      <td>4.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>82</td>\n",
       "      <td>4.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>11</td>\n",
       "      <td>79</td>\n",
       "      <td>3.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>5</td>\n",
       "      <td>59</td>\n",
       "      <td>2.95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    pc  count  percent\n",
       "0   10    122     6.10\n",
       "1    7    119     5.95\n",
       "2    9    112     5.60\n",
       "3   20    110     5.50\n",
       "4   14    104     5.20\n",
       "5    1    104     5.20\n",
       "6    0    101     5.05\n",
       "7   17     99     4.95\n",
       "8    2     99     4.95\n",
       "9    6     95     4.75\n",
       "10   4     95     4.75\n",
       "11   3     93     4.65\n",
       "12  15     92     4.60\n",
       "13  12     90     4.50\n",
       "14   8     89     4.45\n",
       "15  16     88     4.40\n",
       "16  13     85     4.25\n",
       "17  19     83     4.15\n",
       "18  18     82     4.10\n",
       "19  11     79     3.95\n",
       "20   5     59     2.95"
      ]
     },
     "execution_count": 60,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['pc'], cum_cols=False)\n",
    "\n",
    "# 95% phone in this dataset has a primary camera (back camera)\n",
    "# only 5 % of phones in this dataset doens't have camera "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "be585bf5",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "be585bf5",
    "outputId": "6f449781-a9d5-451e-be12-1a26ba9734f0"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ram_size</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>556</td>\n",
       "      <td>27.813907</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3 to 4 GB</td>\n",
       "      <td>524</td>\n",
       "      <td>26.213107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1 to 2 GB</td>\n",
       "      <td>522</td>\n",
       "      <td>26.113057</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>512 MB to 1GB</td>\n",
       "      <td>255</td>\n",
       "      <td>12.756378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>256 to 512 MB</td>\n",
       "      <td>142</td>\n",
       "      <td>7.103552</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        ram_size  count    percent\n",
       "0      2 to 3 GB    556  27.813907\n",
       "1      3 to 4 GB    524  26.213107\n",
       "2      1 to 2 GB    522  26.113057\n",
       "3  512 MB to 1GB    255  12.756378\n",
       "4  256 to 512 MB    142   7.103552"
      ]
     },
     "execution_count": 61,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['ram_size'], cum_cols=False)\n",
    "\n",
    "# more than 3/4 phones in this dataset has ram over 1 GB\n",
    "# while the rest has ram less than 1 GB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "b1bfaba6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 645
    },
    "id": "b1bfaba6",
    "outputId": "8f80af12-efa6-4bc1-e244-dd0dc3d904ae"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>talk_time</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7</td>\n",
       "      <td>124</td>\n",
       "      <td>6.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4</td>\n",
       "      <td>123</td>\n",
       "      <td>6.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>16</td>\n",
       "      <td>116</td>\n",
       "      <td>5.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15</td>\n",
       "      <td>115</td>\n",
       "      <td>5.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19</td>\n",
       "      <td>113</td>\n",
       "      <td>5.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>111</td>\n",
       "      <td>5.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>10</td>\n",
       "      <td>105</td>\n",
       "      <td>5.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>104</td>\n",
       "      <td>5.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>11</td>\n",
       "      <td>103</td>\n",
       "      <td>5.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>20</td>\n",
       "      <td>102</td>\n",
       "      <td>5.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>14</td>\n",
       "      <td>101</td>\n",
       "      <td>5.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>18</td>\n",
       "      <td>100</td>\n",
       "      <td>5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>100</td>\n",
       "      <td>5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>9</td>\n",
       "      <td>100</td>\n",
       "      <td>5.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>12</td>\n",
       "      <td>99</td>\n",
       "      <td>4.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2</td>\n",
       "      <td>99</td>\n",
       "      <td>4.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>98</td>\n",
       "      <td>4.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>3</td>\n",
       "      <td>94</td>\n",
       "      <td>4.70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>5</td>\n",
       "      <td>93</td>\n",
       "      <td>4.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    talk_time  count  percent\n",
       "0           7    124     6.20\n",
       "1           4    123     6.15\n",
       "2          16    116     5.80\n",
       "3          15    115     5.75\n",
       "4          19    113     5.65\n",
       "5           6    111     5.55\n",
       "6          10    105     5.25\n",
       "7           8    104     5.20\n",
       "8          11    103     5.15\n",
       "9          20    102     5.10\n",
       "10         14    101     5.05\n",
       "11         18    100     5.00\n",
       "12         13    100     5.00\n",
       "13          9    100     5.00\n",
       "14         12     99     4.95\n",
       "15          2     99     4.95\n",
       "16         17     98     4.90\n",
       "17          3     94     4.70\n",
       "18          5     93     4.65"
      ]
     },
     "execution_count": 62,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['talk_time'], cum_cols=False)\n",
    "\n",
    "# talk time in this data set seems to be spread out evenly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "c6d1c2f4",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "c6d1c2f4",
    "outputId": "fc887fe8-6126-4b13-ed33-7b9878d742af"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>four_g</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1043</td>\n",
       "      <td>52.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>957</td>\n",
       "      <td>47.85</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   four_g  count  percent\n",
       "0       1   1043    52.15\n",
       "1       0    957    47.85"
      ]
     },
     "execution_count": 63,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['four_g'], cum_cols=False)\n",
    "\n",
    "# half of the dataset here have a 4G line while the rest doesn't "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "befac18c",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "befac18c",
    "outputId": "c71c088a-804d-49e9-8ab5-88a3638fc0a8"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>three_g</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1523</td>\n",
       "      <td>76.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>477</td>\n",
       "      <td>23.85</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   three_g  count  percent\n",
       "0        1   1523    76.15\n",
       "1        0    477    23.85"
      ]
     },
     "execution_count": 64,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['three_g'], cum_cols=False)\n",
    "\n",
    "# three quarter of the phones in this data set has a 3G line \n",
    "# while quarter of it doesn't even have 3G"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "577391cc",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "577391cc",
    "outputId": "8ee6e117-649a-4523-d0fd-e7c93d8ebee8"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1006</td>\n",
       "      <td>50.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>994</td>\n",
       "      <td>49.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   touch_screen  count  percent\n",
       "0             1   1006     50.3\n",
       "1             0    994     49.7"
      ]
     },
     "execution_count": 65,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['touch_screen'], cum_cols=False)\n",
    "\n",
    "# touch screen technology seems to spread out half and half for phone in this dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "afe1dd6a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "afe1dd6a",
    "outputId": "ecc305a5-3286-442e-9d51-382a7aee979c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>wifi</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1014</td>\n",
       "      <td>50.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>986</td>\n",
       "      <td>49.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   wifi  count  percent\n",
       "0     1   1014     50.7\n",
       "1     0    986     49.3"
      ]
     },
     "execution_count": 66,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['wifi'], cum_cols=False)\n",
    "\n",
    "# same goes to wifi technology"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "867c1029",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 175
    },
    "id": "867c1029",
    "outputId": "23706097-d783-417f-fe2c-c3c25bbb2907"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_range</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3</td>\n",
       "      <td>500</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>500</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>500</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>500</td>\n",
       "      <td>25.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   price_range  count  percent\n",
       "0            3    500     25.0\n",
       "1            2    500     25.0\n",
       "2            1    500     25.0\n",
       "3            0    500     25.0"
      ]
     },
     "execution_count": 67,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['price_range'], cum_cols=False)\n",
    "\n",
    "# the phone in this dataset seems to be spread out a quarter for each price range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "84273c9e",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 112
    },
    "id": "84273c9e",
    "outputId": "4e05c2ac-2e53-42db-9945-92317934054d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>count</th>\n",
       "      <th>percent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HD Screen</td>\n",
       "      <td>1347</td>\n",
       "      <td>67.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Not HD</td>\n",
       "      <td>653</td>\n",
       "      <td>32.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  screen_quality  count  percent\n",
       "0      HD Screen   1347    67.35\n",
       "1         Not HD    653    32.65"
      ]
     },
     "execution_count": 68,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.stb.freq(['screen_quality'], cum_cols=False)\n",
    "\n",
    "# majority of the phone here have a HD quality screen"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a21c78b",
   "metadata": {
    "id": "1a21c78b"
   },
   "source": [
    "### Multivariate Analysis \n",
    "\n",
    "\n",
    "since price range is our target variable here we're going to focus on how the each of independent variable will affect the price range of an item, and then we will dive in deeper on how each independent variable effect each other and how combined independent variable will effect price\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "00e541c1",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 118
    },
    "id": "00e541c1",
    "outputId": "f1c026c3-d701-4b96-cfd5-a34b90b73cfe"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "      <th>multicore_processor</th>\n",
       "      <th>primary_camera</th>\n",
       "      <th>front_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 4MP</td>\n",
       "      <td>upto 4MP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc   px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2  786.934862       756  2549         19        0   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "\n",
       "    ram_size        speed  multicore_processor primary_camera front_camera  \n",
       "0  2 to 3 GB  upto 2.5GHz                  1.0       upto 4MP     upto 4MP  "
      ]
     },
     "execution_count": 69,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "998bd4a8",
   "metadata": {
    "id": "998bd4a8"
   },
   "source": [
    "### Battery, Talktime, and RAM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "bf438a7b",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "bf438a7b",
    "outputId": "df8e77c9-6755-46b3-982b-0a2dc8bada74"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>col_0</th>\n",
       "      <th>Average Battery</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1116.902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1228.868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1228.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1379.984</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "col_0        Average Battery\n",
       "price_range                 \n",
       "0                   1116.902\n",
       "1                   1228.868\n",
       "2                   1228.320\n",
       "3                   1379.984"
      ]
     },
     "execution_count": 70,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df['price_range'], columns = ['Average Battery'], values = df['battery_power'], aggfunc='mean')\n",
    "\n",
    "## we can see that the higher the price range it tend to have a higher battery except on the price range 1 to 2 it seems that from\n",
    "# price range 1 to 2 there's no significance difference from the average  battery power "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "fb817c98",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "fb817c98",
    "outputId": "f394158a-da2b-418e-d11d-d9a08b32aeef"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>col_0</th>\n",
       "      <th>Average Talk Time</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10.612</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11.362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10.972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.098</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "col_0        Average Talk Time\n",
       "price_range                   \n",
       "0                       10.612\n",
       "1                       11.362\n",
       "2                       10.972\n",
       "3                       11.098"
      ]
     },
     "execution_count": 71,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df['price_range'], columns = 'Average Talk Time', values = df['talk_time'], aggfunc='mean')\n",
    "\n",
    "# itseems that talk time doesn't really affect much on the price range of a cellphone"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "41f46e47",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "41f46e47",
    "outputId": "889c103d-bb25-4f9b-8a9e-5a2f16841c2e"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>talk_time</th>\n",
       "      <th>battery_power</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10.612</td>\n",
       "      <td>1116.902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11.362</td>\n",
       "      <td>1228.868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10.972</td>\n",
       "      <td>1228.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.098</td>\n",
       "      <td>1379.984</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             talk_time  battery_power\n",
       "price_range                          \n",
       "0               10.612       1116.902\n",
       "1               11.362       1228.868\n",
       "2               10.972       1228.320\n",
       "3               11.098       1379.984"
      ]
     },
     "execution_count": 72,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('price_range')['talk_time','battery_power'].mean()\n",
    "\n",
    "# while the battery power is somewhat positively correlated correlated with the price range \n",
    "# the higher the battery power doesn't always mean a longer talk time "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f9ffca80",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "f9ffca80",
    "outputId": "65deb91e-d452-4c21-e009-a8b73241852b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>talk_time</th>\n",
       "      <th>battery_power</th>\n",
       "      <th>ram</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10.612</td>\n",
       "      <td>1116.902</td>\n",
       "      <td>785.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11.362</td>\n",
       "      <td>1228.868</td>\n",
       "      <td>1679.490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10.972</td>\n",
       "      <td>1228.320</td>\n",
       "      <td>2582.816</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11.098</td>\n",
       "      <td>1379.984</td>\n",
       "      <td>3449.232</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             talk_time  battery_power       ram\n",
       "price_range                                    \n",
       "0               10.612       1116.902   785.314\n",
       "1               11.362       1228.868  1679.490\n",
       "2               10.972       1228.320  2582.816\n",
       "3               11.098       1379.984  3449.232"
      ]
     },
     "execution_count": 73,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## comparing those three item with ram since from the correlation ram has the highest correlation among all columns\n",
    "\n",
    "df.groupby('price_range')['talk_time','battery_power','ram'].mean()\n",
    "\n",
    "# so the higher price range has a significanly higher ram, and the higher the ram the higher the battery of a phone "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "736b3df8",
   "metadata": {
    "id": "736b3df8"
   },
   "source": [
    "### Camera and Price Range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "959728bc",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "959728bc",
    "outputId": "0bd2278a-0efd-4983-8c10-18ccdb4f523d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>front_camera</th>\n",
       "      <th>upto 4MP</th>\n",
       "      <th>upto 8MP</th>\n",
       "      <th>upto 12MP</th>\n",
       "      <th>upto 16MP</th>\n",
       "      <th>upto 20MP</th>\n",
       "      <th>No Camera</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.257802</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.237288</td>\n",
       "      <td>0.205607</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>0.255274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.244233</td>\n",
       "      <td>0.233645</td>\n",
       "      <td>0.245763</td>\n",
       "      <td>0.308411</td>\n",
       "      <td>0.277778</td>\n",
       "      <td>0.261603</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.223881</td>\n",
       "      <td>0.271028</td>\n",
       "      <td>0.305085</td>\n",
       "      <td>0.214953</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.255274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.274084</td>\n",
       "      <td>0.245327</td>\n",
       "      <td>0.211864</td>\n",
       "      <td>0.271028</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.227848</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "front_camera  upto 4MP  upto 8MP  upto 12MP  upto 16MP  upto 20MP  No Camera\n",
       "price_range                                                                 \n",
       "0             0.257802  0.250000   0.237288   0.205607   0.222222   0.255274\n",
       "1             0.244233  0.233645   0.245763   0.308411   0.277778   0.261603\n",
       "2             0.223881  0.271028   0.305085   0.214953   0.166667   0.255274\n",
       "3             0.274084  0.245327   0.211864   0.271028   0.333333   0.227848"
      ]
     },
     "execution_count": 74,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df['price_range'], df['front_camera'], normalize = 'columns')\n",
    "\n",
    "# there's no a distinguish pattern from looking the the camera pixel except on the upto 20mp phone primary camera "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "477cb832",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "477cb832",
    "outputId": "fa264c08-1a76-4268-b267-fee31d7a2ab1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>primary_camera</th>\n",
       "      <th>upto 4MP</th>\n",
       "      <th>upto 8MP</th>\n",
       "      <th>upto 12MP</th>\n",
       "      <th>upto 16MP</th>\n",
       "      <th>upto 20MP</th>\n",
       "      <th>No Camera</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.263427</td>\n",
       "      <td>0.229282</td>\n",
       "      <td>0.253102</td>\n",
       "      <td>0.257453</td>\n",
       "      <td>0.224599</td>\n",
       "      <td>0.326733</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.255754</td>\n",
       "      <td>0.245856</td>\n",
       "      <td>0.258065</td>\n",
       "      <td>0.211382</td>\n",
       "      <td>0.272727</td>\n",
       "      <td>0.267327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.245524</td>\n",
       "      <td>0.254144</td>\n",
       "      <td>0.245658</td>\n",
       "      <td>0.298103</td>\n",
       "      <td>0.221925</td>\n",
       "      <td>0.198020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.235294</td>\n",
       "      <td>0.270718</td>\n",
       "      <td>0.243176</td>\n",
       "      <td>0.233062</td>\n",
       "      <td>0.280749</td>\n",
       "      <td>0.207921</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "primary_camera  upto 4MP  upto 8MP  upto 12MP  upto 16MP  upto 20MP  No Camera\n",
       "price_range                                                                   \n",
       "0               0.263427  0.229282   0.253102   0.257453   0.224599   0.326733\n",
       "1               0.255754  0.245856   0.258065   0.211382   0.272727   0.267327\n",
       "2               0.245524  0.254144   0.245658   0.298103   0.221925   0.198020\n",
       "3               0.235294  0.270718   0.243176   0.233062   0.280749   0.207921"
      ]
     },
     "execution_count": 75,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df['price_range'], df['primary_camera'], normalize = 'columns')\n",
    "\n",
    "# the majority of no camera phone are in the price range 0 which is kinda make sense less technoloy = cheaper price  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "8d6b35bc",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "8d6b35bc",
    "outputId": "c59880b9-f9c6-43f2-8e5d-66bab3ba7fff"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fc</th>\n",
       "      <th>pc</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.084</td>\n",
       "      <td>9.574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.340</td>\n",
       "      <td>9.924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.498</td>\n",
       "      <td>10.018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.316</td>\n",
       "      <td>10.150</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                fc      pc\n",
       "price_range               \n",
       "0            4.084   9.574\n",
       "1            4.340   9.924\n",
       "2            4.498  10.018\n",
       "3            4.316  10.150"
      ]
     },
     "execution_count": 76,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('price_range')['fc','pc'].mean()\n",
    "\n",
    "# while front camera seems doesn't have any implication to price_range \n",
    "# it seems that higher price range has a higher megapixel on the primary camera "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2f6adb4a",
   "metadata": {
    "id": "2f6adb4a"
   },
   "source": [
    "### Pixel, Screen Size and Price range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "7df6be8f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "7df6be8f",
    "outputId": "0efd73df-ba9c-4c2a-bf77-9bf60a823e9c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>screen_size</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>679.602703</td>\n",
       "      <td>1150.270</td>\n",
       "      <td>5.55896</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>786.934862</td>\n",
       "      <td>1251.908</td>\n",
       "      <td>5.49266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>785.410995</td>\n",
       "      <td>1234.046</td>\n",
       "      <td>5.45398</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>874.051548</td>\n",
       "      <td>1369.838</td>\n",
       "      <td>5.77544</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              px_height  px_width  screen_size\n",
       "price_range                                   \n",
       "0            679.602703  1150.270      5.55896\n",
       "1            786.934862  1251.908      5.49266\n",
       "2            785.410995  1234.046      5.45398\n",
       "3            874.051548  1369.838      5.77544"
      ]
     },
     "execution_count": 77,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('price_range')['px_height', 'px_width','screen_size'].mean()\n",
    "\n",
    "\n",
    "# the pixel width and and height is somehow correlated with the price range \n",
    "# the higher the price range the higher the chances px_width and px_height\n",
    "# the higest pricest range has the biggest screen size while, in general it doesn't seem to effect much on the price range"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40e62871",
   "metadata": {
    "id": "40e62871"
   },
   "source": [
    "### Internal Memory and RAM, weight and Price Range\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "02786518",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "02786518",
    "outputId": "a9d6dc85-1f2f-4495-a73c-8254ae048736"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>int_memory</th>\n",
       "      <th>ram</th>\n",
       "      <th>mobile_wt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>31.174</td>\n",
       "      <td>785.314</td>\n",
       "      <td>140.552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>32.116</td>\n",
       "      <td>1679.490</td>\n",
       "      <td>140.510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>30.920</td>\n",
       "      <td>2582.816</td>\n",
       "      <td>143.614</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>33.976</td>\n",
       "      <td>3449.232</td>\n",
       "      <td>136.320</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             int_memory       ram  mobile_wt\n",
       "price_range                                 \n",
       "0                31.174   785.314    140.552\n",
       "1                32.116  1679.490    140.510\n",
       "2                30.920  2582.816    143.614\n",
       "3                33.976  3449.232    136.320"
      ]
     },
     "execution_count": 78,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.groupby('price_range')['int_memory', 'ram', 'mobile_wt'].mean()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6598d880",
   "metadata": {
    "id": "6598d880"
   },
   "source": [
    "### Touch Screen and Price Range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "eeca4c5d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "eeca4c5d",
    "outputId": "ef10e423-ca70-4ff3-8c57-985c509cb536"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>touch_screen</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.239437</td>\n",
       "      <td>0.260437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.240443</td>\n",
       "      <td>0.259443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.266600</td>\n",
       "      <td>0.233598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.253521</td>\n",
       "      <td>0.246521</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "touch_screen         0         1\n",
       "price_range                     \n",
       "0             0.239437  0.260437\n",
       "1             0.240443  0.259443\n",
       "2             0.266600  0.233598\n",
       "3             0.253521  0.246521"
      ]
     },
     "execution_count": 79,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.crosstab(df['price_range'], df['touch_screen'], normalize = 'columns')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8deb7b1c",
   "metadata": {
    "id": "8deb7b1c"
   },
   "source": [
    "### Visualization "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "2892a69c",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 118
    },
    "id": "2892a69c",
    "outputId": "6f7bd8af-352e-4588-f4fd-3b67a43a50d9"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "      <th>is_fc</th>\n",
       "      <th>is_pc</th>\n",
       "      <th>screen_size</th>\n",
       "      <th>screen_quality</th>\n",
       "      <th>ram_size</th>\n",
       "      <th>speed</th>\n",
       "      <th>multicore_processor</th>\n",
       "      <th>primary_camera</th>\n",
       "      <th>front_camera</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>786.934862</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.49</td>\n",
       "      <td>HD Screen</td>\n",
       "      <td>2 to 3 GB</td>\n",
       "      <td>upto 2.5GHz</td>\n",
       "      <td>1.0</td>\n",
       "      <td>upto 4MP</td>\n",
       "      <td>upto 4MP</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc   px_height  px_width   ram  talk_time  three_g  \\\n",
       "0        188        2   2  786.934862       756  2549         19        0   \n",
       "\n",
       "   touch_screen  wifi  price_range  is_fc  is_pc  screen_size screen_quality  \\\n",
       "0             0     1            1    1.0    1.0         4.49      HD Screen   \n",
       "\n",
       "    ram_size        speed  multicore_processor primary_camera front_camera  \n",
       "0  2 to 3 GB  upto 2.5GHz                  1.0       upto 4MP     upto 4MP  "
      ]
     },
     "execution_count": 80,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2313be06",
   "metadata": {
    "id": "2313be06"
   },
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "ca30fe6e",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 335
    },
    "id": "ca30fe6e",
    "outputId": "4447d1bd-dcc2-4b37-8deb-6d9177f50abd"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#price range \n",
    "\n",
    "plt.figure(figsize = (12, 5))\n",
    "sns.countplot(df['price_range'], palette = 'pastel')\n",
    "plt.show()\n",
    "\n",
    "# there are 500 phones in each price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "77309a44",
   "metadata": {
    "id": "77309a44"
   },
   "outputs": [],
   "source": [
    "# in general that the disribution of  the ram size is multimodal distribution let's break it down\n",
    "# per price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "62b14eff",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 559
    },
    "id": "62b14eff",
    "outputId": "e1e4185e-7a9c-4f74-aaf8-fea62fd0e6ab"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'RAM distribution of price range 3')"
      ]
     },
     "execution_count": 83,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_price_0 = df[df['price_range']==0]\n",
    "df_price_1 = df[df['price_range']==1]\n",
    "df_price_2 = df[df['price_range']==2]\n",
    "df_price_3 = df[df['price_range']==3]\n",
    "\n",
    "plt.figure(figsize = (20, 10))\n",
    "plt.subplot(2,2,1)\n",
    "sns.distplot(df_price_0['ram'])\n",
    "plt.title('RAM distribution of price range 0')\n",
    "plt.subplot(2,2,2)\n",
    "sns.distplot(df_price_1['ram'])\n",
    "plt.title('RAM distribution of price range 1')\n",
    "plt.subplot(2,2,3)\n",
    "sns.distplot(df_price_2['ram'])\n",
    "plt.title('RAM distribution of price range 2')\n",
    "plt.subplot(2,2,4)\n",
    "sns.distplot(df_price_3['ram'])\n",
    "plt.title('RAM distribution of price range 3')\n",
    "\n",
    "# we can see from the chart below that the distribution is looking very different if we compare it \n",
    "# per price range \n",
    "\n",
    "# for the the price range 0 majority of the phone are in range of 400 - 700 mb RAM, and the max is around 2000 mb\n",
    "# for  price range 1 ranging from 500 - 3000 with the highest distribution on RAM around 1300 - 2000mb\n",
    "# for the price range 2 the RAM distribution ranging  from 1000 - 4000 mb with the highest distribution\n",
    "# around 2500mb\n",
    "# for the highest price range the ram range from 2000mb to - 4000 mb with the highest distribution around 4000 mb\n",
    "\n",
    "# this we can make conclusion that from our last analysis that the higher the price range the higher \n",
    "# the average ram size \n",
    "\n",
    "# and from this distribution plot we can see that the min value of ram increases with the increase \n",
    "# of the price range this conclude that the higher price range has higher min value of ram "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "130b420f",
   "metadata": {
    "id": "130b420f"
   },
   "source": [
    "### Battery "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "07c4f197",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 335
    },
    "id": "07c4f197",
    "outputId": "9900e0cc-1478-4c82-c854-01607f3218ba"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (7, 5))\n",
    "sns.distplot(df['battery_power'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "73160e57",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 560
    },
    "id": "73160e57",
    "outputId": "2eee9778-dd37-4d51-a4d2-94a578de89e7"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'battery distribution of price range 3')"
      ]
     },
     "execution_count": 85,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20, 10))\n",
    "plt.subplot(2,2,1)\n",
    "sns.distplot(df_price_0['battery_power'])\n",
    "plt.title('battery distribution of price range 0')\n",
    "plt.subplot(2,2,2)\n",
    "sns.distplot(df_price_1['battery_power'])\n",
    "plt.title('battery distribution of price range 1')\n",
    "plt.subplot(2,2,3)\n",
    "sns.distplot(df_price_2['battery_power'])\n",
    "plt.title('battery distribution of price range 2')\n",
    "plt.subplot(2,2,4)\n",
    "sns.distplot(df_price_3['battery_power'])\n",
    "plt.title('battery distribution of price range 3')\n",
    "\n",
    "# well the battery power distribution itself doesn't really tell a lot about how it correlated with price\n",
    "# we can see that the pricerange 0 has more lower power battery product compared to other price range \n",
    "# since the distribution  is somehow right skewed "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a616cf9",
   "metadata": {
    "id": "3a616cf9"
   },
   "source": [
    "### Pixel Height and Width"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "63a4b092",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 335
    },
    "id": "63a4b092",
    "outputId": "0786e2ce-06f5-4606-afca-448fbcebd753"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (7, 5))\n",
    "sns.distplot(df['px_height'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "ef27dfb4",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 560
    },
    "id": "ef27dfb4",
    "outputId": "6f92c0a9-a185-4934-9f2b-72e9e7604c3b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Pixel Height distribution of price range 3')"
      ]
     },
     "execution_count": 87,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20, 10))\n",
    "plt.subplot(2,2,1)\n",
    "sns.distplot(df_price_0['px_height'])\n",
    "plt.title('Pixel Height distribution of price range 0')\n",
    "plt.subplot(2,2,2)\n",
    "sns.distplot(df_price_1['px_height'])\n",
    "plt.title('Pixel Height distribution of price range 1')\n",
    "plt.subplot(2,2,3)\n",
    "sns.distplot(df_price_2['px_height'])\n",
    "plt.title('Pixel Height distribution of price range 2')\n",
    "plt.subplot(2,2,4)\n",
    "sns.distplot(df_price_3['px_height'])\n",
    "plt.title('Pixel Height distribution of price range 3')\n",
    "\n",
    "# the pixel weight distribution is right skewed even after we subset it per price range \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "e46fd87d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 335
    },
    "id": "e46fd87d",
    "outputId": "1cae8b93-1fc5-47a6-b2f2-da9a2fd40507"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (7, 5))\n",
    "sns.distplot(df['px_width'])\n",
    "plt.show()\n",
    "\n",
    "# compared to the pixel height the pixel width have a multimodal distribution\n",
    "# and we will see how's the distribution per price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "62061ba9",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 560
    },
    "id": "62061ba9",
    "outputId": "36eb1716-1bc4-4731-8d91-2027ee3b0abe"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Pixel Width distribution of price range 3')"
      ]
     },
     "execution_count": 89,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20, 10))\n",
    "plt.subplot(2,2,1)\n",
    "sns.distplot(df_price_0['px_width'])\n",
    "plt.title('Pixel Width distribution of price range 0')\n",
    "plt.subplot(2,2,2)\n",
    "sns.distplot(df_price_1['px_width'])\n",
    "plt.title('Pixel Width distribution of price range 1')\n",
    "plt.subplot(2,2,3)\n",
    "sns.distplot(df_price_2['px_width'])\n",
    "plt.title('Pixel Width distribution of price range 2')\n",
    "plt.subplot(2,2,4)\n",
    "sns.distplot(df_price_3['px_width'])\n",
    "plt.title('Pixel Width distribution of price range 3')\n",
    "\n",
    "# there's something interesting with pixel width\n",
    "# we see that the price range of 0 has more product on the lower pixel width \n",
    "# while the highest price range has more products toward the higher end of pixel width \n",
    "# on the price range of 2 and 3 seems like the products is almost evenly distributed by px width"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "cf99360f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 335
    },
    "id": "cf99360f",
    "outputId": "0d1311b0-4e0c-4efc-d598-e0f2b66646d8"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (7, 5))\n",
    "sns.distplot(df['int_memory'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "dfabf163",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 560
    },
    "id": "dfabf163",
    "outputId": "a4258243-8ee7-40b0-adf2-1ac81ad27583"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Internal memory distribution of price range 3')"
      ]
     },
     "execution_count": 91,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20, 10))\n",
    "plt.subplot(2,2,1)\n",
    "sns.distplot(df_price_0['int_memory'])\n",
    "plt.title('Internal memory distribution of price range 0')\n",
    "plt.subplot(2,2,2)\n",
    "sns.distplot(df_price_1['int_memory'])\n",
    "plt.title('Internal memory distribution of price range 1')\n",
    "plt.subplot(2,2,3)\n",
    "sns.distplot(df_price_2['int_memory'])\n",
    "plt.title('Internal memory distribution of price range 2')\n",
    "plt.subplot(2,2,4)\n",
    "sns.distplot(df_price_3['int_memory'])\n",
    "plt.title('Internal memory distribution of price range 3')\n",
    "\n",
    "## we can see that internal memory sizes doesn't have many difference when it comes to distribution\n",
    "# per price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "d3b701de",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 353
    },
    "id": "d3b701de",
    "outputId": "9d2a3bcb-2bc2-4232-8b31-adc8fc71517a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44dec7f410>"
      ]
     },
     "execution_count": 92,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (14, 5))\n",
    "sns.countplot(df['four_g'], palette = 'mako', hue = df['price_range'])\n",
    "\n",
    "# there are slightly more phone with 4g line compared to non 4g line \n",
    "# phone with price range 3 has the most 4gline  among all group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "743780f2",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 353
    },
    "id": "743780f2",
    "outputId": "29ed345b-29a5-4348-b1e2-41b35188cdef"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44deec5810>"
      ]
     },
     "execution_count": 93,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmQAAAE+CAYAAAAj7AywAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAdUElEQVR4nO3df5BX9X3v8ee7gKBBRRG9lCUXU60CKogLYjCOmiBKvWijUYwaf6V4W82YsUnUW6e2mXEmvWmMmh+meMGYTCPmR41Ox+sVNdaJgyIYYjCGQBJSdocKJf4AFYX1ff/YA1nTBRbd8/182X0+Zr6z53zO53O+790/mBefc87nRGYiSZKkcv6odAGSJEn9nYFMkiSpMAOZJElSYQYySZKkwgxkkiRJhRnIJEmSChtY9xdExABgCdCemWdGxKHAAmA4sBS4ODPfiojBwLeA44ANwPmZuXpn5z7ooINyzJgxdZYvSZLUK5YuXfqfmTmiu2O1BzLgGuAFYL9q/x+AL2fmgoj4BnAFcEf186XMPCwiZlf9zt/ZiceMGcOSJUvqq1ySJKmXRMRvd3Ss1kuWEdEC/Bnwf6r9AE4Fvl91uRs4u9o+q9qnOv7hqr8kSVKfVvc9ZLcCnwPervaHAy9n5tZqvw0YVW2PAtYAVMdfqfpLkiT1abUFsog4E1iXmUt7+bxzImJJRCxZv359b55akiSpiDrvIZsGzIqImcAQOu8huw0YFhEDq1mwFqC96t8OjAbaImIgsD+dN/e/Q2bOBeYCtLa2/pcXcW7ZsoW2tjY2b95cw6+05xgyZAgtLS0MGjSodCmSJGkXagtkmXkDcANARJwMfCYzL4yI7wHn0vmk5SXA/dWQB6r9RdXxx/JdvPm8ra2NfffdlzFjxtBfb0HLTDZs2EBbWxuHHnpo6XIkSdIulFiH7Drg2ohYRec9YvOq9nnA8Kr9WuD6d3PyzZs3M3z48H4bxgAiguHDh/f7WUJJkvYUjVj2gsx8HHi82v41MKWbPpuBj/XG9/XnMLaNfwNJkvYcrtQvSZJUmIGsi7/927/lkUceKV2GJEnqZxpyyXJP0NHRwec///lazr1161YGDvRPLUmSutcvZshWr17NkUceyYUXXsjYsWM599xzef311xkzZgzXXXcdkyZN4nvf+x6XXnop3/9+50sEnnnmGT74wQ8yYcIEpkyZwsaNG+no6OCzn/0skydP5phjjuGf/umfdvidjz/+OB/60IeYNWsW48aNA+Dss8/muOOOY/z48cydO3d736FDh/I3f/M3TJgwgalTp/Liiy8C8Ktf/YqpU6dy9NFHc+ONNzJ06NDtY774xS9ur+Omm26q488mSZIapN9M26xYsYJ58+Yxbdo0Lr/8cr7+9a8DMHz4cJ599lkAHnroIQDeeustzj//fO69914mT57Mq6++yt577828efPYf//9eeaZZ3jzzTeZNm0ap5122g6Xlnj22WdZvnz59uPz58/nwAMP5I033mDy5Mmcc845DB8+nNdee42pU6dy880387nPfY4777yTG2+8kWuuuYZrrrmGCy64gG984xvbz/vwww+zcuVKFi9eTGYya9YsnnjiCU466aQ6/4SSpG585JY7S5dQq0eu/YvSJfQL/SaQjR49mmnTpgFw0UUXcfvttwNw/vn/9f3lK1asYOTIkUyePBmA/fbrfC/6ww8/zHPPPbd9Fu2VV15h5cqVOwxkU6ZMecex22+/nfvuuw+ANWvWsHLlSoYPH85ee+3FmWeeCcBxxx3HwoULAVi0aBE//OEPAfj4xz/OZz7zme11PPzwwxx77LEAbNq0iZUrVxrIJEm97ponFpQuoTa3nTS7dAnb9ZtA9ofLQGzbf9/73tfjc2QmX/nKV5gxY0aP+nc99+OPP84jjzzCokWL2GeffTj55JO3rxM2aNCg7fUMGDCArVu3dnu+rnXccMMNXHnllT2uXZIkNa9+cQ8ZwL//+7+zaNEiAL7zne9w4okn7rDvEUccwdq1a3nmmWcA2LhxI1u3bmXGjBnccccdbNmyBYBf/vKXvPbaaz36/ldeeYUDDjiAffbZh1/84hc89dRTuxwzdepUfvCDHwCwYMHv/4cyY8YM5s+fz6ZNmwBob29n3bp1PapDkiQ1n34TyI444gi+9rWvMXbsWF566SX+8i//cod999prL+69914+9alPMWHCBKZPn87mzZv55Cc/ybhx45g0aRJHHXUUV1555S5ns7Y5/fTT2bp1K2PHjuX6669n6tSpuxxz6623csstt3DMMcewatUq9t9/fwBOO+00Pv7xj3PCCSdw9NFHc+6557Jx48ae/SEkSVLTiXfxusim0dramkuWLHlH2wsvvMDYsWPf0bZ69WrO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\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (10, 5))\n",
    "sns.countplot(df['three_g'], palette = 'mako', hue = df['price_range'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "9652fa91",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 516
    },
    "id": "9652fa91",
    "outputId": "d51d00fb-a83a-4617-b560-61fc5ae68404"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44deaace50>"
      ]
     },
     "execution_count": 94,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Processor and price Range\n",
    "\n",
    "plt.figure(figsize = (13, 8))\n",
    "\n",
    "sns.barplot(df['price_range'], df['clock_speed'], hue= df['multicore_processor'], palette = 'RdBu')\n",
    "\n",
    "# singlecore processor has a faster avg clock speed compared to multicore processor in all price range "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "ac356fee",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 516
    },
    "id": "ac356fee",
    "outputId": "7be2c211-9430-4e3a-b614-2744e16576ae"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44de9ac650>"
      ]
     },
     "execution_count": 95,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (13, 8))\n",
    "\n",
    "sns.barplot(df['price_range'], df['ram'], hue= df['multicore_processor'], palette = 'BuPu')\n",
    "\n",
    "# as from our analysis before that ramsize is highly correlated with the price range \n",
    "# the more expensive the price range the higher the ram a phone have "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b7f33c4",
   "metadata": {
    "id": "5b7f33c4"
   },
   "source": [
    "# ML PART"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "DA2ZIlv8H8F6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DA2ZIlv8H8F6",
    "outputId": "daae6158-4ae3-4a97-ebd7-3a6445e8e425"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: xgboost in /usr/local/lib/python3.7/dist-packages (0.90)\n",
      "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from xgboost) (1.4.1)\n",
      "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from xgboost) (1.19.5)\n"
     ]
    }
   ],
   "source": [
    "pip install xgboost\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "b946597b",
   "metadata": {
    "id": "b946597b"
   },
   "outputs": [],
   "source": [
    "import pandas as pd \n",
    "import numpy as np\n",
    "import seaborn as sns \n",
    "import matplotlib.pyplot as plt \n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import SVC \n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split, RandomizedSearchCV, GridSearchCV\n",
    "from sklearn.metrics import confusion_matrix, f1_score, recall_score,accuracy_score, precision_score, classification_report\n",
    "import warnings \n",
    "warnings.filterwarnings('ignore')\n",
    "import sidetable as stb\n",
    "from xgboost import XGBClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "83deb616",
   "metadata": {
    "id": "83deb616"
   },
   "outputs": [],
   "source": [
    "pd.set_option('max_columns',None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "cc321e1a",
   "metadata": {
    "id": "cc321e1a"
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "96080726",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 226
    },
    "id": "96080726",
    "outputId": "ac3602fc-a7e5-427c-ec8e-44d8edda4559"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>battery_power</th>\n",
       "      <th>blue</th>\n",
       "      <th>clock_speed</th>\n",
       "      <th>dual_sim</th>\n",
       "      <th>fc</th>\n",
       "      <th>four_g</th>\n",
       "      <th>int_memory</th>\n",
       "      <th>m_dep</th>\n",
       "      <th>mobile_wt</th>\n",
       "      <th>n_cores</th>\n",
       "      <th>pc</th>\n",
       "      <th>px_height</th>\n",
       "      <th>px_width</th>\n",
       "      <th>ram</th>\n",
       "      <th>sc_h</th>\n",
       "      <th>sc_w</th>\n",
       "      <th>talk_time</th>\n",
       "      <th>three_g</th>\n",
       "      <th>touch_screen</th>\n",
       "      <th>wifi</th>\n",
       "      <th>price_range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>842</td>\n",
       "      <td>0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0.6</td>\n",
       "      <td>188</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>756</td>\n",
       "      <td>2549</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1021</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>53</td>\n",
       "      <td>0.7</td>\n",
       "      <td>136</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>905</td>\n",
       "      <td>1988</td>\n",
       "      <td>2631</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>563</td>\n",
       "      <td>1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>41</td>\n",
       "      <td>0.9</td>\n",
       "      <td>145</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>1263</td>\n",
       "      <td>1716</td>\n",
       "      <td>2603</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>615</td>\n",
       "      <td>1</td>\n",
       "      <td>2.5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0.8</td>\n",
       "      <td>131</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>1216</td>\n",
       "      <td>1786</td>\n",
       "      <td>2769</td>\n",
       "      <td>16</td>\n",
       "      <td>8</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1821</td>\n",
       "      <td>1</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>44</td>\n",
       "      <td>0.6</td>\n",
       "      <td>141</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>1208</td>\n",
       "      <td>1212</td>\n",
       "      <td>1411</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   battery_power  blue  clock_speed  dual_sim  fc  four_g  int_memory  m_dep  \\\n",
       "0            842     0          2.2         0   1       0           7    0.6   \n",
       "1           1021     1          0.5         1   0       1          53    0.7   \n",
       "2            563     1          0.5         1   2       1          41    0.9   \n",
       "3            615     1          2.5         0   0       0          10    0.8   \n",
       "4           1821     1          1.2         0  13       1          44    0.6   \n",
       "\n",
       "   mobile_wt  n_cores  pc  px_height  px_width   ram  sc_h  sc_w  talk_time  \\\n",
       "0        188        2   2         20       756  2549     9     7         19   \n",
       "1        136        3   6        905      1988  2631    17     3          7   \n",
       "2        145        5   6       1263      1716  2603    11     2          9   \n",
       "3        131        6   9       1216      1786  2769    16     8         11   \n",
       "4        141        2  14       1208      1212  1411     8     2         15   \n",
       "\n",
       "   three_g  touch_screen  wifi  price_range  \n",
       "0        0             0     1            1  \n",
       "1        1             1     0            2  \n",
       "2        1             1     0            2  \n",
       "3        1             0     0            2  \n",
       "4        1             1     0            1  "
      ]
     },
     "execution_count": 113,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()\n",
    "\n",
    "# since all the data has been cleaned during the eda process we're going to focus on the machine learning process"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb7080bd",
   "metadata": {
    "id": "cb7080bd"
   },
   "source": [
    "### Feature Engineering and encoding Process\n",
    "\n",
    "#### Encoding the screen quality "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "8832192c",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "8832192c",
    "outputId": "5bb669bb-ee80-45e2-9e86-7da10c1e86b4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['battery_power', 'blue', 'clock_speed', 'dual_sim', 'fc', 'four_g',\n",
       "       'int_memory', 'm_dep', 'mobile_wt', 'n_cores', 'pc', 'px_height',\n",
       "       'px_width', 'ram', 'sc_h', 'sc_w', 'talk_time', 'three_g',\n",
       "       'touch_screen', 'wifi', 'price_range'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 114,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "8ea29ec7",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "8ea29ec7",
    "outputId": "cfe771e0-76e3-40bc-b386-8db0ac39e2c1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2000 entries, 0 to 1999\n",
      "Data columns (total 21 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   battery_power  2000 non-null   int64  \n",
      " 1   blue           2000 non-null   int64  \n",
      " 2   clock_speed    2000 non-null   float64\n",
      " 3   dual_sim       2000 non-null   int64  \n",
      " 4   fc             2000 non-null   int64  \n",
      " 5   four_g         2000 non-null   int64  \n",
      " 6   int_memory     2000 non-null   int64  \n",
      " 7   m_dep          2000 non-null   float64\n",
      " 8   mobile_wt      2000 non-null   int64  \n",
      " 9   n_cores        2000 non-null   int64  \n",
      " 10  pc             2000 non-null   int64  \n",
      " 11  px_height      2000 non-null   int64  \n",
      " 12  px_width       2000 non-null   int64  \n",
      " 13  ram            2000 non-null   int64  \n",
      " 14  sc_h           2000 non-null   int64  \n",
      " 15  sc_w           2000 non-null   int64  \n",
      " 16  talk_time      2000 non-null   int64  \n",
      " 17  three_g        2000 non-null   int64  \n",
      " 18  touch_screen   2000 non-null   int64  \n",
      " 19  wifi           2000 non-null   int64  \n",
      " 20  price_range    2000 non-null   int64  \n",
      "dtypes: float64(2), int64(19)\n",
      "memory usage: 328.2 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()\n",
    "\n",
    "# now all the data has been encoded we can move on with the process "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "5ee6c221",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 569
    },
    "id": "5ee6c221",
    "outputId": "2e66abd9-38ab-40f0-8b1d-18f2c405c47d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44de886950>"
      ]
     },
     "execution_count": 116,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1656x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light",
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (23, 10))\n",
    "sns.heatmap(df.corr(), annot = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "42fdd3b8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "42fdd3b8",
    "outputId": "b7d351bf-1c02-467d-d327-0a28c8cae178"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ram              0.917046\n",
       "battery_power    0.200723\n",
       "px_width         0.165818\n",
       "px_height        0.148858\n",
       "int_memory       0.044435\n",
       "sc_w             0.038711\n",
       "pc               0.033599\n",
       "three_g          0.023611\n",
       "sc_h             0.022986\n",
       "fc               0.021998\n",
       "talk_time        0.021859\n",
       "blue             0.020573\n",
       "wifi             0.018785\n",
       "dual_sim         0.017444\n",
       "four_g           0.014772\n",
       "n_cores          0.004399\n",
       "m_dep            0.000853\n",
       "clock_speed     -0.006606\n",
       "mobile_wt       -0.030302\n",
       "touch_screen    -0.030411\n",
       "Name: price_range, dtype: float64"
      ]
     },
     "execution_count": 117,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlation = df.corr()\n",
    "correlation['price_range'].sort_values(ascending = False)[1:]\n",
    "\n",
    "# the features that's going to get selected is \n",
    "# - ram\n",
    "# - battery power\n",
    "# - px_width\n",
    "# - px_height\n",
    "# - int_memory\n",
    "# - is_pc\n",
    "\n",
    "# we only select features that has correlation above 0.04 or below 0.04\n",
    "# some features not selected due to multicolinearity "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7de7df8e",
   "metadata": {
    "id": "7de7df8e"
   },
   "source": [
    "## Features Selection and Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "39d7aacd",
   "metadata": {
    "id": "39d7aacd"
   },
   "outputs": [],
   "source": [
    "X = df[['ram', 'battery_power', 'px_height','px_width', 'int_memory']]\n",
    "y = df['price_range']\n",
    "\n",
    "# - ram\n",
    "# - battery power\n",
    "# - px_width\n",
    "# - px_height\n",
    "# - int_memory\n",
    "# - is_pc\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "932a6a7c",
   "metadata": {
    "id": "932a6a7c"
   },
   "source": [
    "**Train Test Split**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "69d93bbd",
   "metadata": {
    "id": "69d93bbd"
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X,y, stratify = y, random_state  = 42 , test_size = 0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f798670e",
   "metadata": {
    "id": "f798670e"
   },
   "source": [
    "## Base Model\n",
    "\n",
    "**Logistic Regression**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "qCEGd85_IocD",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 905
    },
    "id": "qCEGd85_IocD",
    "outputId": "4576a740-6a53-4ec5-b4b6-99cad40b3ec1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy:  0.545625\n",
      "test accuracy:  0.55\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.82      0.75      0.78       100\n",
      "           1       0.43      0.42      0.43       100\n",
      "           2       0.39      0.31      0.34       100\n",
      "           3       0.55      0.72      0.62       100\n",
      "\n",
      "    accuracy                           0.55       400\n",
      "   macro avg       0.55      0.55      0.54       400\n",
      "weighted avg       0.55      0.55      0.54       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f44d4df2450>"
      ]
     },
     "execution_count": 145,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "log_reg = LogisticRegression()\n",
    "\n",
    "log_reg.fit(X_train,y_train)\n",
    "\n",
    "y_logreg_base = log_reg.predict(X_test)\n",
    "\n",
    "## checking score of the logistic regression\n",
    "\n",
    "logreg_base_train = log_reg.score(X_train, y_train)\n",
    "\n",
    "print('train accuracy: ', log_reg.score(X_train, y_train))\n",
    "print('test accuracy: ', log_reg.score(X_test, y_test))\n",
    "\n",
    "acc_base_logreg = accuracy_score(y_test, y_logreg_base)\n",
    "recall_base_logreg = recall_score(y_test, y_logreg_base, average = None)\n",
    "precision_base_logreg = precision_score(y_test, y_logreg_base, average = None)\n",
    "f1_base_logreg = f1_score(y_test, y_logreg_base, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_logreg_base))\n",
    "\n",
    "from yellowbrick.classifier import ConfusionMatrix\n",
    "\n",
    "plt.figure(figsize = (10, 5))\n",
    "\n",
    "cm_base_logreg = ConfusionMatrix(log_reg, classes = [0,1,2,3])\n",
    "cm_base_logreg.fit(X_train, y_train)\n",
    "\n",
    "cm_base_logreg.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix Logistic Regression Testing')\n",
    "\n",
    "cm_logreg_base = confusion_matrix(y_test, y_logreg_base, labels = [0,1,2,3])\n",
    "\n",
    "\n",
    "\n",
    "df_logreg_base = pd.DataFrame(data = cm_logreg_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "plt.figure(figsize = (8, 5))\n",
    "sns.heatmap(df_logreg_base, annot = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de0333dc",
   "metadata": {
    "id": "de0333dc"
   },
   "source": [
    "### KNeighbors Classsifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "7KkJxm5AIvT6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "7KkJxm5AIvT6",
    "outputId": "8b641e19-e514-44a5-8653-ed27a2e894bc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy KNN base:  0.94375\n",
      "test accuracy KNN base:  0.935\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99       100\n",
      "           1       0.92      0.93      0.93       100\n",
      "           2       0.90      0.87      0.88       100\n",
      "           3       0.94      0.95      0.95       100\n",
      "\n",
      "    accuracy                           0.94       400\n",
      "   macro avg       0.93      0.94      0.93       400\n",
      "weighted avg       0.93      0.94      0.93       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "KNN_base = KNeighborsClassifier()\n",
    "KNN_base.fit(X_train, y_train)\n",
    "y_KNN_base = KNN_base.predict(X_test)\n",
    "\n",
    "# training and testing score \n",
    "KNN_base_train = KNN_base.score(X_train, y_train)\n",
    "\n",
    "print('train accuracy KNN base: ', KNN_base.score(X_train, y_train))\n",
    "print('test accuracy KNN base: ', KNN_base.score(X_test, y_test))\n",
    "\n",
    "acc_base_KNN = accuracy_score(y_test, y_KNN_base)\n",
    "recall_base_KNN = recall_score(y_test, y_KNN_base, average = None)\n",
    "precision_base_KNN = precision_score(y_test, y_KNN_base, average = None)\n",
    "f1_base_KNN = f1_score(y_test, y_KNN_base, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_KNN_base))\n",
    "\n",
    "cm_base_KNN = ConfusionMatrix(KNN_base, classes = [0,1,2,3])\n",
    "cm_base_KNN.fit(X_train, y_train)\n",
    "\n",
    "cm_base_KNN.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix KNN Testing')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c52db4a2",
   "metadata": {
    "id": "c52db4a2"
   },
   "source": [
    "### SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "pyRrQxTAI0Ui",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "pyRrQxTAI0Ui",
    "outputId": "169a1703-1142-49bc-a6b0-2df58db4fc25"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy SVC base:  0.9525\n",
      "test accuracy SVC base:  0.9675\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      1.00      1.00       100\n",
      "           1       0.96      0.98      0.97       100\n",
      "           2       0.96      0.92      0.94       100\n",
      "           3       0.96      0.97      0.97       100\n",
      "\n",
      "    accuracy                           0.97       400\n",
      "   macro avg       0.97      0.97      0.97       400\n",
      "weighted avg       0.97      0.97      0.97       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "SVC_base = SVC()\n",
    "SVC_base.fit(X_train, y_train)\n",
    "y_SVC_base = SVC_base.predict(X_test)\n",
    "\n",
    "SVC_base_train = SVC_base.score(X_train, y_train)\n",
    "\n",
    "print('train accuracy SVC base: ', SVC_base.score(X_train, y_train))\n",
    "print('test accuracy SVC base: ', SVC_base.score(X_test, y_test))\n",
    "\n",
    "acc_base_SVC = accuracy_score(y_test, y_SVC_base)\n",
    "recall_base_SVC = recall_score(y_test, y_SVC_base, average = None)\n",
    "precision_base_SVC = precision_score(y_test, y_SVC_base, average = None)\n",
    "f1_base_SVC = f1_score(y_test, y_SVC_base, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_SVC_base))\n",
    "\n",
    "cm_base_SVC = ConfusionMatrix(SVC_base, classes = [0,1,2,3])\n",
    "cm_base_SVC.fit(X_train, y_train)\n",
    "\n",
    "cm_base_SVC.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix SVC Testing')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c58cfd2",
   "metadata": {
    "id": "5c58cfd2"
   },
   "source": [
    "### Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "mq8mAPX3I4g8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "mq8mAPX3I4g8",
    "outputId": "3c90e5f1-dda1-4c5a-b836-7a7581de0d32"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy Decision Tree base:  1.0\n",
      "test accuracy Decision Tree base:  0.885\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.94      0.95      0.95       100\n",
      "           1       0.87      0.85      0.86       100\n",
      "           2       0.80      0.87      0.83       100\n",
      "           3       0.95      0.87      0.91       100\n",
      "\n",
      "    accuracy                           0.89       400\n",
      "   macro avg       0.89      0.89      0.89       400\n",
      "weighted avg       0.89      0.89      0.89       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "DT_base = DecisionTreeClassifier()\n",
    "DT_base.fit(X_train, y_train)\n",
    "y_DT_base = DT_base.predict(X_test)\n",
    "\n",
    "DT_base_train = DT_base.score(X_train, y_train)\n",
    "\n",
    "print('train accuracy Decision Tree base: ', DT_base.score(X_train, y_train))\n",
    "print('test accuracy Decision Tree base: ', DT_base.score(X_test, y_test))\n",
    "\n",
    "# we can clearly see that this model is overfitting looking at the difference from the training and test\n",
    "\n",
    "acc_base_DT = accuracy_score(y_test, y_DT_base)\n",
    "recall_base_DT = recall_score(y_test, y_DT_base, average = None)\n",
    "precision_base_DT = precision_score(y_test, y_DT_base, average = None)\n",
    "f1_base_DT = f1_score(y_test, y_DT_base, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_DT_base))\n",
    "\n",
    "cm_base_DT = ConfusionMatrix(DT_base, classes = [0,1,2,3])\n",
    "cm_base_DT.fit(X_train, y_train)\n",
    "\n",
    "cm_base_DT.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix DT Testing')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "907d0538",
   "metadata": {
    "id": "907d0538"
   },
   "source": [
    "### Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "DjhTH6ilI9DD",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "DjhTH6ilI9DD",
    "outputId": "be36c671-26ea-40bf-be8e-553ef43c6a28"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy Random Forest base:  1.0\n",
      "test accuracy Random Forest base:  0.935\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.96      0.98      0.97       100\n",
      "           1       0.93      0.89      0.91       100\n",
      "           2       0.88      0.92      0.90       100\n",
      "           3       0.97      0.95      0.96       100\n",
      "\n",
      "    accuracy                           0.94       400\n",
      "   macro avg       0.94      0.94      0.94       400\n",
      "weighted avg       0.94      0.94      0.94       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "RF_base = RandomForestClassifier()\n",
    "RF_base.fit(X_train, y_train)\n",
    "y_RF_base = RF_base.predict(X_test)\n",
    "\n",
    "\n",
    "\n",
    "RF_base_train = RF_base.score(X_train, y_train)\n",
    "\n",
    "print('train accuracy Random Forest base: ', RF_base.score(X_train, y_train))\n",
    "print('test accuracy Random Forest base: ', RF_base.score(X_test, y_test))\n",
    "\n",
    "# we can see that this algorithm has an overfitting problem as well\n",
    "\n",
    "acc_base_RF = accuracy_score(y_test, y_RF_base)\n",
    "recall_base_RF = recall_score(y_test, y_RF_base, average = None)\n",
    "precision_base_RF = precision_score(y_test, y_RF_base, average = None)\n",
    "f1_base_RF = f1_score(y_test, y_RF_base, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_RF_base))\n",
    "\n",
    "cm_base_RF = ConfusionMatrix(RF_base, classes = [0,1,2,3])\n",
    "cm_base_RF.fit(X_train, y_train)\n",
    "\n",
    "cm_base_RF.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix Random Forest Testing')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "uVXkJPi4JGbA",
   "metadata": {
    "id": "uVXkJPi4JGbA"
   },
   "source": [
    "### XGB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "6vhRthfJIakC",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "6vhRthfJIakC",
    "outputId": "23af117c-ddc2-43b3-88b4-7943fe7721a5"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy XGB base:  0.97625\n",
      "test accuracy XGB base:  0.9275\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.96      0.96      0.96       100\n",
      "           1       0.88      0.92      0.90       100\n",
      "           2       0.90      0.89      0.89       100\n",
      "           3       0.97      0.94      0.95       100\n",
      "\n",
      "    accuracy                           0.93       400\n",
      "   macro avg       0.93      0.93      0.93       400\n",
      "weighted avg       0.93      0.93      0.93       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "XGB_base = XGBClassifier()\n",
    "XGB_base.fit(X_train, y_train)\n",
    "y_XGB_base = XGB_base.predict(X_test)\n",
    "\n",
    "XGB_base_train = XGB_base.score(X_train, y_train)\n",
    "\n",
    "print('train accuracy XGB base: ', XGB_base.score(X_train, y_train))\n",
    "print('test accuracy XGB base: ', XGB_base.score(X_test, y_test))\n",
    "\n",
    "acc_base_XGB = accuracy_score(y_test, y_XGB_base)\n",
    "recall_base_XGB = recall_score(y_test, y_XGB_base, average = None)\n",
    "precision_base_XGB = precision_score(y_test, y_XGB_base, average = None)\n",
    "f1_base_XGB = f1_score(y_test, y_XGB_base, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_XGB_base))\n",
    "\n",
    "cm_base_XGB = ConfusionMatrix(XGB_base, classes = [0,1,2,3])\n",
    "cm_base_XGB.fit(X_train, y_train)\n",
    "\n",
    "cm_base_XGB.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix XGB Testing')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2251589",
   "metadata": {
    "id": "a2251589"
   },
   "source": [
    "## Evaluation Matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "gT5yhERFJQCX",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 238
    },
    "id": "gT5yhERFJQCX",
    "outputId": "4b812009-99a7-45cc-d6da-3513b6965e25"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression</th>\n",
       "      <td>0.545625</td>\n",
       "      <td>0.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN</th>\n",
       "      <td>0.943750</td>\n",
       "      <td>0.9350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SVC</th>\n",
       "      <td>0.952500</td>\n",
       "      <td>0.9675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Decision Tree</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.8850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Random Forest</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.9350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Xtreme Gradient Boost</th>\n",
       "      <td>0.976250</td>\n",
       "      <td>0.9275</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Training  Testing\n",
       "Logistic Regression    0.545625   0.5500\n",
       "KNN                    0.943750   0.9350\n",
       "SVC                    0.952500   0.9675\n",
       "Decision Tree          1.000000   0.8850\n",
       "Random Forest          1.000000   0.9350\n",
       "Xtreme Gradient Boost  0.976250   0.9275"
      ]
     },
     "execution_count": 153,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cm_logreg_base = confusion_matrix(y_test, y_logreg_base, labels = [0,1,2,3])\n",
    "cm_KNN_base = confusion_matrix(y_test, y_KNN_base, labels = [0,1,2,3])\n",
    "cm_SVC_base = confusion_matrix(y_test, y_SVC_base, labels = [0,1,2,3])\n",
    "cm_DT_base = confusion_matrix(y_test, y_DT_base, labels = [0,1,2,3])\n",
    "cm_RF_base = confusion_matrix(y_test, y_RF_base, labels = [0,1,2,3])\n",
    "cm_XGB_base = confusion_matrix(y_test, y_XGB_base, labels = [0,1,2,3])\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "df_logreg_base = pd.DataFrame(data = cm_logreg_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "df_KNN_base = pd.DataFrame(data = cm_KNN_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "df_SVC_base = pd.DataFrame(data = cm_SVC_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "df_DT_base = pd.DataFrame(data = cm_DT_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "df_RF_base = pd.DataFrame(data = cm_RF_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "df_XGB_base = pd.DataFrame(data = cm_XGB_base, index = ['aktual 0', 'aktual 1', 'aktual 2', 'aktual 3'], columns = ['prediksi 0', 'prediksi 1', 'prediksi 2', 'prediksi 3'])\n",
    "\n",
    "\n",
    "\n",
    "evaluation_matrix_base = {'Training': [logreg_base_train, KNN_base_train,SVC_base_train,DT_base_train, RF_base_train,XGB_base_train],\n",
    "                         'Testing':[acc_base_logreg, acc_base_KNN,acc_base_SVC,acc_base_DT,acc_base_RF,acc_base_XGB]}\n",
    "\n",
    "eva_base = pd.DataFrame(data = evaluation_matrix_base, index = ['Logistic Regression', 'KNN', 'SVC', 'Decision Tree', 'Random Forest', 'Xtreme Gradient Boost'])\n",
    "eva_base\n",
    "\n",
    "# we can see from here that SVC has the best base model among all algortihm\n",
    "# and from the base model there are 3 overfitting case in Decision Tree, Random Forest, and XGB\n",
    "# among all the base model algorithm logistic regression has the worst performance \n",
    "# predicting the base model \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "5-RwBrvQJbg6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 822
    },
    "id": "5-RwBrvQJbg6",
    "outputId": "82d3f711-5784-49bf-c04b-f28329c9cc58"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1080 with 12 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = (20, 15))\n",
    "\n",
    "plt.subplot(3,2,1)\n",
    "sns.heatmap(df_logreg_base, annot = True)\n",
    "plt.title('Logistic Regression')\n",
    "\n",
    "\n",
    "plt.subplot(3,2,2)\n",
    "sns.heatmap(df_KNN_base, annot = True)\n",
    "plt.title('KNN')\n",
    "\n",
    "plt.subplot(3,2,3)\n",
    "sns.heatmap(df_SVC_base, annot = True)\n",
    "plt.title('SVC')\n",
    "\n",
    "plt.subplot(3,2,4)\n",
    "sns.heatmap(df_DT_base, annot = True)\n",
    "plt.title('Decision Tree')\n",
    "\n",
    "plt.subplot(3,2,5)\n",
    "sns.heatmap(df_RF_base, annot = True)\n",
    "plt.title('Random Forest')\n",
    "\n",
    "\n",
    "plt.subplot(3,2,6)\n",
    "sns.heatmap(df_XGB_base, annot = True)\n",
    "plt.title('XGB')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3fe644d4",
   "metadata": {
    "id": "3fe644d4"
   },
   "source": [
    "## Scaling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "Gdzk7H9RJp1N",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "Gdzk7H9RJp1N",
    "outputId": "80ac3310-a74d-4fb8-de4a-a0a79d5f5261"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy Logistic Regression Scaled:  0.9375\n",
      "test accuracy Logistic Regression Scaled:  0.9525\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.96      1.00      0.98       100\n",
      "           1       0.94      0.93      0.93       100\n",
      "           2       0.95      0.90      0.92       100\n",
      "           3       0.96      0.98      0.97       100\n",
      "\n",
      "    accuracy                           0.95       400\n",
      "   macro avg       0.95      0.95      0.95       400\n",
      "weighted avg       0.95      0.95      0.95       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAegAAAFkCAYAAADrIqivAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3dZ3xUdcLF8TMlpFETIFGa0kIJRSmhKZ0kBha7oRdZpQhIESl+ABdQ9FlQkSp2QBCpCoQgKEVFNKAU6R1EIpAJLX0yzwvWWbOQENDJvSG/7xu5Ze7/zFyTM7fMxOJyuVwCAACmYjU6AAAAuB4FDQCACVHQAACYEAUNAIAJUdAAAJgQBQ0AgAlR0DCEy+XSBx98oPbt2ys8PFxt2rTR+PHjdfny5b+03eHDh6t58+basmXLLT92165devrpp//S+H82cuRIhYaGKjExMcv8uLg4hYSEaNmyZTfdxpo1a3TlypUbLpsyZYoWLlx4S3lmzpyZ6/Xzk1atWikuLu6WHjNmzBi9/fbbWrp0qSIiIhQREaF69eqpUaNG7umtW7fecpbFixe7/x0REaHz58/f8jYASbIbHQAF07///W/98MMPeu+99xQUFKSkpCRNmjRJzz77rBYsWCCLxXJb2129erViY2NVvnz5W35s7dq19d57793WuNkpWbKkYmNj9dRTT7nnrV69WnfddVeuHj9t2jTdf//9Kly48HXLhg0b9rflLMgee+wxPfbYY5KuvYkpX768+vfvf1vbOnfunN599109+eSTkqS1a9f+bTlR8HAEjTyXmJioefPmafLkyQoKCpIk+fn5aezYserTp49cLpdSU1M1duxYhYeHKzIyUpMnT5bT6ZR07Whp0aJFevzxx9WsWTNNnjxZktStWzdlZmbq6aef1qZNm647qvpjOiMjQ2PGjFF4eLjatm2r5557TleuXNG2bdvUtm1bSbqt8W/kwQcf1KpVq9zTTqdTW7Zs0f333++ed/ToUXXq1EmRkZFq27ate/1Ro0bp2LFj6tatm+Li4jRy5Ei9+uqr6tChg2JiYtxHxLt27VKLFi109epVSdLs2bM1aNCgHPfB/v37FR0drYiICHXs2NF9xiEzM1MTJkxQ06ZN1alTJ73zzjvq1q2bJF03flpamiZOnKjw8HC1atVKs2fPdm9/z549evTRRxUeHq6uXbvq1KlT12U4ePCgnnrqKUVFRaldu3aaP3++JCklJUUjRoxQq1atFBkZqZUrV0qSkpOT9fzzz7vHe+2112743NavX68OHTqodevW6t27txISEiRJDodDvXv3VqtWrfTMM8/k6mzN4cOH1bVrV4WHh6tDhw7avXu3JOnq1asaMGCAIiMj1bp1a7300ktKT09XdHS0zpw5o4iICKWlpSkkJERnz57Vtm3b9NRTT2nKlCmKjIxUq1at9MMPP0i69vPQvXt3tWjRQoMGDXIf2QMUNPLczp07FRwcrEqVKmWZ7+3trVatWslqteqjjz7S2bNntXr1ai1fvlxxcXFZiu7HH3/Up59+qqVLl2r+/Pk6e/as5s2bJ0maN2+emjdvnu3433zzjU6fPq21a9dq3bp1qly5sn766acs69zO+DdSp04d/frrr4qPj5ckbd26VbVr11ahQoXc67z++utq2bKlYmJi9Morr2jMmDFKT0/Xq6++6n4+9evXdz9+yZIlioyMdD++du3aatOmjebMmaP4+Hh98skneumll7J9/pmZmRo6dKi6du2qtWvXauLEiRo2bJiuXLmiTZs2afPmzVq3bp1mzZql5cuXZ3nsn8efO3euDh8+rC+++EKrVq1SbGysvv76a0nS0KFDNXjwYMXGxqpNmzaaMGHCdTmmT5+u6OhorV69WosWLdJ3332ntLQ0vf/++0pPT9dXX32lDz74QBMmTFB8fLwWLlyoq1evau3atVq+fLmWLVt23WntU6dOacSIEZoyZYo2bNigsLAwjR8/XpI0d+5clShRQl999ZXGjh2rb775JtvX6I/XacCAAerYsaNiY2M1fvx49e/fXxkZGVqxYoWKFi2qmJgYxcbGymaz6fDhw3rllVd01113ae3atVn2sSTt3btXderUUUxMjDp37qxZs2ZJkubMmaOAgABt3LhRzzzzjFavXp1jLhQcFDTyXGJiogIDA3NcZ+PGjXryySdlt9vl4+OjDh066Ntvv3Uv79Chg2w2m4KCghQYGKjffvst1+MHBAToyJEj+vLLL91HZQ888IBHxrdYLAoPD3f/0l29erUeeuihLOvMnDnTfe27Xr16Sk1N1blz5264vcaNG8vb2/u6+UOGDNHatWs1atQo9e/fX6VLl872+Z8+fVrnz59XVFSUJKlWrVq6++67tXv3bsXFxalFixby9/dX8eLF3evcaPyvv/5anTt3VqFCheTn56eOHTtq3bp1OnbsmBwOh/tNUteuXW94RBgYGKjY2Fj98ssvKlGihGbOnKlChQpp8+bN7nGDg4O1adMmBQUFqXfv3po5c6YsFouKFSumKlWq6PTp01m2uXnzZjVs2FBVq1aVJEVHR+urr76S0+lUXFyc+41N2bJl1bBhw2xfI+namY0LFy7o8ccfl3Rt3wQEBOinn35y//ebb75RZmamXn75ZVWvXj3H7fn7+6tNmzaSpJo1a+rMmTOSrt2T0L59e0lSaGioateuneN2UHBQ0MhzJUqUcB9RZichIUHFihVzTxcrVkwXLlxwT//5mqzNZnOffs6N2rVr66WXXtK8efPUtGlTDRs2TJcuXfLY+O3bt9eqVauUlpambdu26cEHH8yyfMuWLerSpYvCw8P10EMPyeVyKTMz84bb+nOmP/P391dkZKS2b9+uDh06ZP/k//PcihQpkuU6f9GiRZWQkKBLly5lGeOPSxA3Gv/y5ct69dVX3TdUffzxx0pOTpbD4VCRIkXc69nt9hu+qRg+fLiqVq2q559/Xs2bN9eCBQsk6brH+/v7S5KOHz+ugQMHql27doqIiNCePXuue50uX76suLg4d6annnpKhQsXVmJioi5evJhlu0WLFs3xdbp06ZJSUlIUGRnp3t6FCxeUmJioyMhI9ezZU2+99ZYaN26sl19+WWlpaTlu789jW61Wd/abveYouLhJDHmubt26unDhgn755RfVrFnTPT89PV3Tp09X3759VbJkySx3PycmJqpkyZK3NM6ffwlK0sWLF93//uMXbmJiokaPHq333ntPTZo0cS//O8b/Q82aNXX16lUtXrxYDRo0yHLqMz09Xc8//7zefPNNNW/eXGlpabd1BBUfH68vvvhCUVFRmj59ul588cVs1w0MDNTFixflcrncJf3HWY3ChQsrKSnJvW52R/KSVLp0afXu3VstW7bMMv/YsWNKTExUZmamrFar0tPTFR8fr7Jly2ZZz9/fX0OHDtXQoUO1a9cu/fOf/1STJk1UokQJORwO93pnz55VsWLF9K9//Us1a9bUjBkzZLPZFB0dfcNMTZo00bRp065bVrRo0SzXnRMSElSuXLkcn5+/v3+2N3pFR0crOjpa8fHxGjhwoFasWKEKFSpku73s+Pv7X/ea385NjrjzcASNPFe0aFH16dNHL774ok6cOCHp2g1AY8eO1d69e+Xr66sWLVpoyZIlcjqdSkpK0sqVK3O8rnwjpUqV0v79+yVd+7hSamqqJGnp0qWaMWOGJKl48eKqWLHidY/9O8b/s6ioKM2aNeu609vJyclKSkpSaGiopGvXvr28vNy/sO12+3VH9zcyadIk9enTR6NHj1ZMTIz27duX7bply5ZVcHCw1qxZI0nasWOHzp8/r9q1a6tWrVrauHGjUlJSdOnSJcXExGS7ndatW+uzzz6T0+mUy+XSzJkztXnzZt1zzz0KDg7WunXrJElLlizR2LFjr3t83759dejQIUlS1apVVbhwYVksFrVq1UorVqyQy+XSuXPn9PDDD8vhcOjChQuqXr26bDabvv32W504cSJLsUlSs2bNFBcX574pbdeuXZo4caKka28M169fL0k6efKktm/fnuNrWqZMGQUHB7sLOiEhQUOHDlVSUpJmzJihJUuWSLp2xFu2bFlZLBbZ7XYlJSUpIyMjx23/We3atd1j7Nu3T7t27cr1Y3Fn4wgahhg4cKCKFSumfv36yel0ymq1qnXr1u4berp166ZTp04pKipKFotFERERWW6Myo3+/ftr3LhxWrx4scLDw1W5cmVJ14pl9OjRateunWw2mypUqKDJkyfrwIED7sf+HeP/WVRUlBYsWJDlKF3675uVhx9+WIGBgerXr5/atGmjvn37atWqVYqIiFB0dLS7ZG5k48aNOn36tKKjo2W1WjVkyBC99NJLWrx4sWw223XrWywWTZ06VePGjdP06dPl6+urt956S35+fmrbtq02btyoiIgIVahQQZGRkdl+Frhz5846ffq0oqKi5HK5FBoaqh49eshiseitt97SCy+8oKlTp6pUqVLuG97+rGvXrho2bJjS09Pd27vnnnvUs2dPnThxQi1btpSPj49efPFF3X333erXr59effVVzZw5U61bt9Zzzz2nadOmZbn2W7p0aU2YMEEDBgxQenq6/P39NXr0aEnSs88+qyFDhqhVq1aqVKmS2rVrl+M+++N1Gj9+vN58801ZrVb16tXLfb191KhRmjt3riwWi+rUqaOOHTsqLS1NxYoVU9OmTa+7wS47/fr10+DBg9W2bVvVrVtXrVu3vu2PGeLOYuHvQQP4sz+f+l6wYIG+++479xkHeMaf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OXOm+vXrpyZNmmjmzJnauHGj7Ha7qlSpopdeeknx8fHq16+fmjVrpl27dunq1auaM2dOjm8AANwYR9BAPuR0OvXll1+qXr16kqR77rlH06ZN02+//abZs2frww8/1MKFC9WwYUPNmTNHly9f1rRp0zRv3jy9++67N/w88Oeff67z589r8eLFevfdd7V8+XK1atVK1atX18iRI9W4cWP3uj/99JPWrVunBQsW6JNPPpHD4dCqVaskXftYzKOPPqoFCxaoevXqiomJyZsXBbjDcAQN5BMJCQnur5HNzMxU/fr11bNnTy1atEj33XefpGvFee7cOT399NOSrv01oLJly+rEiRMqU6aMSpQoIUkKCwvT/v37s2x/165dCgsLkyQVLVpU77zzTrZZdu7cqQYNGsjLy0uS1LBhQ+3evVsNGjRQiRIlVKVKFUnS3XffrcTExL/xVQAKDgoayCf+uAZ9I38UZaFChVS7dm3NmTMny/Ldu3dn+arEzMzM67ZhsVhuOP9G/vdrF10ul3uezWa7bhmAW8cpbuAOUqtWLe3atUvnzp2TJMXExGj9+vUqX768Tp8+rUuXLsnlcmnr1q3XPfa+++5z/0m/K1eu6IknnlBaWposFovS09OzrFu3bl1t27bNPX/r1q18NSrwN+MIGriDBAUFacyYMXr22Wfl6+srHx8fvfbaaypWrJj69u2rLl26qEyZMipTpoxSUlKyPDYyMlI7duxQdHS0nE6nevXqpUKFCqlp06YaN26cRo8e7V63Tp06ioqKUpcuXWS1WlWzZk21b99eZ86cyeunDNyx+KpPAABMiFPcAACYEAUNAIAJUdAAAJgQBQ0AgAlR0AAAmBAFDQCACVHQAACYEAUNAIAJ/T9e6rziB0+YUQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.preprocessing import MinMaxScaler, RobustScaler, StandardScaler\n",
    "\n",
    "#scalling\n",
    "minmax_scaler = MinMaxScaler()\n",
    "X_train_scaled = minmax_scaler.fit_transform(X_train)\n",
    "X_test_scaled = minmax_scaler.fit_transform(X_test)\n",
    "\n",
    "# since there's a little amount of outliers we're going to use minmax scaler\n",
    "# we scaled the train and the test value \n",
    "\n",
    "logreg_scaled = LogisticRegression()\n",
    "logreg_scaled.fit(X_train_scaled, y_train)\n",
    "y_logreg_scaled = logreg_scaled.predict(X_test_scaled)\n",
    "\n",
    "logreg_scaled_train = logreg_scaled.score(X_train_scaled, y_train)\n",
    "print('train accuracy Logistic Regression Scaled: ', logreg_scaled.score(X_train_scaled, y_train))\n",
    "print('test accuracy Logistic Regression Scaled: ', logreg_scaled.score(X_test_scaled, y_test))\n",
    "\n",
    "# wow looking at this logistic regression evaluation matrix jump up about 0.4 from base to scaled model\n",
    "\n",
    "\n",
    "acc_scaled_logreg = accuracy_score(y_test, y_logreg_scaled)\n",
    "recall_scaled_logreg = recall_score(y_test, y_logreg_scaled, average = None)\n",
    "precision_scaled_logreg = precision_score(y_test, y_logreg_scaled, average = None)\n",
    "f1_scaled_logreg = f1_score(y_test, y_logreg_scaled, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_logreg_scaled))\n",
    "\n",
    "cm_scaled_logreg = ConfusionMatrix(logreg_scaled, classes = [0,1,2,3])\n",
    "cm_scaled_logreg.fit(X_train_scaled, y_train)\n",
    "\n",
    "cm_scaled_logreg.score(X_test_scaled, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix logrec scaledTesting')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27e6fde8",
   "metadata": {
    "id": "27e6fde8"
   },
   "source": [
    "### KNN Scaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "rv9Jfpj-JxNn",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "rv9Jfpj-JxNn",
    "outputId": "f8b435aa-834a-4cae-fe4b-9f542ae83949"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy KNN Scaled:  0.9075\n",
      "test accuracy KNN Scaled:  0.8425\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.96      0.89      0.92       100\n",
      "           1       0.75      0.80      0.77       100\n",
      "           2       0.75      0.79      0.77       100\n",
      "           3       0.95      0.89      0.92       100\n",
      "\n",
      "    accuracy                           0.84       400\n",
      "   macro avg       0.85      0.84      0.84       400\n",
      "weighted avg       0.85      0.84      0.84       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "KNN_scaled = KNeighborsClassifier()\n",
    "KNN_scaled.fit(X_train_scaled, y_train)\n",
    "y_KNN_scaled = KNN_scaled.predict(X_test_scaled)\n",
    "\n",
    "KNN_scaled_train = KNN_scaled.score(X_train_scaled, y_train)\n",
    "print('train accuracy KNN Scaled: ', KNN_scaled.score(X_train_scaled, y_train))\n",
    "print('test accuracy KNN Scaled: ', KNN_scaled.score(X_test_scaled, y_test))\n",
    "\n",
    "# after the scaling KNN accuracy become lower and it become overfit\n",
    "\n",
    "acc_scaled_KNN = accuracy_score(y_test, y_KNN_scaled)\n",
    "recall_scaled_KNN = recall_score(y_test, y_KNN_scaled, average = None)\n",
    "precision_scaled_KNN = precision_score(y_test, y_KNN_scaled, average = None)\n",
    "f1_scaled_KNN = f1_score(y_test, y_KNN_scaled, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_KNN_scaled))\n",
    "\n",
    "cm_scaled_KNN = ConfusionMatrix(KNN_scaled, classes = [0,1,2,3])\n",
    "cm_scaled_KNN.fit(X_train_scaled, y_train)\n",
    "\n",
    "cm_scaled_KNN.score(X_test_scaled, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix KNN scaled Testing')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f4764bf",
   "metadata": {
    "id": "3f4764bf"
   },
   "source": [
    "### SVC Scaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "Vh_AHK4qJzEX",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "Vh_AHK4qJzEX",
    "outputId": "5aac1d70-03ee-4d86-d1c2-f98d68133377"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy SVC Scaled:  0.956875\n",
      "test accuracy SVC Scaled:  0.945\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99       100\n",
      "           1       0.94      0.95      0.95       100\n",
      "           2       0.94      0.87      0.90       100\n",
      "           3       0.92      0.97      0.95       100\n",
      "\n",
      "    accuracy                           0.94       400\n",
      "   macro avg       0.95      0.95      0.94       400\n",
      "weighted avg       0.95      0.94      0.94       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "SVC_scaled = SVC()\n",
    "SVC_scaled.fit(X_train_scaled, y_train)\n",
    "y_SVC_scaled = SVC_scaled.predict(X_test_scaled)\n",
    "\n",
    "SVC_scaled_train = SVC_scaled.score(X_train_scaled, y_train)\n",
    "print('train accuracy SVC Scaled: ', SVC_scaled.score(X_train_scaled, y_train))\n",
    "print('test accuracy SVC Scaled: ', SVC_scaled.score(X_test_scaled, y_test))\n",
    "\n",
    "# svc evaluation matrix goes sligthly lower after scalling \n",
    "\n",
    "acc_scaled_SVC = accuracy_score(y_test, y_SVC_scaled)\n",
    "recall_scaled_SVC = recall_score(y_test, y_SVC_scaled, average = None)\n",
    "precision_scaled_SVC = precision_score(y_test, y_SVC_scaled, average = None)\n",
    "f1_scaled_SVC = f1_score(y_test, y_SVC_scaled, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_SVC_scaled))\n",
    "\n",
    "cm_scaled_SVC = ConfusionMatrix(SVC_scaled, classes = [0,1,2,3])\n",
    "cm_scaled_SVC.fit(X_train_scaled, y_train)\n",
    "\n",
    "cm_scaled_SVC.score(X_test_scaled, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix SVC scaled Testing')\n",
    "plt.show()\n",
    "\n",
    "# note we don't scale tree based algorithm since it doesn't required to be scaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "6cppsK1UKN-5",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "6cppsK1UKN-5",
    "outputId": "02f2c994-ac4a-4020-df70-294a59881f9c"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy logreg poly Scaled:  0.951875\n",
      "test accuracy logreg poly Scaled:  0.9675\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "\n",
    "poly = PolynomialFeatures(degree = 2).fit(X_train_scaled)\n",
    "X_train_poly = poly.transform(X_train_scaled)\n",
    "X_test_poly = poly.transform(X_test_scaled)\n",
    "logreg_poly = LogisticRegression()\n",
    "logreg_poly.fit(X_train_poly, y_train)\n",
    "y_logreg_poly = logreg_poly.predict(X_test_poly)\n",
    "\n",
    "logreg_poly_train = logreg_poly.score(X_train_poly, y_train)\n",
    "print('train accuracy logreg poly Scaled: ', logreg_poly.score(X_train_poly, y_train))\n",
    "print('test accuracy logreg poly Scaled: ', logreg_poly.score(X_test_poly, y_test))\n",
    "\n",
    "# there's a slight increase in test accuracy score of logistic regression after polynomial  degree 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "DGbX5JxfKT6o",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 575
    },
    "id": "DGbX5JxfKT6o",
    "outputId": "a5460513-857c-4881-bf46-0ed124b120e4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99       100\n",
      "           1       0.95      0.97      0.96       100\n",
      "           2       0.97      0.92      0.94       100\n",
      "           3       0.97      0.98      0.98       100\n",
      "\n",
      "    accuracy                           0.97       400\n",
      "   macro avg       0.97      0.97      0.97       400\n",
      "weighted avg       0.97      0.97      0.97       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "acc_poly_logreg = accuracy_score(y_test, y_logreg_poly)\n",
    "recall_poly_logreg = recall_score(y_test, y_logreg_poly, average = None)\n",
    "precision_poly_logreg = precision_score(y_test, y_logreg_poly, average = None)\n",
    "f1_poly_logreg = f1_score(y_test, y_logreg_poly, average = None)\n",
    "\n",
    "print(classification_report(y_test, y_logreg_poly))\n",
    "\n",
    "cm_poly_logreg = ConfusionMatrix(logreg_poly, classes = [0,1,2,3])\n",
    "cm_poly_logreg.fit(X_train_poly, y_train)\n",
    "\n",
    "cm_poly_logreg.score(X_test_poly, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix logrec scaled poly Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "18xxakrrKYwT",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 175
    },
    "id": "18xxakrrKYwT",
    "outputId": "1adcb029-5d0d-4aa1-9de8-5f9a77fa3e02"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression Scaled</th>\n",
       "      <td>0.937500</td>\n",
       "      <td>0.9525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN Scaled</th>\n",
       "      <td>0.907500</td>\n",
       "      <td>0.8425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SVC Scaled</th>\n",
       "      <td>0.956875</td>\n",
       "      <td>0.9450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Linreg Scaled Poly</th>\n",
       "      <td>0.951875</td>\n",
       "      <td>0.9675</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Training  Testing\n",
       "Logistic Regression Scaled  0.937500   0.9525\n",
       "KNN Scaled                  0.907500   0.8425\n",
       "SVC Scaled                  0.956875   0.9450\n",
       "Linreg Scaled Poly          0.951875   0.9675"
      ]
     },
     "execution_count": 179,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "evaluation_matrix_featured = {'Training': [logreg_scaled_train, KNN_scaled_train,SVC_scaled_train,logreg_poly_train],\n",
    "                         'Testing':[acc_scaled_logreg, acc_scaled_KNN,acc_scaled_SVC,acc_poly_logreg]}\n",
    "\n",
    "eva_featured = pd.DataFrame(data = evaluation_matrix_featured, index = ['Logistic Regression Scaled', 'KNN Scaled', 'SVC Scaled', 'Linreg Scaled Poly'])\n",
    "eva_featured\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e543bd7e",
   "metadata": {
    "id": "e543bd7e"
   },
   "source": [
    "# HEATMAP PICTURE"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9fc6ef4d",
   "metadata": {
    "id": "9fc6ef4d"
   },
   "source": [
    "### HyperParameter Tuning\n",
    "\n",
    "\n",
    "#### Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "04d171d2",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "04d171d2",
    "outputId": "2e0fd074-b3b7-4887-b4b4-a4dcf8dc6654"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 15 candidates, totalling 75 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  75 out of  75 | elapsed:    2.3s finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score=nan,\n",
       "             estimator=LogisticRegression(C=1.0, class_weight=None, dual=False,\n",
       "                                          fit_intercept=True,\n",
       "                                          intercept_scaling=1, l1_ratio=None,\n",
       "                                          max_iter=100, multi_class='auto',\n",
       "                                          n_jobs=None, penalty='l2',\n",
       "                                          random_state=None, solver='lbfgs',\n",
       "                                          tol=0.0001, verbose=0,\n",
       "                                          warm_start=False),\n",
       "             iid='deprecated', n_jobs=-1,\n",
       "             param_grid={'C': [1, 0.5, 0.1, 5, 9],\n",
       "                         'penalty': ['l2', 'l1', 'elasticnet']},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 180,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg_tuning = LogisticRegression()\n",
    "param_logreg = {'C': [1, 0.5, 0.1, 5, 9],\n",
    "               'penalty':['l2','l1', 'elasticnet']}\n",
    "\n",
    "model_logreg_tuned = GridSearchCV(estimator = logreg_tuning, param_grid = param_logreg, cv = 5, n_jobs = -1 , verbose = 1, scoring = 'accuracy')\n",
    "model_logreg_tuned.fit(X_train_scaled, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "a6143106",
   "metadata": {
    "id": "a6143106"
   },
   "outputs": [],
   "source": [
    "logreg_tuned = model_logreg_tuned.best_estimator_\n",
    "y_tuned_logreg = logreg_tuned.predict(X_test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "3df49b03",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3df49b03",
    "outputId": "9933411c-4065-4c72-80b6-b5645525cb28"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy logreg tuned Scaled:  0.96\n",
      "test accuracy logreg tuned Scaled:  0.9725\n"
     ]
    }
   ],
   "source": [
    "logreg_tuned_train = logreg_tuned.score(X_train_scaled, y_train)\n",
    "print('train accuracy logreg tuned Scaled: ', logreg_tuned.score(X_train_scaled, y_train))\n",
    "print('test accuracy logreg tuned Scaled: ', logreg_tuned.score(X_test_scaled, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "959496ca",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "959496ca",
    "outputId": "a9dc0c44-2dc7-40f3-95e3-4167f87ae3db"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       1.00      1.00      1.00       100\n",
      "           1       0.97      0.98      0.98       100\n",
      "           2       0.95      0.94      0.94       100\n",
      "           3       0.97      0.97      0.97       100\n",
      "\n",
      "    accuracy                           0.97       400\n",
      "   macro avg       0.97      0.97      0.97       400\n",
      "weighted avg       0.97      0.97      0.97       400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "acc_tuned_logreg = accuracy_score(y_test, y_tuned_logreg)\n",
    "\n",
    "print(classification_report(y_test, y_tuned_logreg))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "7baf8acb",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 373
    },
    "id": "7baf8acb",
    "outputId": "cc775c70-8a27-4067-ad6e-825282954ca7"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_tuned_logreg = ConfusionMatrix(logreg_tuned, classes = [0,1,2,3])\n",
    "cm_tuned_logreg.fit(X_train_scaled, y_train)\n",
    "\n",
    "cm_tuned_logreg.score(X_test_scaled, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix logrec scaled tuned Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1bf5dbb7",
   "metadata": {
    "id": "1bf5dbb7"
   },
   "source": [
    "### Polynom Logreg Tuning\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "a90a31f3",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "a90a31f3",
    "outputId": "a8981ebd-40b9-4064-a8d3-1f1e55c012da"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 15 candidates, totalling 75 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  75 out of  75 | elapsed:    1.7s finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score=nan,\n",
       "             estimator=LogisticRegression(C=1.0, class_weight=None, dual=False,\n",
       "                                          fit_intercept=True,\n",
       "                                          intercept_scaling=1, l1_ratio=None,\n",
       "                                          max_iter=100, multi_class='auto',\n",
       "                                          n_jobs=None, penalty='l2',\n",
       "                                          random_state=None, solver='lbfgs',\n",
       "                                          tol=0.0001, verbose=0,\n",
       "                                          warm_start=False),\n",
       "             iid='deprecated', n_jobs=-1,\n",
       "             param_grid={'C': [1, 0.5, 0.1, 5, 9],\n",
       "                         'penalty': ['l2', 'l1', 'elasticnet']},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 185,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg_tuning_poly = LogisticRegression()\n",
    "param_logreg_poly = {'C': [1, 0.5, 0.1, 5, 9],\n",
    "               'penalty':['l2','l1', 'elasticnet']}\n",
    "\n",
    "model_logreg_tuned_poly = GridSearchCV(estimator = logreg_tuning_poly, param_grid = param_logreg_poly, cv = 5, n_jobs = -1 , verbose = 1, scoring = 'accuracy')\n",
    "model_logreg_tuned_poly.fit(X_train_poly, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "c18c98d2",
   "metadata": {
    "id": "c18c98d2"
   },
   "outputs": [],
   "source": [
    "logreg_tuned_poly = model_logreg_tuned_poly.best_estimator_\n",
    "y_tuned_logreg_poly = logreg_tuned_poly.predict(X_test_poly)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "f30f21d8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "f30f21d8",
    "outputId": "ca5f30e4-fac1-4a9f-8b93-c47eb439e0af"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy logreg tuned Scaled:  0.9625\n",
      "test accuracy logreg tuned Scaled:  0.965\n"
     ]
    }
   ],
   "source": [
    "logreg_tuned_train_poly = logreg_tuned_poly.score(X_train_poly, y_train)\n",
    "print('train accuracy logreg tuned Scaled: ', logreg_tuned_poly.score(X_train_poly, y_train))\n",
    "print('test accuracy logreg tuned Scaled: ', logreg_tuned_poly.score(X_test_poly, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "0176172a",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "0176172a",
    "outputId": "b0afe340-777d-448a-fa67-e6b081394189"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      1.00      1.00       100\n",
      "           1       0.97      0.95      0.96       100\n",
      "           2       0.93      0.94      0.94       100\n",
      "           3       0.97      0.97      0.97       100\n",
      "\n",
      "    accuracy                           0.96       400\n",
      "   macro avg       0.97      0.96      0.96       400\n",
      "weighted avg       0.97      0.96      0.96       400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "acc_logreg_tuned_poly = accuracy_score(y_test, y_tuned_logreg_poly)\n",
    "\n",
    "print(classification_report(y_test, y_tuned_logreg_poly))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "e0d426d6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 373
    },
    "id": "e0d426d6",
    "outputId": "93f2f55c-83b8-4c4f-e515-5ed9831d63a9"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_tuned_logreg_poly = ConfusionMatrix(logreg_tuned_poly, classes = [0,1,2,3])\n",
    "cm_tuned_logreg_poly.fit(X_train_poly, y_train)\n",
    "\n",
    "cm_tuned_logreg_poly.score(X_test_poly, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix logreg tuned poly Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "e5a13206",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "e5a13206",
    "outputId": "a97d2190-3e0f-4ba1-a025-56daf53458dd"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 15 candidates, totalling 75 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  75 out of  75 | elapsed:    1.9s finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score=nan,\n",
       "             estimator=LogisticRegression(C=1.0, class_weight=None, dual=False,\n",
       "                                          fit_intercept=True,\n",
       "                                          intercept_scaling=1, l1_ratio=None,\n",
       "                                          max_iter=100, multi_class='auto',\n",
       "                                          n_jobs=None, penalty='l2',\n",
       "                                          random_state=None, solver='lbfgs',\n",
       "                                          tol=0.0001, verbose=0,\n",
       "                                          warm_start=False),\n",
       "             iid='deprecated', n_jobs=-1,\n",
       "             param_grid={'C': [1, 0.5, 0.1, 5, 9],\n",
       "                         'penalty': ['l2', 'l1', 'elasticnet']},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 190,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logreg_tuning_base = LogisticRegression()\n",
    "param_logreg_base = {'C': [1, 0.5, 0.1, 5, 9],\n",
    "               'penalty':['l2','l1', 'elasticnet']}\n",
    "\n",
    "model_logreg_tuned_base = GridSearchCV(estimator = logreg_tuning_base, param_grid = param_logreg_base, cv = 5, n_jobs = -1 , verbose = 1, scoring = 'accuracy')\n",
    "model_logreg_tuned_base.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "c018d96f",
   "metadata": {
    "id": "c018d96f"
   },
   "outputs": [],
   "source": [
    "logreg_tuned_base = model_logreg_tuned_base.best_estimator_\n",
    "y_tuned_logreg_base = logreg_tuned_base.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "d28cf0c2",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "d28cf0c2",
    "outputId": "50de60d4-d4bd-487a-a9dc-efb4ce02b063"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy logreg tuned Scaled:  0.545625\n",
      "test accuracy logreg tuned Scaled:  0.555\n"
     ]
    }
   ],
   "source": [
    "logreg_tuned_train_base = logreg_tuned_base.score(X_train, y_train)\n",
    "print('train accuracy logreg tuned Scaled: ', logreg_tuned_base.score(X_train, y_train))\n",
    "print('test accuracy logreg tuned Scaled: ', logreg_tuned_base.score(X_test, y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "64db43d7",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "64db43d7",
    "outputId": "2c24dcec-1377-4d79-e21f-96985062ab75"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.82      0.75      0.78       100\n",
      "           1       0.43      0.43      0.43       100\n",
      "           2       0.40      0.31      0.35       100\n",
      "           3       0.55      0.73      0.63       100\n",
      "\n",
      "    accuracy                           0.56       400\n",
      "   macro avg       0.55      0.55      0.55       400\n",
      "weighted avg       0.55      0.56      0.55       400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "acc_logreg_tuned_base = accuracy_score(y_test, y_tuned_logreg_base)\n",
    "\n",
    "print(classification_report(y_test, y_tuned_logreg_base))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "7afe7af5",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 373
    },
    "id": "7afe7af5",
    "outputId": "18db6b6a-448c-493d-95cf-84ff0d48e027"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_tuned_logreg_base = ConfusionMatrix(logreg_tuned_base, classes = [0,1,2,3])\n",
    "cm_tuned_logreg_base.fit(X_train, y_train)\n",
    "\n",
    "cm_tuned_logreg_base.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix logreg tuned base Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62464790",
   "metadata": {
    "id": "62464790"
   },
   "source": [
    "### KNN Tuning\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "3c48ff4e",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3c48ff4e",
    "outputId": "19f0c2fc-1dfb-49d4-bb55-1955e20807fa"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 336 candidates, totalling 1680 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done 300 tasks      | elapsed:    3.2s\n",
      "[Parallel(n_jobs=-1)]: Done 1500 tasks      | elapsed:   16.9s\n",
      "[Parallel(n_jobs=-1)]: Done 1680 out of 1680 | elapsed:   19.2s finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score=nan,\n",
       "             estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30,\n",
       "                                            metric='minkowski',\n",
       "                                            metric_params=None, n_jobs=None,\n",
       "                                            n_neighbors=5, p=2,\n",
       "                                            weights='uniform'),\n",
       "             iid='deprecated', n_jobs=-1,\n",
       "             param_grid={'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'],\n",
       "                         'leaf_size': [30, 40, 50],\n",
       "                         'n_neighbors': [5, 7, 9, 15, 30, 45, 55], 'p': [2, 1],\n",
       "                         'weights': ['uniform', 'distance']},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 195,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KNN_tuning = KNeighborsClassifier()\n",
    "param_KNN = {'n_neighbors':[5,7,9,15, 30, 45,55 ],\n",
    "               'weights':['uniform','distance'],\n",
    "               'p':[2, 1],\n",
    "            'algorithm': ['auto','ball_tree','kd_tree','brute'],\n",
    "            'leaf_size':[30, 40, 50]}\n",
    "\n",
    "model_KNN_tuned = GridSearchCV(estimator = KNN_tuning, param_grid = param_KNN, cv = 5, n_jobs = -1 , verbose = 1, scoring = 'accuracy')\n",
    "model_KNN_tuned.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "fe823102",
   "metadata": {
    "id": "fe823102"
   },
   "outputs": [],
   "source": [
    "KNN_tuned = model_KNN_tuned.best_estimator_\n",
    "y_tuned_KNN = KNN_tuned.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "841a4db8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "841a4db8",
    "outputId": "343e35b5-16c8-4fb4-cb2d-700a5011f2b7"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy KNN tuned :  1.0\n",
      "test accuracy KNN tuned :  0.9475\n"
     ]
    }
   ],
   "source": [
    "KNN_tuned_train = KNN_tuned.score(X_train, y_train)\n",
    "print('train accuracy KNN tuned : ', KNN_tuned.score(X_train, y_train))\n",
    "print('test accuracy KNN tuned : ', KNN_tuned.score(X_test, y_test))\n",
    "\n",
    "# there is an increase in the test score of non scaled KNN however we see that there is overfitting problem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "2892ae17",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "2892ae17",
    "outputId": "bf58312c-a0d8-41c1-ff73-57276aa7ae50"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99       100\n",
      "           1       0.94      0.92      0.93       100\n",
      "           2       0.92      0.90      0.91       100\n",
      "           3       0.96      0.97      0.97       100\n",
      "\n",
      "    accuracy                           0.95       400\n",
      "   macro avg       0.95      0.95      0.95       400\n",
      "weighted avg       0.95      0.95      0.95       400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "acc_KNN_tuned = accuracy_score(y_test, y_tuned_KNN)\n",
    "\n",
    "print(classification_report(y_test, y_tuned_KNN))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "c82b2d17",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 373
    },
    "id": "c82b2d17",
    "outputId": "d7d0bb3b-4bac-4baa-e39c-cfae9352fdae"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_tuned_KNN = ConfusionMatrix(KNN_tuned, classes = [0,1,2,3])\n",
    "cm_tuned_KNN.fit(X_train, y_train)\n",
    "\n",
    "cm_tuned_KNN.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix KNN tuned  Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81e54274",
   "metadata": {
    "id": "81e54274"
   },
   "source": [
    "### KNN Scaled Tuning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "id": "7a047c99",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "7a047c99",
    "outputId": "cc947d25-faab-4cd6-c135-38a26ef0dd62"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 336 candidates, totalling 1680 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done 300 tasks      | elapsed:    3.1s\n",
      "[Parallel(n_jobs=-1)]: Done 1500 tasks      | elapsed:   16.5s\n",
      "[Parallel(n_jobs=-1)]: Done 1680 out of 1680 | elapsed:   18.6s finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score=nan,\n",
       "             estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30,\n",
       "                                            metric='minkowski',\n",
       "                                            metric_params=None, n_jobs=None,\n",
       "                                            n_neighbors=5, p=2,\n",
       "                                            weights='uniform'),\n",
       "             iid='deprecated', n_jobs=-1,\n",
       "             param_grid={'algorithm': ['auto', 'ball_tree', 'kd_tree', 'brute'],\n",
       "                         'leaf_size': [30, 40, 50],\n",
       "                         'n_neighbors': [5, 7, 9, 15, 30, 45, 55], 'p': [2, 1],\n",
       "                         'weights': ['uniform', 'distance']},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 200,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "KNN_tuning_scaled = KNeighborsClassifier()\n",
    "param_KNN_scaled = {'n_neighbors':[5,7,9,15, 30, 45,55 ],\n",
    "               'weights':['uniform','distance'],\n",
    "               'p':[2, 1],\n",
    "            'algorithm': ['auto','ball_tree','kd_tree','brute'],\n",
    "            'leaf_size':[30, 40, 50]}\n",
    "\n",
    "model_KNN_tuned_scaled = GridSearchCV(estimator = KNN_tuning_scaled, param_grid = param_KNN_scaled, cv = 5, n_jobs = -1 , verbose = 1, scoring = 'accuracy')\n",
    "model_KNN_tuned_scaled.fit(X_train_scaled, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "2a3bfbf6",
   "metadata": {
    "id": "2a3bfbf6"
   },
   "outputs": [],
   "source": [
    "KNN_tuned_scaled = model_KNN_tuned_scaled.best_estimator_\n",
    "y_tuned_KNN_scaled = KNN_tuned_scaled.predict(X_test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "e063443f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "e063443f",
    "outputId": "b68e64d0-7e93-412d-9ab7-67d50c15a6b8"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train accuracy KNN scaled tuned :  1.0\n",
      "test accuracy KNN scaled tuned :  0.9225\n"
     ]
    }
   ],
   "source": [
    "KNN_tuned_train_scaled = KNN_tuned_scaled.score(X_train_scaled, y_train)\n",
    "print('train accuracy KNN scaled tuned : ', KNN_tuned_scaled.score(X_train_scaled, y_train))\n",
    "print('test accuracy KNN scaled tuned : ', KNN_tuned_scaled.score(X_test_scaled, y_test))\n",
    "\n",
    "# we can see that even after scaling we still have overfitting for the KNN \n",
    "# and the tuning with no scaling still have a better accuracy score compareed to the scaled version"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "40e534a6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "40e534a6",
    "outputId": "eae07810-6295-432e-fba4-6a291fcc55a0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      1.00      1.00       100\n",
      "           1       0.91      0.90      0.90       100\n",
      "           2       0.84      0.86      0.85       100\n",
      "           3       0.95      0.93      0.94       100\n",
      "\n",
      "    accuracy                           0.92       400\n",
      "   macro avg       0.92      0.92      0.92       400\n",
      "weighted avg       0.92      0.92      0.92       400\n",
      "\n"
     ]
    }
   ],
   "source": [
    "acc_KNN_tuned_scaled = accuracy_score(y_test, y_tuned_KNN_scaled)\n",
    "\n",
    "print(classification_report(y_test, y_tuned_KNN_scaled))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "29a729da",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 373
    },
    "id": "29a729da",
    "outputId": "9de202f4-dec2-46a3-8d97-7464446ca7fe"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm_tuned_KNN_scaled = ConfusionMatrix(KNN_tuned_scaled, classes = [0,1,2,3])\n",
    "cm_tuned_KNN_scaled.fit(X_train_scaled, y_train)\n",
    "\n",
    "cm_tuned_KNN_scaled.score(X_test_scaled, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix KNN tuned scaled Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62b0e42a",
   "metadata": {
    "id": "62b0e42a"
   },
   "source": [
    "## XG BOOST\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "GJ5MlxCxLl7Z",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "GJ5MlxCxLl7Z",
    "outputId": "8bdc9555-3801-47a8-97b5-3beea5975892"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 5 folds for each of 648 candidates, totalling 3240 fits\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n",
      "[Parallel(n_jobs=-1)]: Done  46 tasks      | elapsed:    9.9s\n",
      "[Parallel(n_jobs=-1)]: Done 196 tasks      | elapsed:   36.6s\n",
      "[Parallel(n_jobs=-1)]: Done 446 tasks      | elapsed:  1.4min\n",
      "[Parallel(n_jobs=-1)]: Done 796 tasks      | elapsed:  2.4min\n",
      "[Parallel(n_jobs=-1)]: Done 2416 tasks      | elapsed:  3.9min\n",
      "[Parallel(n_jobs=-1)]: Done 2966 tasks      | elapsed:  5.0min\n",
      "[Parallel(n_jobs=-1)]: Done 3240 out of 3240 | elapsed:  5.6min finished\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "GridSearchCV(cv=5, error_score=nan,\n",
       "             estimator=XGBClassifier(base_score=0.5, booster='gbtree',\n",
       "                                     colsample_bylevel=1, colsample_bynode=1,\n",
       "                                     colsample_bytree=1, gamma=0,\n",
       "                                     learning_rate=0.1, max_delta_step=0,\n",
       "                                     max_depth=3, min_child_weight=1,\n",
       "                                     missing=None, n_estimators=100, n_jobs=1,\n",
       "                                     nthread=None, objective='binary:logistic',\n",
       "                                     random_state=0, reg_alpha=0, reg_lambda=1,\n",
       "                                     scale_po...silent=None,\n",
       "                                     subsample=1, verbosity=1),\n",
       "             iid='deprecated', n_jobs=-1,\n",
       "             param_grid={'colsample_bytree': [1, 1.4, 0.5],\n",
       "                         'gamma': [0, 0.3, 0.5], 'learning_rate': [0.1, 0.3],\n",
       "                         'max_depth': [3, 2, 4, 1], 'n_estimator': [100],\n",
       "                         'reg_alpha': [0, 0.5, 1.0],\n",
       "                         'reg_lambda': [1, 1.5, 2.1], 'subsample': [1]},\n",
       "             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n",
       "             scoring='accuracy', verbose=1)"
      ]
     },
     "execution_count": 207,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "XGB_tuned =XGBClassifier()\n",
    "param_XGB_tuned = {'max_depth': [3, 2, 4, 1],\n",
    "                 'learning_rate': [0.1, 0.3],\n",
    "                 'n_estimator': [100],\n",
    "                 'gamma': [0, 0.3, 0.5],\n",
    "                 'colsample_bytree': [1, 1.4, 0.5],\n",
    "                 'subsample':[1],\n",
    "                 'reg_alpha':[0, 0.5, 1.0],\n",
    "                 'reg_lambda':[1, 1.5, 2.1]}\n",
    "\n",
    "model_XGB_tuned = GridSearchCV(XGB_tuned, param_XGB_tuned, cv = 5, scoring = 'accuracy', verbose = 1, n_jobs = -1)\n",
    "model_XGB_tuned.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "id": "PC2oT6i8Ll4-",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 612
    },
    "id": "PC2oT6i8Ll4-",
    "outputId": "32526078-a363-47af-f237-c49826713a53"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training Score for XGB tuned model:  1.0\n",
      "Testing Score for XGB tuned model:  0.945\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      0.97      0.97       100\n",
      "           1       0.93      0.93      0.93       100\n",
      "           2       0.91      0.93      0.92       100\n",
      "           3       0.97      0.95      0.96       100\n",
      "\n",
      "    accuracy                           0.94       400\n",
      "   macro avg       0.95      0.95      0.95       400\n",
      "weighted avg       0.95      0.94      0.95       400\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x396 with 1 Axes>"
      ]
     },
     "metadata": {
      "tags": []
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "XGB_tuned = model_XGB_tuned.best_estimator_\n",
    "y_XGB_tuned = XGB_tuned.predict(X_test)\n",
    "\n",
    "XGB_tuned_train = XGB_tuned.score(X_train,y_train)\n",
    "\n",
    "print('Training Score for XGB tuned model: ', XGB_tuned.score(X_train,y_train))\n",
    "print('Testing Score for XGB tuned model: ', XGB_tuned.score(X_test, y_test))\n",
    "\n",
    "# we can see that this model is still overfitting even after tuning, we can conclude that we need better\n",
    "# feature selection for 3 overfitting model\n",
    "\n",
    "acc_tuned_XGB = accuracy_score(y_test, y_XGB_tuned)\n",
    "\n",
    "print(classification_report(y_test, y_XGB_tuned))\n",
    "\n",
    "cm_tuned_XGB = ConfusionMatrix(XGB_tuned, classes = [0,1,2,3])\n",
    "cm_tuned_XGB.fit(X_train, y_train)\n",
    "\n",
    "cm_tuned_XGB.score(X_test, y_test)\n",
    "plt.xlabel('Prediction')\n",
    "plt.ylabel('Actual')\n",
    "plt.title('Confusion Matrix XGB tuned  Test')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "id": "R6jb7yC_LlsC",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 143
    },
    "id": "R6jb7yC_LlsC",
    "outputId": "2a6236da-a757-449d-d51c-11a04249d326"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression Tuned</th>\n",
       "      <td>0.545625</td>\n",
       "      <td>0.5550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN Tuned</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.9475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>XGB Tuned</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.9450</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Training  Testing\n",
       "Logistic Regression Tuned  0.545625   0.5550\n",
       "KNN Tuned                  1.000000   0.9475\n",
       "XGB Tuned                  1.000000   0.9450"
      ]
     },
     "execution_count": 209,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "evaluation_matrix_tuned = {'Training': [logreg_tuned_train_base, KNN_tuned_train,XGB_tuned_train],\n",
    "                         'Testing':[acc_logreg_tuned_base, acc_KNN_tuned,acc_tuned_XGB]}\n",
    "\n",
    "eva_tuned = pd.DataFrame(data = evaluation_matrix_tuned, index = ['Logistic Regression Tuned', 'KNN Tuned','XGB Tuned'])\n",
    "eva_tuned\n",
    "\n",
    "# we can see that there's definitely an overfitting problem in this hyperparameter tuning a base model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "id": "hGp88efBLlpy",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 143
    },
    "id": "hGp88efBLlpy",
    "outputId": "0cf1a9d4-85cd-40f8-f563-bc7a32579483"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression Scaled Tuned</th>\n",
       "      <td>0.9600</td>\n",
       "      <td>0.9725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN Scaled Tuned</th>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Logreg Scaled Poly Tuned</th>\n",
       "      <td>0.9625</td>\n",
       "      <td>0.9650</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Training  Testing\n",
       "Logistic Regression Scaled Tuned    0.9600   0.9725\n",
       "KNN Scaled Tuned                    1.0000   0.9225\n",
       "Logreg Scaled Poly Tuned            0.9625   0.9650"
      ]
     },
     "execution_count": 210,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "evaluation_matrix_featured_tuned = {'Training': [logreg_tuned_train, KNN_tuned_train_scaled,logreg_tuned_train_poly],\n",
    "                         'Testing':[acc_tuned_logreg, acc_KNN_tuned_scaled,acc_logreg_tuned_poly]}\n",
    "\n",
    "eva_featured_tuned = pd.DataFrame(data = evaluation_matrix_featured_tuned, index = ['Logistic Regression Scaled Tuned', 'KNN Scaled Tuned', 'Logreg Scaled Poly Tuned'])\n",
    "eva_featured_tuned"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d545256",
   "metadata": {
    "id": "2d545256"
   },
   "source": [
    "### Conclusion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "46c6fe06",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 143
    },
    "id": "46c6fe06",
    "outputId": "d071dabe-deea-4f9c-828f-0b59e77b902e"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression Tuned</th>\n",
       "      <td>0.545625</td>\n",
       "      <td>0.5550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN Tuned</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.9475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>XGB Tuned</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.9450</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Training  Testing\n",
       "Logistic Regression Tuned  0.545625   0.5550\n",
       "KNN Tuned                  1.000000   0.9475\n",
       "XGB Tuned                  1.000000   0.9450"
      ]
     },
     "execution_count": 225,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eva_tuned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "-XvLPlXAPyn6",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 238
    },
    "id": "-XvLPlXAPyn6",
    "outputId": "78a08440-63fe-44bb-8016-57084227d7e9"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression</th>\n",
       "      <td>0.545625</td>\n",
       "      <td>0.5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN</th>\n",
       "      <td>0.943750</td>\n",
       "      <td>0.9350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SVC</th>\n",
       "      <td>0.952500</td>\n",
       "      <td>0.9675</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Decision Tree</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.8850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Random Forest</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.9350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Xtreme Gradient Boost</th>\n",
       "      <td>0.976250</td>\n",
       "      <td>0.9275</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Training  Testing\n",
       "Logistic Regression    0.545625   0.5500\n",
       "KNN                    0.943750   0.9350\n",
       "SVC                    0.952500   0.9675\n",
       "Decision Tree          1.000000   0.8850\n",
       "Random Forest          1.000000   0.9350\n",
       "Xtreme Gradient Boost  0.976250   0.9275"
      ]
     },
     "execution_count": 227,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eva_base"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "a4992914",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 143
    },
    "id": "a4992914",
    "outputId": "15b8fd7b-397d-4900-fee9-83f20e104be5"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression Scaled Tuned</th>\n",
       "      <td>0.9600</td>\n",
       "      <td>0.9725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN Scaled Tuned</th>\n",
       "      <td>1.0000</td>\n",
       "      <td>0.9225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Logreg Scaled Poly Tuned</th>\n",
       "      <td>0.9625</td>\n",
       "      <td>0.9650</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  Training  Testing\n",
       "Logistic Regression Scaled Tuned    0.9600   0.9725\n",
       "KNN Scaled Tuned                    1.0000   0.9225\n",
       "Logreg Scaled Poly Tuned            0.9625   0.9650"
      ]
     },
     "execution_count": 226,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eva_featured_tuned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "jaP8HyksP416",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 175
    },
    "id": "jaP8HyksP416",
    "outputId": "46e49851-57a2-478c-a7a4-d552febc2f85"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Training</th>\n",
       "      <th>Testing</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Logistic Regression Scaled</th>\n",
       "      <td>0.937500</td>\n",
       "      <td>0.9525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KNN Scaled</th>\n",
       "      <td>0.907500</td>\n",
       "      <td>0.8425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SVC Scaled</th>\n",
       "      <td>0.956875</td>\n",
       "      <td>0.9450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Linreg Scaled Poly</th>\n",
       "      <td>0.951875</td>\n",
       "      <td>0.9675</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Training  Testing\n",
       "Logistic Regression Scaled  0.937500   0.9525\n",
       "KNN Scaled                  0.907500   0.8425\n",
       "SVC Scaled                  0.956875   0.9450\n",
       "Linreg Scaled Poly          0.951875   0.9675"
      ]
     },
     "execution_count": 228,
     "metadata": {
      "tags": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eva_featured"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "QKbmB8cnOoDi",
   "metadata": {
    "id": "QKbmB8cnOoDi"
   },
   "source": [
    "**Conclusion**\n",
    "\n",
    "- We can see that from all the evaluation matrix for this phone classfication, we see that, ** Logistic Regression  after  hyperparameter tuning with scalling has the best accuracy** when it comes to predicting phone price range based on certain features.\n",
    "- There is huge difference between scaled and unscaled logistic regression.scaling impacts log reg the most.\n",
    "\n",
    "\n",
    "- We can see knn scaled tuned,nn tuned,xgb tuned and others overfitts. we can see it by looking the the significance difference training score and testing score "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "rlX-vTbRQPzF",
   "metadata": {
    "id": "rlX-vTbRQPzF"
   },
   "source": [
    "- Different feature selection for overfitted models, as seen in the four tables above. Please use a simpler feature selection for overfitted models in the future, Logistic regression scaled and tuned may be preferred."
   ]
  }
 ],
 "metadata": {
  "colab": {
   "name": "mobile classification and prediction-Copy2.ipynb",
   "provenance": []
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
